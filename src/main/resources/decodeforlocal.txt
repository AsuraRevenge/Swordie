CFlag<480> *__thiscall SecondaryStat::DecodeForLocal(SecondaryStat *this, CFlag<480> *result, CInPacket *iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee, ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long> *mElem)
{
  CFlag<480> *v4; // eax
  int v5; // eax
  signed __int16 v6; // ax
  SecondaryStat::VIEWELEM *v7; // eax
  int v8; // ST04_4
  SecondaryStat::VIEWELEM *v9; // eax
  int v10; // esi
  SecondaryStat::VIEWELEM *v11; // eax
  CFlag<480> *v12; // eax
  int v13; // eax
  signed __int16 v14; // ax
  SecondaryStat::VIEWELEM *v15; // eax
  int v16; // ST04_4
  SecondaryStat::VIEWELEM *v17; // eax
  int v18; // esi
  SecondaryStat::VIEWELEM *v19; // eax
  CFlag<480> *v20; // eax
  int v21; // eax
  signed __int16 v22; // ax
  SecondaryStat::VIEWELEM *v23; // eax
  int v24; // ST04_4
  SecondaryStat::VIEWELEM *v25; // eax
  int v26; // esi
  SecondaryStat::VIEWELEM *v27; // eax
  CFlag<480> *v28; // eax
  int v29; // eax
  signed __int16 v30; // ax
  SecondaryStat::VIEWELEM *v31; // eax
  int v32; // ST04_4
  SecondaryStat::VIEWELEM *v33; // eax
  int v34; // esi
  SecondaryStat::VIEWELEM *v35; // eax
  CFlag<480> *v36; // eax
  int v37; // eax
  signed __int16 v38; // ax
  SecondaryStat::VIEWELEM *v39; // eax
  int v40; // ST04_4
  SecondaryStat::VIEWELEM *v41; // eax
  int v42; // esi
  SecondaryStat::VIEWELEM *v43; // eax
  CFlag<480> *v44; // eax
  int v45; // eax
  signed __int16 v46; // ax
  SecondaryStat::VIEWELEM *v47; // eax
  int v48; // ST04_4
  SecondaryStat::VIEWELEM *v49; // eax
  int v50; // esi
  SecondaryStat::VIEWELEM *v51; // eax
  CFlag<480> *v52; // eax
  int v53; // eax
  signed __int16 v54; // ax
  SecondaryStat::VIEWELEM *v55; // eax
  int v56; // ST04_4
  SecondaryStat::VIEWELEM *v57; // eax
  int v58; // esi
  SecondaryStat::VIEWELEM *v59; // eax
  CFlag<480> *v60; // eax
  int v61; // eax
  signed __int16 v62; // ax
  SecondaryStat::VIEWELEM *v63; // eax
  int v64; // ST04_4
  SecondaryStat::VIEWELEM *v65; // eax
  int v66; // esi
  SecondaryStat::VIEWELEM *v67; // eax
  CFlag<480> *v68; // eax
  int v69; // eax
  signed __int16 v70; // ax
  SecondaryStat::VIEWELEM *v71; // eax
  int v72; // ST04_4
  SecondaryStat::VIEWELEM *v73; // eax
  int v74; // esi
  SecondaryStat::VIEWELEM *v75; // eax
  CFlag<480> *v76; // eax
  int v77; // eax
  signed __int16 v78; // ax
  SecondaryStat::VIEWELEM *v79; // eax
  int v80; // ST04_4
  SecondaryStat::VIEWELEM *v81; // eax
  int v82; // esi
  SecondaryStat::VIEWELEM *v83; // eax
  CFlag<480> *v84; // eax
  int v85; // eax
  signed __int16 v86; // ax
  SecondaryStat::VIEWELEM *v87; // eax
  int v88; // ST04_4
  SecondaryStat::VIEWELEM *v89; // eax
  int v90; // esi
  SecondaryStat::VIEWELEM *v91; // eax
  CFlag<480> *v92; // eax
  int v93; // eax
  signed __int16 v94; // ax
  SecondaryStat::VIEWELEM *v95; // eax
  int v96; // ST04_4
  SecondaryStat::VIEWELEM *v97; // eax
  int v98; // esi
  SecondaryStat::VIEWELEM *v99; // eax
  CFlag<480> *v100; // eax
  int v101; // eax
  signed __int16 v102; // ax
  SecondaryStat::VIEWELEM *v103; // eax
  int v104; // ST04_4
  SecondaryStat::VIEWELEM *v105; // eax
  int v106; // esi
  SecondaryStat::VIEWELEM *v107; // eax
  CFlag<480> *v108; // eax
  int v109; // eax
  signed __int16 v110; // ax
  SecondaryStat::VIEWELEM *v111; // eax
  int v112; // ST04_4
  SecondaryStat::VIEWELEM *v113; // eax
  int v114; // esi
  SecondaryStat::VIEWELEM *v115; // eax
  CFlag<480> *v116; // eax
  int v117; // eax
  signed __int16 v118; // ax
  SecondaryStat::VIEWELEM *v119; // eax
  int v120; // ST04_4
  SecondaryStat::VIEWELEM *v121; // eax
  int v122; // esi
  SecondaryStat::VIEWELEM *v123; // eax
  CFlag<480> *v124; // eax
  int v125; // eax
  signed __int16 v126; // ax
  SecondaryStat::VIEWELEM *v127; // eax
  int v128; // ST04_4
  SecondaryStat::VIEWELEM *v129; // eax
  int v130; // esi
  SecondaryStat::VIEWELEM *v131; // eax
  CFlag<480> *v132; // eax
  int v133; // eax
  signed __int16 v134; // ax
  SecondaryStat::VIEWELEM *v135; // eax
  int v136; // ST04_4
  SecondaryStat::VIEWELEM *v137; // eax
  int v138; // esi
  SecondaryStat::VIEWELEM *v139; // eax
  CFlag<480> *v140; // eax
  int v141; // eax
  signed __int16 v142; // ax
  SecondaryStat::VIEWELEM *v143; // eax
  int v144; // ST04_4
  SecondaryStat::VIEWELEM *v145; // eax
  int v146; // esi
  SecondaryStat::VIEWELEM *v147; // eax
  CFlag<480> *v148; // eax
  int v149; // eax
  signed __int16 v150; // ax
  SecondaryStat::VIEWELEM *v151; // eax
  int v152; // ST04_4
  SecondaryStat::VIEWELEM *v153; // eax
  int v154; // esi
  SecondaryStat::VIEWELEM *v155; // eax
  CFlag<480> *v156; // eax
  int v157; // eax
  signed __int16 v158; // ax
  SecondaryStat::VIEWELEM *v159; // eax
  int v160; // ST04_4
  SecondaryStat::VIEWELEM *v161; // eax
  int v162; // esi
  SecondaryStat::VIEWELEM *v163; // eax
  CFlag<480> *v164; // eax
  int v165; // eax
  signed __int16 v166; // ax
  SecondaryStat::VIEWELEM *v167; // eax
  int v168; // ST04_4
  SecondaryStat::VIEWELEM *v169; // eax
  int v170; // esi
  SecondaryStat::VIEWELEM *v171; // eax
  CFlag<480> *v172; // eax
  int v173; // eax
  signed __int16 v174; // ax
  SecondaryStat::VIEWELEM *v175; // eax
  int v176; // ST04_4
  SecondaryStat::VIEWELEM *v177; // eax
  int v178; // esi
  SecondaryStat::VIEWELEM *v179; // eax
  CFlag<480> *v180; // eax
  int v181; // eax
  signed __int16 v182; // ax
  SecondaryStat::VIEWELEM *v183; // eax
  int v184; // ST04_4
  SecondaryStat::VIEWELEM *v185; // eax
  int v186; // esi
  SecondaryStat::VIEWELEM *v187; // eax
  CFlag<480> *v188; // eax
  int v189; // eax
  signed __int16 v190; // ax
  SecondaryStat::VIEWELEM *v191; // eax
  int v192; // ST04_4
  SecondaryStat::VIEWELEM *v193; // eax
  int v194; // esi
  SecondaryStat::VIEWELEM *v195; // eax
  CFlag<480> *v196; // eax
  int v197; // eax
  signed __int16 v198; // ax
  SecondaryStat::VIEWELEM *v199; // eax
  int v200; // ST04_4
  SecondaryStat::VIEWELEM *v201; // eax
  int v202; // esi
  SecondaryStat::VIEWELEM *v203; // eax
  CFlag<480> *v204; // eax
  int v205; // eax
  signed __int16 v206; // ax
  SecondaryStat::VIEWELEM *v207; // eax
  int v208; // ST04_4
  SecondaryStat::VIEWELEM *v209; // eax
  int v210; // esi
  SecondaryStat::VIEWELEM *v211; // eax
  CFlag<480> *v212; // eax
  int v213; // eax
  signed __int16 v214; // ax
  SecondaryStat::VIEWELEM *v215; // eax
  int v216; // ST04_4
  SecondaryStat::VIEWELEM *v217; // eax
  int v218; // esi
  SecondaryStat::VIEWELEM *v219; // eax
  CFlag<480> *v220; // eax
  int v221; // eax
  signed __int16 v222; // ax
  SecondaryStat::VIEWELEM *v223; // eax
  int v224; // ST04_4
  SecondaryStat::VIEWELEM *v225; // eax
  int v226; // esi
  SecondaryStat::VIEWELEM *v227; // eax
  CFlag<480> *v228; // eax
  int v229; // eax
  signed __int16 v230; // ax
  SecondaryStat::VIEWELEM *v231; // eax
  int v232; // ST04_4
  SecondaryStat::VIEWELEM *v233; // eax
  int v234; // esi
  SecondaryStat::VIEWELEM *v235; // eax
  CFlag<480> *v236; // eax
  int v237; // eax
  signed __int16 v238; // ax
  SecondaryStat::VIEWELEM *v239; // eax
  int v240; // ST04_4
  SecondaryStat::VIEWELEM *v241; // eax
  int v242; // esi
  SecondaryStat::VIEWELEM *v243; // eax
  CFlag<480> *v244; // eax
  int v245; // eax
  signed __int16 v246; // ax
  SecondaryStat::VIEWELEM *v247; // eax
  int v248; // ST04_4
  SecondaryStat::VIEWELEM *v249; // eax
  int v250; // esi
  SecondaryStat::VIEWELEM *v251; // eax
  CFlag<480> *v252; // eax
  int v253; // eax
  signed __int16 v254; // ax
  SecondaryStat::VIEWELEM *v255; // eax
  int v256; // ST04_4
  SecondaryStat::VIEWELEM *v257; // eax
  int v258; // esi
  SecondaryStat::VIEWELEM *v259; // eax
  CFlag<480> *v260; // eax
  int v261; // eax
  signed __int16 v262; // ax
  SecondaryStat::VIEWELEM *v263; // eax
  int v264; // ST04_4
  SecondaryStat::VIEWELEM *v265; // eax
  int v266; // esi
  SecondaryStat::VIEWELEM *v267; // eax
  CFlag<480> *v268; // eax
  int v269; // eax
  signed __int16 v270; // ax
  SecondaryStat::VIEWELEM *v271; // eax
  int v272; // ST04_4
  SecondaryStat::VIEWELEM *v273; // eax
  int v274; // esi
  SecondaryStat::VIEWELEM *v275; // eax
  CFlag<480> *v276; // eax
  int v277; // eax
  signed __int16 v278; // ax
  SecondaryStat::VIEWELEM *v279; // eax
  int v280; // ST04_4
  SecondaryStat::VIEWELEM *v281; // eax
  int v282; // esi
  SecondaryStat::VIEWELEM *v283; // eax
  CFlag<480> *v284; // eax
  int v285; // eax
  signed __int16 v286; // ax
  SecondaryStat::VIEWELEM *v287; // eax
  int v288; // ST04_4
  SecondaryStat::VIEWELEM *v289; // eax
  int v290; // esi
  SecondaryStat::VIEWELEM *v291; // eax
  CFlag<480> *v292; // eax
  int v293; // eax
  signed __int16 v294; // ax
  SecondaryStat::VIEWELEM *v295; // eax
  int v296; // ST04_4
  SecondaryStat::VIEWELEM *v297; // eax
  int v298; // esi
  SecondaryStat::VIEWELEM *v299; // eax
  CFlag<480> *v300; // eax
  int v301; // eax
  signed __int16 v302; // ax
  SecondaryStat::VIEWELEM *v303; // eax
  int v304; // ST04_4
  SecondaryStat::VIEWELEM *v305; // eax
  int v306; // esi
  SecondaryStat::VIEWELEM *v307; // eax
  CFlag<480> *v308; // eax
  int v309; // eax
  signed __int16 v310; // ax
  SecondaryStat::VIEWELEM *v311; // eax
  int v312; // ST04_4
  SecondaryStat::VIEWELEM *v313; // eax
  int v314; // esi
  SecondaryStat::VIEWELEM *v315; // eax
  CFlag<480> *v316; // eax
  int v317; // eax
  signed __int16 v318; // ax
  SecondaryStat::VIEWELEM *v319; // eax
  int v320; // ST04_4
  SecondaryStat::VIEWELEM *v321; // eax
  int v322; // esi
  SecondaryStat::VIEWELEM *v323; // eax
  CFlag<480> *v324; // eax
  int v325; // eax
  signed __int16 v326; // ax
  SecondaryStat::VIEWELEM *v327; // eax
  int v328; // ST04_4
  SecondaryStat::VIEWELEM *v329; // eax
  int v330; // esi
  SecondaryStat::VIEWELEM *v331; // eax
  CFlag<480> *v332; // eax
  int v333; // eax
  signed __int16 v334; // ax
  SecondaryStat::VIEWELEM *v335; // eax
  int v336; // ST04_4
  SecondaryStat::VIEWELEM *v337; // eax
  int v338; // esi
  SecondaryStat::VIEWELEM *v339; // eax
  CFlag<480> *v340; // eax
  int v341; // eax
  signed __int16 v342; // ax
  SecondaryStat::VIEWELEM *v343; // eax
  int v344; // ST04_4
  SecondaryStat::VIEWELEM *v345; // eax
  int v346; // esi
  SecondaryStat::VIEWELEM *v347; // eax
  CFlag<480> *v348; // eax
  int v349; // eax
  signed __int16 v350; // ax
  SecondaryStat::VIEWELEM *v351; // eax
  int v352; // ST04_4
  SecondaryStat::VIEWELEM *v353; // eax
  int v354; // esi
  SecondaryStat::VIEWELEM *v355; // eax
  CFlag<480> *v356; // eax
  int v357; // eax
  signed __int16 v358; // ax
  SecondaryStat::VIEWELEM *v359; // eax
  int v360; // ST04_4
  SecondaryStat::VIEWELEM *v361; // eax
  int v362; // esi
  SecondaryStat::VIEWELEM *v363; // eax
  CFlag<480> *v364; // eax
  int v365; // eax
  signed __int16 v366; // ax
  SecondaryStat::VIEWELEM *v367; // eax
  int v368; // ST04_4
  SecondaryStat::VIEWELEM *v369; // eax
  int v370; // esi
  SecondaryStat::VIEWELEM *v371; // eax
  CFlag<480> *v372; // eax
  int v373; // eax
  signed __int16 v374; // ax
  SecondaryStat::VIEWELEM *v375; // eax
  int v376; // ST04_4
  SecondaryStat::VIEWELEM *v377; // eax
  int v378; // esi
  SecondaryStat::VIEWELEM *v379; // eax
  CFlag<480> *v380; // eax
  int v381; // eax
  signed __int16 v382; // ax
  SecondaryStat::VIEWELEM *v383; // eax
  int v384; // ST04_4
  SecondaryStat::VIEWELEM *v385; // eax
  int v386; // esi
  SecondaryStat::VIEWELEM *v387; // eax
  CFlag<480> *v388; // eax
  int v389; // eax
  signed __int16 v390; // ax
  SecondaryStat::VIEWELEM *v391; // eax
  int v392; // ST04_4
  SecondaryStat::VIEWELEM *v393; // eax
  int v394; // esi
  SecondaryStat::VIEWELEM *v395; // eax
  CFlag<480> *v396; // eax
  int v397; // eax
  signed __int16 v398; // ax
  SecondaryStat::VIEWELEM *v399; // eax
  int v400; // ST04_4
  SecondaryStat::VIEWELEM *v401; // eax
  int v402; // esi
  SecondaryStat::VIEWELEM *v403; // eax
  CFlag<480> *v404; // eax
  int v405; // eax
  signed __int16 v406; // ax
  SecondaryStat::VIEWELEM *v407; // eax
  int v408; // ST04_4
  SecondaryStat::VIEWELEM *v409; // eax
  int v410; // esi
  SecondaryStat::VIEWELEM *v411; // eax
  CFlag<480> *v412; // eax
  int v413; // eax
  signed __int16 v414; // ax
  SecondaryStat::VIEWELEM *v415; // eax
  int v416; // ST04_4
  SecondaryStat::VIEWELEM *v417; // eax
  int v418; // esi
  SecondaryStat::VIEWELEM *v419; // eax
  CFlag<480> *v420; // eax
  int v421; // eax
  signed __int16 v422; // ax
  SecondaryStat::VIEWELEM *v423; // eax
  int v424; // ST04_4
  SecondaryStat::VIEWELEM *v425; // eax
  int v426; // esi
  SecondaryStat::VIEWELEM *v427; // eax
  CFlag<480> *v428; // eax
  int v429; // eax
  signed __int16 v430; // ax
  SecondaryStat::VIEWELEM *v431; // eax
  int v432; // ST04_4
  SecondaryStat::VIEWELEM *v433; // eax
  int v434; // esi
  SecondaryStat::VIEWELEM *v435; // eax
  CFlag<480> *v436; // eax
  int v437; // eax
  signed __int16 v438; // ax
  SecondaryStat::VIEWELEM *v439; // eax
  int v440; // ST04_4
  SecondaryStat::VIEWELEM *v441; // eax
  int v442; // esi
  SecondaryStat::VIEWELEM *v443; // eax
  CFlag<480> *v444; // eax
  int v445; // eax
  signed __int16 v446; // ax
  SecondaryStat::VIEWELEM *v447; // eax
  int v448; // ST04_4
  SecondaryStat::VIEWELEM *v449; // eax
  int v450; // esi
  SecondaryStat::VIEWELEM *v451; // eax
  CFlag<480> *v452; // eax
  int v453; // eax
  signed __int16 v454; // ax
  SecondaryStat::VIEWELEM *v455; // eax
  int v456; // ST04_4
  SecondaryStat::VIEWELEM *v457; // eax
  int v458; // esi
  SecondaryStat::VIEWELEM *v459; // eax
  CFlag<480> *v460; // eax
  int v461; // eax
  signed __int16 v462; // ax
  SecondaryStat::VIEWELEM *v463; // eax
  int v464; // ST04_4
  SecondaryStat::VIEWELEM *v465; // eax
  int v466; // esi
  SecondaryStat::VIEWELEM *v467; // eax
  CFlag<480> *v468; // eax
  int v469; // eax
  signed __int16 v470; // ax
  SecondaryStat::VIEWELEM *v471; // eax
  int v472; // ST04_4
  SecondaryStat::VIEWELEM *v473; // eax
  int v474; // esi
  SecondaryStat::VIEWELEM *v475; // eax
  CFlag<480> *v476; // eax
  int v477; // eax
  signed __int16 v478; // ax
  SecondaryStat::VIEWELEM *v479; // eax
  int v480; // ST04_4
  SecondaryStat::VIEWELEM *v481; // eax
  int v482; // esi
  SecondaryStat::VIEWELEM *v483; // eax
  CFlag<480> *v484; // eax
  int v485; // eax
  signed __int16 v486; // ax
  SecondaryStat::VIEWELEM *v487; // eax
  int v488; // ST04_4
  SecondaryStat::VIEWELEM *v489; // eax
  int v490; // esi
  SecondaryStat::VIEWELEM *v491; // eax
  CFlag<480> *v492; // eax
  int v493; // eax
  signed __int16 v494; // ax
  SecondaryStat::VIEWELEM *v495; // eax
  int v496; // ST04_4
  SecondaryStat::VIEWELEM *v497; // eax
  int v498; // esi
  SecondaryStat::VIEWELEM *v499; // eax
  CFlag<480> *v500; // eax
  int v501; // eax
  signed __int16 v502; // ax
  SecondaryStat::VIEWELEM *v503; // eax
  int v504; // ST04_4
  SecondaryStat::VIEWELEM *v505; // eax
  int v506; // esi
  SecondaryStat::VIEWELEM *v507; // eax
  CFlag<480> *v508; // eax
  int v509; // eax
  signed __int16 v510; // ax
  SecondaryStat::VIEWELEM *v511; // eax
  int v512; // ST04_4
  SecondaryStat::VIEWELEM *v513; // eax
  int v514; // esi
  SecondaryStat::VIEWELEM *v515; // eax
  CFlag<480> *v516; // eax
  int v517; // eax
  signed __int16 v518; // ax
  SecondaryStat::VIEWELEM *v519; // eax
  int v520; // ST04_4
  SecondaryStat::VIEWELEM *v521; // eax
  int v522; // esi
  SecondaryStat::VIEWELEM *v523; // eax
  CFlag<480> *v524; // eax
  int v525; // eax
  signed __int16 v526; // ax
  SecondaryStat::VIEWELEM *v527; // eax
  int v528; // ST04_4
  SecondaryStat::VIEWELEM *v529; // eax
  int v530; // esi
  SecondaryStat::VIEWELEM *v531; // eax
  CFlag<480> *v532; // eax
  int v533; // eax
  signed __int16 v534; // ax
  SecondaryStat::VIEWELEM *v535; // eax
  int v536; // ST04_4
  SecondaryStat::VIEWELEM *v537; // eax
  int v538; // esi
  SecondaryStat::VIEWELEM *v539; // eax
  CFlag<480> *v540; // eax
  int v541; // eax
  signed __int16 v542; // ax
  SecondaryStat::VIEWELEM *v543; // eax
  int v544; // ST04_4
  SecondaryStat::VIEWELEM *v545; // eax
  int v546; // esi
  SecondaryStat::VIEWELEM *v547; // eax
  CFlag<480> *v548; // eax
  int v549; // eax
  signed __int16 v550; // ax
  SecondaryStat::VIEWELEM *v551; // eax
  int v552; // ST04_4
  SecondaryStat::VIEWELEM *v553; // eax
  int v554; // esi
  SecondaryStat::VIEWELEM *v555; // eax
  CFlag<480> *v556; // eax
  int v557; // eax
  signed __int16 v558; // ax
  SecondaryStat::VIEWELEM *v559; // eax
  int v560; // ST04_4
  SecondaryStat::VIEWELEM *v561; // eax
  int v562; // esi
  SecondaryStat::VIEWELEM *v563; // eax
  CFlag<480> *v564; // eax
  int v565; // eax
  signed __int16 v566; // ax
  SecondaryStat::VIEWELEM *v567; // eax
  int v568; // ST04_4
  SecondaryStat::VIEWELEM *v569; // eax
  int v570; // esi
  SecondaryStat::VIEWELEM *v571; // eax
  CFlag<480> *v572; // eax
  int v573; // eax
  signed __int16 v574; // ax
  SecondaryStat::VIEWELEM *v575; // eax
  int v576; // ST04_4
  SecondaryStat::VIEWELEM *v577; // eax
  int v578; // esi
  SecondaryStat::VIEWELEM *v579; // eax
  CFlag<480> *v580; // eax
  int v581; // eax
  signed __int16 v582; // ax
  SecondaryStat::VIEWELEM *v583; // eax
  int v584; // ST04_4
  SecondaryStat::VIEWELEM *v585; // eax
  int v586; // esi
  SecondaryStat::VIEWELEM *v587; // eax
  CFlag<480> *v588; // eax
  int v589; // eax
  signed __int16 v590; // ax
  SecondaryStat::VIEWELEM *v591; // eax
  int v592; // ST04_4
  SecondaryStat::VIEWELEM *v593; // eax
  int v594; // esi
  SecondaryStat::VIEWELEM *v595; // eax
  CFlag<480> *v596; // eax
  int v597; // eax
  signed __int16 v598; // ax
  SecondaryStat::VIEWELEM *v599; // eax
  int v600; // ST04_4
  SecondaryStat::VIEWELEM *v601; // eax
  int v602; // esi
  SecondaryStat::VIEWELEM *v603; // eax
  CFlag<480> *v604; // eax
  int v605; // eax
  signed __int16 v606; // ax
  SecondaryStat::VIEWELEM *v607; // eax
  int v608; // ST04_4
  SecondaryStat::VIEWELEM *v609; // eax
  int v610; // esi
  SecondaryStat::VIEWELEM *v611; // eax
  CFlag<480> *v612; // eax
  int v613; // eax
  signed __int16 v614; // ax
  SecondaryStat::VIEWELEM *v615; // eax
  int v616; // ST04_4
  SecondaryStat::VIEWELEM *v617; // eax
  int v618; // esi
  SecondaryStat::VIEWELEM *v619; // eax
  CFlag<480> *v620; // eax
  int v621; // eax
  signed __int16 v622; // ax
  SecondaryStat::VIEWELEM *v623; // eax
  int v624; // ST04_4
  SecondaryStat::VIEWELEM *v625; // eax
  int v626; // esi
  SecondaryStat::VIEWELEM *v627; // eax
  CFlag<480> *v628; // eax
  int v629; // eax
  signed __int16 v630; // ax
  SecondaryStat::VIEWELEM *v631; // eax
  int v632; // ST04_4
  SecondaryStat::VIEWELEM *v633; // eax
  int v634; // esi
  SecondaryStat::VIEWELEM *v635; // eax
  CFlag<480> *v636; // eax
  int v637; // eax
  signed __int16 v638; // ax
  SecondaryStat::VIEWELEM *v639; // eax
  int v640; // ST04_4
  SecondaryStat::VIEWELEM *v641; // eax
  int v642; // esi
  SecondaryStat::VIEWELEM *v643; // eax
  CFlag<480> *v644; // eax
  int v645; // eax
  signed __int16 v646; // ax
  SecondaryStat::VIEWELEM *v647; // eax
  int v648; // ST04_4
  SecondaryStat::VIEWELEM *v649; // eax
  int v650; // esi
  SecondaryStat::VIEWELEM *v651; // eax
  CFlag<480> *v652; // eax
  int v653; // eax
  signed __int16 v654; // ax
  SecondaryStat::VIEWELEM *v655; // eax
  int v656; // ST04_4
  SecondaryStat::VIEWELEM *v657; // eax
  int v658; // esi
  SecondaryStat::VIEWELEM *v659; // eax
  CFlag<480> *v660; // eax
  int v661; // eax
  signed __int16 v662; // ax
  SecondaryStat::VIEWELEM *v663; // eax
  int v664; // ST04_4
  SecondaryStat::VIEWELEM *v665; // eax
  int v666; // esi
  SecondaryStat::VIEWELEM *v667; // eax
  CFlag<480> *v668; // eax
  int v669; // eax
  signed __int16 v670; // ax
  SecondaryStat::VIEWELEM *v671; // eax
  int v672; // ST04_4
  SecondaryStat::VIEWELEM *v673; // eax
  int v674; // esi
  SecondaryStat::VIEWELEM *v675; // eax
  CFlag<480> *v676; // eax
  int v677; // eax
  signed __int16 v678; // ax
  SecondaryStat::VIEWELEM *v679; // eax
  int v680; // ST04_4
  SecondaryStat::VIEWELEM *v681; // eax
  int v682; // esi
  SecondaryStat::VIEWELEM *v683; // eax
  CFlag<480> *v684; // eax
  int v685; // eax
  signed __int16 v686; // ax
  SecondaryStat::VIEWELEM *v687; // eax
  int v688; // ST04_4
  SecondaryStat::VIEWELEM *v689; // eax
  int v690; // esi
  SecondaryStat::VIEWELEM *v691; // eax
  CFlag<480> *v692; // eax
  int v693; // eax
  signed __int16 v694; // ax
  SecondaryStat::VIEWELEM *v695; // eax
  int v696; // ST04_4
  SecondaryStat::VIEWELEM *v697; // eax
  int v698; // esi
  SecondaryStat::VIEWELEM *v699; // eax
  CFlag<480> *v700; // eax
  int v701; // eax
  signed __int16 v702; // ax
  SecondaryStat::VIEWELEM *v703; // eax
  int v704; // ST04_4
  SecondaryStat::VIEWELEM *v705; // eax
  int v706; // esi
  SecondaryStat::VIEWELEM *v707; // eax
  CFlag<480> *v708; // eax
  int v709; // eax
  signed __int16 v710; // ax
  SecondaryStat::VIEWELEM *v711; // eax
  int v712; // ST04_4
  SecondaryStat::VIEWELEM *v713; // eax
  int v714; // esi
  SecondaryStat::VIEWELEM *v715; // eax
  CFlag<480> *v716; // eax
  int v717; // eax
  signed __int16 v718; // ax
  SecondaryStat::VIEWELEM *v719; // eax
  int v720; // ST04_4
  SecondaryStat::VIEWELEM *v721; // eax
  int v722; // esi
  SecondaryStat::VIEWELEM *v723; // eax
  CFlag<480> *v724; // eax
  int v725; // eax
  signed __int16 v726; // ax
  SecondaryStat::VIEWELEM *v727; // eax
  int v728; // ST04_4
  SecondaryStat::VIEWELEM *v729; // eax
  int v730; // esi
  SecondaryStat::VIEWELEM *v731; // eax
  CFlag<480> *v732; // eax
  int v733; // eax
  signed __int16 v734; // ax
  SecondaryStat::VIEWELEM *v735; // eax
  int v736; // ST04_4
  SecondaryStat::VIEWELEM *v737; // eax
  int v738; // esi
  SecondaryStat::VIEWELEM *v739; // eax
  CFlag<480> *v740; // eax
  int v741; // eax
  signed __int16 v742; // ax
  SecondaryStat::VIEWELEM *v743; // eax
  int v744; // ST04_4
  SecondaryStat::VIEWELEM *v745; // eax
  int v746; // esi
  SecondaryStat::VIEWELEM *v747; // eax
  CFlag<480> *v748; // eax
  int v749; // eax
  signed __int16 v750; // ax
  SecondaryStat::VIEWELEM *v751; // eax
  int v752; // ST04_4
  SecondaryStat::VIEWELEM *v753; // eax
  int v754; // esi
  SecondaryStat::VIEWELEM *v755; // eax
  CFlag<480> *v756; // eax
  int v757; // eax
  signed __int16 v758; // ax
  SecondaryStat::VIEWELEM *v759; // eax
  int v760; // ST04_4
  SecondaryStat::VIEWELEM *v761; // eax
  int v762; // esi
  SecondaryStat::VIEWELEM *v763; // eax
  CFlag<480> *v764; // eax
  int v765; // eax
  signed __int16 v766; // ax
  SecondaryStat::VIEWELEM *v767; // eax
  int v768; // ST04_4
  SecondaryStat::VIEWELEM *v769; // eax
  int v770; // esi
  SecondaryStat::VIEWELEM *v771; // eax
  CFlag<480> *v772; // eax
  int v773; // eax
  signed __int16 v774; // ax
  SecondaryStat::VIEWELEM *v775; // eax
  int v776; // ST04_4
  SecondaryStat::VIEWELEM *v777; // eax
  int v778; // esi
  SecondaryStat::VIEWELEM *v779; // eax
  CFlag<480> *v780; // eax
  int v781; // eax
  signed __int16 v782; // ax
  SecondaryStat::VIEWELEM *v783; // eax
  int v784; // ST04_4
  SecondaryStat::VIEWELEM *v785; // eax
  int v786; // esi
  SecondaryStat::VIEWELEM *v787; // eax
  CFlag<480> *v788; // eax
  int v789; // eax
  signed __int16 v790; // ax
  SecondaryStat::VIEWELEM *v791; // eax
  int v792; // ST04_4
  SecondaryStat::VIEWELEM *v793; // eax
  int v794; // esi
  SecondaryStat::VIEWELEM *v795; // eax
  CFlag<480> *v796; // eax
  int v797; // eax
  signed __int16 v798; // ax
  SecondaryStat::VIEWELEM *v799; // eax
  int v800; // ST04_4
  SecondaryStat::VIEWELEM *v801; // eax
  int v802; // esi
  SecondaryStat::VIEWELEM *v803; // eax
  CFlag<480> *v804; // eax
  int v805; // eax
  signed __int16 v806; // ax
  SecondaryStat::VIEWELEM *v807; // eax
  int v808; // ST04_4
  SecondaryStat::VIEWELEM *v809; // eax
  int v810; // esi
  SecondaryStat::VIEWELEM *v811; // eax
  CFlag<480> *v812; // eax
  int v813; // eax
  signed __int16 v814; // ax
  SecondaryStat::VIEWELEM *v815; // eax
  int v816; // ST04_4
  SecondaryStat::VIEWELEM *v817; // eax
  int v818; // esi
  SecondaryStat::VIEWELEM *v819; // eax
  CFlag<480> *v820; // eax
  int v821; // eax
  signed __int16 v822; // ax
  SecondaryStat::VIEWELEM *v823; // eax
  int v824; // ST04_4
  SecondaryStat::VIEWELEM *v825; // eax
  int v826; // esi
  SecondaryStat::VIEWELEM *v827; // eax
  CFlag<480> *v828; // eax
  int v829; // eax
  signed __int16 v830; // ax
  SecondaryStat::VIEWELEM *v831; // eax
  int v832; // ST04_4
  SecondaryStat::VIEWELEM *v833; // eax
  int v834; // esi
  SecondaryStat::VIEWELEM *v835; // eax
  CFlag<480> *v836; // eax
  int v837; // eax
  signed __int16 v838; // ax
  SecondaryStat::VIEWELEM *v839; // eax
  int v840; // ST04_4
  SecondaryStat::VIEWELEM *v841; // eax
  int v842; // esi
  SecondaryStat::VIEWELEM *v843; // eax
  CFlag<480> *v844; // eax
  int v845; // eax
  signed __int16 v846; // ax
  SecondaryStat::VIEWELEM *v847; // eax
  int v848; // ST04_4
  SecondaryStat::VIEWELEM *v849; // eax
  int v850; // esi
  SecondaryStat::VIEWELEM *v851; // eax
  CFlag<480> *v852; // eax
  int v853; // eax
  signed __int16 v854; // ax
  SecondaryStat::VIEWELEM *v855; // eax
  int v856; // ST04_4
  SecondaryStat::VIEWELEM *v857; // eax
  int v858; // esi
  SecondaryStat::VIEWELEM *v859; // eax
  CFlag<480> *v860; // eax
  int v861; // eax
  signed __int16 v862; // ax
  SecondaryStat::VIEWELEM *v863; // eax
  int v864; // ST04_4
  SecondaryStat::VIEWELEM *v865; // eax
  int v866; // esi
  SecondaryStat::VIEWELEM *v867; // eax
  CFlag<480> *v868; // eax
  int v869; // eax
  signed __int16 v870; // ax
  SecondaryStat::VIEWELEM *v871; // eax
  int v872; // ST04_4
  SecondaryStat::VIEWELEM *v873; // eax
  int v874; // esi
  SecondaryStat::VIEWELEM *v875; // eax
  CFlag<480> *v876; // eax
  int v877; // eax
  signed __int16 v878; // ax
  SecondaryStat::VIEWELEM *v879; // eax
  int v880; // ST04_4
  SecondaryStat::VIEWELEM *v881; // eax
  int v882; // esi
  SecondaryStat::VIEWELEM *v883; // eax
  CFlag<480> *v884; // eax
  int v885; // eax
  signed __int16 v886; // ax
  SecondaryStat::VIEWELEM *v887; // eax
  int v888; // ST04_4
  SecondaryStat::VIEWELEM *v889; // eax
  int v890; // esi
  SecondaryStat::VIEWELEM *v891; // eax
  CFlag<480> *v892; // eax
  int v893; // eax
  signed __int16 v894; // ax
  SecondaryStat::VIEWELEM *v895; // eax
  int v896; // ST04_4
  SecondaryStat::VIEWELEM *v897; // eax
  int v898; // esi
  SecondaryStat::VIEWELEM *v899; // eax
  CFlag<480> *v900; // eax
  int v901; // eax
  signed __int16 v902; // ax
  SecondaryStat::VIEWELEM *v903; // eax
  int v904; // ST04_4
  SecondaryStat::VIEWELEM *v905; // eax
  int v906; // esi
  SecondaryStat::VIEWELEM *v907; // eax
  CFlag<480> *v908; // eax
  int v909; // eax
  signed __int16 v910; // ax
  SecondaryStat::VIEWELEM *v911; // eax
  int v912; // ST04_4
  SecondaryStat::VIEWELEM *v913; // eax
  int v914; // esi
  SecondaryStat::VIEWELEM *v915; // eax
  CFlag<480> *v916; // eax
  int v917; // eax
  signed __int16 v918; // ax
  SecondaryStat::VIEWELEM *v919; // eax
  int v920; // ST04_4
  SecondaryStat::VIEWELEM *v921; // eax
  int v922; // esi
  SecondaryStat::VIEWELEM *v923; // eax
  CFlag<480> *v924; // eax
  int v925; // eax
  signed __int16 v926; // ax
  SecondaryStat::VIEWELEM *v927; // eax
  int v928; // ST04_4
  SecondaryStat::VIEWELEM *v929; // eax
  int v930; // esi
  SecondaryStat::VIEWELEM *v931; // eax
  CFlag<480> *v932; // eax
  int v933; // eax
  signed __int16 v934; // ax
  SecondaryStat::VIEWELEM *v935; // eax
  int v936; // ST04_4
  SecondaryStat::VIEWELEM *v937; // eax
  int v938; // esi
  SecondaryStat::VIEWELEM *v939; // eax
  CFlag<480> *v940; // eax
  int v941; // eax
  signed __int16 v942; // ax
  SecondaryStat::VIEWELEM *v943; // eax
  int v944; // ST04_4
  SecondaryStat::VIEWELEM *v945; // eax
  int v946; // esi
  SecondaryStat::VIEWELEM *v947; // eax
  CFlag<480> *v948; // eax
  int v949; // eax
  signed __int16 v950; // ax
  SecondaryStat::VIEWELEM *v951; // eax
  int v952; // ST04_4
  SecondaryStat::VIEWELEM *v953; // eax
  int v954; // esi
  SecondaryStat::VIEWELEM *v955; // eax
  CFlag<480> *v956; // eax
  int v957; // eax
  signed __int16 v958; // ax
  SecondaryStat::VIEWELEM *v959; // eax
  int v960; // ST04_4
  SecondaryStat::VIEWELEM *v961; // eax
  int v962; // esi
  SecondaryStat::VIEWELEM *v963; // eax
  CFlag<480> *v964; // eax
  int v965; // eax
  signed __int16 v966; // ax
  SecondaryStat::VIEWELEM *v967; // eax
  int v968; // ST04_4
  SecondaryStat::VIEWELEM *v969; // eax
  int v970; // esi
  SecondaryStat::VIEWELEM *v971; // eax
  CFlag<480> *v972; // eax
  int v973; // eax
  signed __int16 v974; // ax
  SecondaryStat::VIEWELEM *v975; // eax
  int v976; // ST04_4
  SecondaryStat::VIEWELEM *v977; // eax
  int v978; // esi
  SecondaryStat::VIEWELEM *v979; // eax
  CFlag<480> *v980; // eax
  int v981; // eax
  signed __int16 v982; // ax
  SecondaryStat::VIEWELEM *v983; // eax
  int v984; // ST04_4
  SecondaryStat::VIEWELEM *v985; // eax
  int v986; // esi
  SecondaryStat::VIEWELEM *v987; // eax
  CFlag<480> *v988; // eax
  int v989; // eax
  signed __int16 v990; // ax
  SecondaryStat::VIEWELEM *v991; // eax
  int v992; // ST04_4
  SecondaryStat::VIEWELEM *v993; // eax
  int v994; // esi
  SecondaryStat::VIEWELEM *v995; // eax
  CFlag<480> *v996; // eax
  int v997; // eax
  signed __int16 v998; // ax
  SecondaryStat::VIEWELEM *v999; // eax
  int v1000; // ST04_4
  SecondaryStat::VIEWELEM *v1001; // eax
  int v1002; // esi
  SecondaryStat::VIEWELEM *v1003; // eax
  CFlag<480> *v1004; // eax
  int v1005; // eax
  signed __int16 v1006; // ax
  SecondaryStat::VIEWELEM *v1007; // eax
  int v1008; // ST04_4
  SecondaryStat::VIEWELEM *v1009; // eax
  int v1010; // esi
  SecondaryStat::VIEWELEM *v1011; // eax
  CFlag<480> *v1012; // eax
  int v1013; // eax
  signed __int16 v1014; // ax
  SecondaryStat::VIEWELEM *v1015; // eax
  int v1016; // ST04_4
  SecondaryStat::VIEWELEM *v1017; // eax
  int v1018; // esi
  SecondaryStat::VIEWELEM *v1019; // eax
  CFlag<480> *v1020; // eax
  int v1021; // eax
  signed __int16 v1022; // ax
  SecondaryStat::VIEWELEM *v1023; // eax
  int v1024; // ST04_4
  SecondaryStat::VIEWELEM *v1025; // eax
  int v1026; // esi
  SecondaryStat::VIEWELEM *v1027; // eax
  CFlag<480> *v1028; // eax
  int v1029; // eax
  signed __int16 v1030; // ax
  SecondaryStat::VIEWELEM *v1031; // eax
  int v1032; // ST04_4
  SecondaryStat::VIEWELEM *v1033; // eax
  int v1034; // esi
  SecondaryStat::VIEWELEM *v1035; // eax
  CFlag<480> *v1036; // eax
  int v1037; // eax
  signed __int16 v1038; // ax
  SecondaryStat::VIEWELEM *v1039; // eax
  int v1040; // ST04_4
  SecondaryStat::VIEWELEM *v1041; // eax
  int v1042; // esi
  SecondaryStat::VIEWELEM *v1043; // eax
  CFlag<480> *v1044; // eax
  int v1045; // eax
  signed __int16 v1046; // ax
  SecondaryStat::VIEWELEM *v1047; // eax
  int v1048; // ST04_4
  SecondaryStat::VIEWELEM *v1049; // eax
  int v1050; // esi
  SecondaryStat::VIEWELEM *v1051; // eax
  CFlag<480> *v1052; // eax
  int v1053; // eax
  signed __int16 v1054; // ax
  SecondaryStat::VIEWELEM *v1055; // eax
  int v1056; // ST04_4
  SecondaryStat::VIEWELEM *v1057; // eax
  int v1058; // esi
  SecondaryStat::VIEWELEM *v1059; // eax
  CFlag<480> *v1060; // eax
  int v1061; // eax
  signed __int16 v1062; // ax
  SecondaryStat::VIEWELEM *v1063; // eax
  int v1064; // ST04_4
  SecondaryStat::VIEWELEM *v1065; // eax
  int v1066; // esi
  SecondaryStat::VIEWELEM *v1067; // eax
  CFlag<480> *v1068; // eax
  int v1069; // eax
  signed __int16 v1070; // ax
  SecondaryStat::VIEWELEM *v1071; // eax
  int v1072; // ST04_4
  SecondaryStat::VIEWELEM *v1073; // eax
  int v1074; // esi
  SecondaryStat::VIEWELEM *v1075; // eax
  CFlag<480> *v1076; // eax
  int v1077; // eax
  signed __int16 v1078; // ax
  SecondaryStat::VIEWELEM *v1079; // eax
  int v1080; // ST04_4
  SecondaryStat::VIEWELEM *v1081; // eax
  int v1082; // esi
  SecondaryStat::VIEWELEM *v1083; // eax
  CFlag<480> *v1084; // eax
  int v1085; // eax
  signed __int16 v1086; // ax
  SecondaryStat::VIEWELEM *v1087; // eax
  int v1088; // ST04_4
  SecondaryStat::VIEWELEM *v1089; // eax
  int v1090; // esi
  SecondaryStat::VIEWELEM *v1091; // eax
  CFlag<480> *v1092; // eax
  int v1093; // eax
  signed __int16 v1094; // ax
  SecondaryStat::VIEWELEM *v1095; // eax
  int v1096; // ST04_4
  SecondaryStat::VIEWELEM *v1097; // eax
  int v1098; // esi
  SecondaryStat::VIEWELEM *v1099; // eax
  CFlag<480> *v1100; // eax
  int v1101; // eax
  signed __int16 v1102; // ax
  SecondaryStat::VIEWELEM *v1103; // eax
  int v1104; // ST04_4
  SecondaryStat::VIEWELEM *v1105; // eax
  int v1106; // esi
  SecondaryStat::VIEWELEM *v1107; // eax
  CFlag<480> *v1108; // eax
  int v1109; // eax
  signed __int16 v1110; // ax
  SecondaryStat::VIEWELEM *v1111; // eax
  int v1112; // ST04_4
  SecondaryStat::VIEWELEM *v1113; // eax
  int v1114; // esi
  SecondaryStat::VIEWELEM *v1115; // eax
  CFlag<480> *v1116; // eax
  int v1117; // eax
  signed __int16 v1118; // ax
  SecondaryStat::VIEWELEM *v1119; // eax
  int v1120; // ST04_4
  SecondaryStat::VIEWELEM *v1121; // eax
  int v1122; // esi
  SecondaryStat::VIEWELEM *v1123; // eax
  CFlag<480> *v1124; // eax
  int v1125; // eax
  signed __int16 v1126; // ax
  SecondaryStat::VIEWELEM *v1127; // eax
  int v1128; // ST04_4
  SecondaryStat::VIEWELEM *v1129; // eax
  int v1130; // esi
  SecondaryStat::VIEWELEM *v1131; // eax
  CFlag<480> *v1132; // eax
  int v1133; // eax
  signed __int16 v1134; // ax
  SecondaryStat::VIEWELEM *v1135; // eax
  int v1136; // ST04_4
  SecondaryStat::VIEWELEM *v1137; // eax
  int v1138; // esi
  SecondaryStat::VIEWELEM *v1139; // eax
  CFlag<480> *v1140; // eax
  int v1141; // eax
  signed __int16 v1142; // ax
  SecondaryStat::VIEWELEM *v1143; // eax
  int v1144; // ST04_4
  SecondaryStat::VIEWELEM *v1145; // eax
  int v1146; // esi
  SecondaryStat::VIEWELEM *v1147; // eax
  CFlag<480> *v1148; // eax
  int v1149; // eax
  signed __int16 v1150; // ax
  SecondaryStat::VIEWELEM *v1151; // eax
  int v1152; // ST04_4
  SecondaryStat::VIEWELEM *v1153; // eax
  int v1154; // esi
  SecondaryStat::VIEWELEM *v1155; // eax
  CFlag<480> *v1156; // eax
  int v1157; // eax
  signed __int16 v1158; // ax
  SecondaryStat::VIEWELEM *v1159; // eax
  int v1160; // ST04_4
  SecondaryStat::VIEWELEM *v1161; // eax
  int v1162; // esi
  SecondaryStat::VIEWELEM *v1163; // eax
  CFlag<480> *v1164; // eax
  int v1165; // eax
  signed __int16 v1166; // ax
  SecondaryStat::VIEWELEM *v1167; // eax
  int v1168; // ST04_4
  SecondaryStat::VIEWELEM *v1169; // eax
  int v1170; // esi
  SecondaryStat::VIEWELEM *v1171; // eax
  CFlag<480> *v1172; // eax
  int v1173; // eax
  signed __int16 v1174; // ax
  SecondaryStat::VIEWELEM *v1175; // eax
  int v1176; // ST04_4
  SecondaryStat::VIEWELEM *v1177; // eax
  int v1178; // esi
  SecondaryStat::VIEWELEM *v1179; // eax
  CFlag<480> *v1180; // eax
  int v1181; // eax
  signed __int16 v1182; // ax
  SecondaryStat::VIEWELEM *v1183; // eax
  int v1184; // ST04_4
  SecondaryStat::VIEWELEM *v1185; // eax
  int v1186; // esi
  SecondaryStat::VIEWELEM *v1187; // eax
  CFlag<480> *v1188; // eax
  int v1189; // eax
  signed __int16 v1190; // ax
  SecondaryStat::VIEWELEM *v1191; // eax
  int v1192; // ST04_4
  SecondaryStat::VIEWELEM *v1193; // eax
  int v1194; // esi
  SecondaryStat::VIEWELEM *v1195; // eax
  CFlag<480> *v1196; // eax
  int v1197; // eax
  signed __int16 v1198; // ax
  SecondaryStat::VIEWELEM *v1199; // eax
  int v1200; // ST04_4
  SecondaryStat::VIEWELEM *v1201; // eax
  int v1202; // esi
  SecondaryStat::VIEWELEM *v1203; // eax
  CFlag<480> *v1204; // eax
  int v1205; // eax
  signed __int16 v1206; // ax
  SecondaryStat::VIEWELEM *v1207; // eax
  int v1208; // ST04_4
  SecondaryStat::VIEWELEM *v1209; // eax
  int v1210; // esi
  SecondaryStat::VIEWELEM *v1211; // eax
  CFlag<480> *v1212; // eax
  int v1213; // eax
  signed __int16 v1214; // ax
  SecondaryStat::VIEWELEM *v1215; // eax
  int v1216; // ST04_4
  SecondaryStat::VIEWELEM *v1217; // eax
  int v1218; // esi
  SecondaryStat::VIEWELEM *v1219; // eax
  CFlag<480> *v1220; // eax
  int v1221; // eax
  signed __int16 v1222; // ax
  SecondaryStat::VIEWELEM *v1223; // eax
  int v1224; // ST04_4
  SecondaryStat::VIEWELEM *v1225; // eax
  int v1226; // esi
  SecondaryStat::VIEWELEM *v1227; // eax
  CFlag<480> *v1228; // eax
  int v1229; // eax
  signed __int16 v1230; // ax
  SecondaryStat::VIEWELEM *v1231; // eax
  int v1232; // ST04_4
  SecondaryStat::VIEWELEM *v1233; // eax
  int v1234; // esi
  SecondaryStat::VIEWELEM *v1235; // eax
  CFlag<480> *v1236; // eax
  int v1237; // eax
  signed __int16 v1238; // ax
  SecondaryStat::VIEWELEM *v1239; // eax
  int v1240; // ST04_4
  SecondaryStat::VIEWELEM *v1241; // eax
  int v1242; // esi
  SecondaryStat::VIEWELEM *v1243; // eax
  CFlag<480> *v1244; // eax
  int v1245; // eax
  signed __int16 v1246; // ax
  SecondaryStat::VIEWELEM *v1247; // eax
  int v1248; // ST04_4
  SecondaryStat::VIEWELEM *v1249; // eax
  int v1250; // esi
  SecondaryStat::VIEWELEM *v1251; // eax
  CFlag<480> *v1252; // eax
  int v1253; // eax
  signed __int16 v1254; // ax
  SecondaryStat::VIEWELEM *v1255; // eax
  int v1256; // ST04_4
  SecondaryStat::VIEWELEM *v1257; // eax
  int v1258; // esi
  SecondaryStat::VIEWELEM *v1259; // eax
  CFlag<480> *v1260; // eax
  int v1261; // eax
  signed __int16 v1262; // ax
  SecondaryStat::VIEWELEM *v1263; // eax
  int v1264; // ST04_4
  SecondaryStat::VIEWELEM *v1265; // eax
  int v1266; // esi
  SecondaryStat::VIEWELEM *v1267; // eax
  CFlag<480> *v1268; // eax
  int v1269; // eax
  signed __int16 v1270; // ax
  SecondaryStat::VIEWELEM *v1271; // eax
  int v1272; // ST04_4
  SecondaryStat::VIEWELEM *v1273; // eax
  int v1274; // esi
  SecondaryStat::VIEWELEM *v1275; // eax
  CFlag<480> *v1276; // eax
  int v1277; // eax
  signed __int16 v1278; // ax
  SecondaryStat::VIEWELEM *v1279; // eax
  int v1280; // ST04_4
  SecondaryStat::VIEWELEM *v1281; // eax
  int v1282; // esi
  SecondaryStat::VIEWELEM *v1283; // eax
  CFlag<480> *v1284; // eax
  int v1285; // eax
  signed __int16 v1286; // ax
  SecondaryStat::VIEWELEM *v1287; // eax
  int v1288; // ST04_4
  SecondaryStat::VIEWELEM *v1289; // eax
  int v1290; // esi
  SecondaryStat::VIEWELEM *v1291; // eax
  CFlag<480> *v1292; // eax
  int v1293; // eax
  signed __int16 v1294; // ax
  SecondaryStat::VIEWELEM *v1295; // eax
  int v1296; // ST04_4
  SecondaryStat::VIEWELEM *v1297; // eax
  int v1298; // esi
  SecondaryStat::VIEWELEM *v1299; // eax
  CFlag<480> *v1300; // eax
  int v1301; // eax
  signed __int16 v1302; // ax
  SecondaryStat::VIEWELEM *v1303; // eax
  int v1304; // ST04_4
  SecondaryStat::VIEWELEM *v1305; // eax
  int v1306; // esi
  SecondaryStat::VIEWELEM *v1307; // eax
  CFlag<480> *v1308; // eax
  int v1309; // eax
  signed __int16 v1310; // ax
  SecondaryStat::VIEWELEM *v1311; // eax
  int v1312; // ST04_4
  SecondaryStat::VIEWELEM *v1313; // eax
  int v1314; // esi
  SecondaryStat::VIEWELEM *v1315; // eax
  CFlag<480> *v1316; // eax
  int v1317; // eax
  signed __int16 v1318; // ax
  SecondaryStat::VIEWELEM *v1319; // eax
  int v1320; // ST04_4
  SecondaryStat::VIEWELEM *v1321; // eax
  int v1322; // esi
  SecondaryStat::VIEWELEM *v1323; // eax
  CFlag<480> *v1324; // eax
  int v1325; // eax
  signed __int16 v1326; // ax
  SecondaryStat::VIEWELEM *v1327; // eax
  int v1328; // ST04_4
  SecondaryStat::VIEWELEM *v1329; // eax
  int v1330; // esi
  SecondaryStat::VIEWELEM *v1331; // eax
  CFlag<480> *v1332; // eax
  int v1333; // eax
  signed __int16 v1334; // ax
  SecondaryStat::VIEWELEM *v1335; // eax
  int v1336; // ST04_4
  SecondaryStat::VIEWELEM *v1337; // eax
  int v1338; // esi
  SecondaryStat::VIEWELEM *v1339; // eax
  CFlag<480> *v1340; // eax
  int v1341; // eax
  signed __int16 v1342; // ax
  SecondaryStat::VIEWELEM *v1343; // eax
  int v1344; // ST04_4
  SecondaryStat::VIEWELEM *v1345; // eax
  int v1346; // esi
  SecondaryStat::VIEWELEM *v1347; // eax
  CFlag<480> *v1348; // eax
  int v1349; // eax
  signed __int16 v1350; // ax
  SecondaryStat::VIEWELEM *v1351; // eax
  int v1352; // ST04_4
  SecondaryStat::VIEWELEM *v1353; // eax
  int v1354; // esi
  SecondaryStat::VIEWELEM *v1355; // eax
  CFlag<480> *v1356; // eax
  int v1357; // eax
  signed __int16 v1358; // ax
  SecondaryStat::VIEWELEM *v1359; // eax
  int v1360; // ST04_4
  SecondaryStat::VIEWELEM *v1361; // eax
  int v1362; // esi
  SecondaryStat::VIEWELEM *v1363; // eax
  CFlag<480> *v1364; // eax
  int v1365; // eax
  signed __int16 v1366; // ax
  SecondaryStat::VIEWELEM *v1367; // eax
  int v1368; // ST04_4
  SecondaryStat::VIEWELEM *v1369; // eax
  int v1370; // esi
  SecondaryStat::VIEWELEM *v1371; // eax
  CFlag<480> *v1372; // eax
  int v1373; // eax
  signed __int16 v1374; // ax
  SecondaryStat::VIEWELEM *v1375; // eax
  int v1376; // ST04_4
  SecondaryStat::VIEWELEM *v1377; // eax
  int v1378; // esi
  SecondaryStat::VIEWELEM *v1379; // eax
  CFlag<480> *v1380; // eax
  int v1381; // eax
  signed __int16 v1382; // ax
  SecondaryStat::VIEWELEM *v1383; // eax
  int v1384; // ST04_4
  SecondaryStat::VIEWELEM *v1385; // eax
  int v1386; // esi
  SecondaryStat::VIEWELEM *v1387; // eax
  CFlag<480> *v1388; // eax
  int v1389; // eax
  signed __int16 v1390; // ax
  SecondaryStat::VIEWELEM *v1391; // eax
  int v1392; // ST04_4
  SecondaryStat::VIEWELEM *v1393; // eax
  int v1394; // esi
  SecondaryStat::VIEWELEM *v1395; // eax
  CFlag<480> *v1396; // eax
  int v1397; // eax
  signed __int16 v1398; // ax
  SecondaryStat::VIEWELEM *v1399; // eax
  int v1400; // ST04_4
  SecondaryStat::VIEWELEM *v1401; // eax
  int v1402; // esi
  SecondaryStat::VIEWELEM *v1403; // eax
  CFlag<480> *v1404; // eax
  int v1405; // eax
  signed __int16 v1406; // ax
  SecondaryStat::VIEWELEM *v1407; // eax
  int v1408; // ST04_4
  SecondaryStat::VIEWELEM *v1409; // eax
  int v1410; // esi
  SecondaryStat::VIEWELEM *v1411; // eax
  CFlag<480> *v1412; // eax
  int v1413; // eax
  signed __int16 v1414; // ax
  SecondaryStat::VIEWELEM *v1415; // eax
  int v1416; // ST04_4
  SecondaryStat::VIEWELEM *v1417; // eax
  int v1418; // esi
  SecondaryStat::VIEWELEM *v1419; // eax
  CFlag<480> *v1420; // eax
  int v1421; // eax
  signed __int16 v1422; // ax
  SecondaryStat::VIEWELEM *v1423; // eax
  int v1424; // ST04_4
  SecondaryStat::VIEWELEM *v1425; // eax
  int v1426; // esi
  SecondaryStat::VIEWELEM *v1427; // eax
  CFlag<480> *v1428; // eax
  int v1429; // eax
  signed __int16 v1430; // ax
  SecondaryStat::VIEWELEM *v1431; // eax
  int v1432; // ST04_4
  SecondaryStat::VIEWELEM *v1433; // eax
  int v1434; // esi
  SecondaryStat::VIEWELEM *v1435; // eax
  CFlag<480> *v1436; // eax
  int v1437; // eax
  signed __int16 v1438; // ax
  SecondaryStat::VIEWELEM *v1439; // eax
  int v1440; // ST04_4
  SecondaryStat::VIEWELEM *v1441; // eax
  int v1442; // esi
  SecondaryStat::VIEWELEM *v1443; // eax
  CFlag<480> *v1444; // eax
  int v1445; // eax
  signed __int16 v1446; // ax
  SecondaryStat::VIEWELEM *v1447; // eax
  int v1448; // ST04_4
  SecondaryStat::VIEWELEM *v1449; // eax
  int v1450; // esi
  SecondaryStat::VIEWELEM *v1451; // eax
  CFlag<480> *v1452; // eax
  int v1453; // eax
  signed __int16 v1454; // ax
  SecondaryStat::VIEWELEM *v1455; // eax
  int v1456; // ST04_4
  SecondaryStat::VIEWELEM *v1457; // eax
  int v1458; // esi
  SecondaryStat::VIEWELEM *v1459; // eax
  CFlag<480> *v1460; // eax
  int v1461; // eax
  signed __int16 v1462; // ax
  SecondaryStat::VIEWELEM *v1463; // eax
  int v1464; // ST04_4
  SecondaryStat::VIEWELEM *v1465; // eax
  int v1466; // esi
  SecondaryStat::VIEWELEM *v1467; // eax
  CFlag<480> *v1468; // eax
  int v1469; // eax
  signed __int16 v1470; // ax
  SecondaryStat::VIEWELEM *v1471; // eax
  int v1472; // ST04_4
  SecondaryStat::VIEWELEM *v1473; // eax
  int v1474; // esi
  SecondaryStat::VIEWELEM *v1475; // eax
  CFlag<480> *v1476; // eax
  int v1477; // eax
  signed __int16 v1478; // ax
  SecondaryStat::VIEWELEM *v1479; // eax
  int v1480; // ST04_4
  SecondaryStat::VIEWELEM *v1481; // eax
  int v1482; // esi
  SecondaryStat::VIEWELEM *v1483; // eax
  CFlag<480> *v1484; // eax
  int v1485; // eax
  signed __int16 v1486; // ax
  SecondaryStat::VIEWELEM *v1487; // eax
  int v1488; // ST04_4
  SecondaryStat::VIEWELEM *v1489; // eax
  int v1490; // esi
  SecondaryStat::VIEWELEM *v1491; // eax
  CFlag<480> *v1492; // eax
  int v1493; // eax
  signed __int16 v1494; // ax
  SecondaryStat::VIEWELEM *v1495; // eax
  int v1496; // ST04_4
  SecondaryStat::VIEWELEM *v1497; // eax
  int v1498; // esi
  SecondaryStat::VIEWELEM *v1499; // eax
  CFlag<480> *v1500; // eax
  int v1501; // eax
  signed __int16 v1502; // ax
  SecondaryStat::VIEWELEM *v1503; // eax
  int v1504; // ST04_4
  SecondaryStat::VIEWELEM *v1505; // eax
  int v1506; // esi
  SecondaryStat::VIEWELEM *v1507; // eax
  CFlag<480> *v1508; // eax
  int v1509; // eax
  signed __int16 v1510; // ax
  SecondaryStat::VIEWELEM *v1511; // eax
  int v1512; // ST04_4
  SecondaryStat::VIEWELEM *v1513; // eax
  int v1514; // esi
  SecondaryStat::VIEWELEM *v1515; // eax
  CFlag<480> *v1516; // eax
  int v1517; // eax
  signed __int16 v1518; // ax
  SecondaryStat::VIEWELEM *v1519; // eax
  int v1520; // ST04_4
  SecondaryStat::VIEWELEM *v1521; // eax
  int v1522; // esi
  SecondaryStat::VIEWELEM *v1523; // eax
  CFlag<480> *v1524; // eax
  int v1525; // eax
  signed __int16 v1526; // ax
  SecondaryStat::VIEWELEM *v1527; // eax
  int v1528; // ST04_4
  SecondaryStat::VIEWELEM *v1529; // eax
  int v1530; // esi
  SecondaryStat::VIEWELEM *v1531; // eax
  CFlag<480> *v1532; // eax
  int v1533; // eax
  signed __int16 v1534; // ax
  SecondaryStat::VIEWELEM *v1535; // eax
  int v1536; // ST04_4
  SecondaryStat::VIEWELEM *v1537; // eax
  int v1538; // esi
  SecondaryStat::VIEWELEM *v1539; // eax
  CFlag<480> *v1540; // eax
  int v1541; // eax
  signed __int16 v1542; // ax
  SecondaryStat::VIEWELEM *v1543; // eax
  int v1544; // ST04_4
  SecondaryStat::VIEWELEM *v1545; // eax
  int v1546; // esi
  SecondaryStat::VIEWELEM *v1547; // eax
  CFlag<480> *v1548; // eax
  int v1549; // eax
  signed __int16 v1550; // ax
  SecondaryStat::VIEWELEM *v1551; // eax
  int v1552; // ST04_4
  SecondaryStat::VIEWELEM *v1553; // eax
  int v1554; // esi
  SecondaryStat::VIEWELEM *v1555; // eax
  CFlag<480> *v1556; // eax
  int v1557; // eax
  signed __int16 v1558; // ax
  SecondaryStat::VIEWELEM *v1559; // eax
  int v1560; // ST04_4
  SecondaryStat::VIEWELEM *v1561; // eax
  int v1562; // esi
  SecondaryStat::VIEWELEM *v1563; // eax
  CFlag<480> *v1564; // eax
  int v1565; // eax
  signed __int16 v1566; // ax
  SecondaryStat::VIEWELEM *v1567; // eax
  int v1568; // ST04_4
  SecondaryStat::VIEWELEM *v1569; // eax
  int v1570; // esi
  SecondaryStat::VIEWELEM *v1571; // eax
  CFlag<480> *v1572; // eax
  int v1573; // eax
  signed __int16 v1574; // ax
  SecondaryStat::VIEWELEM *v1575; // eax
  int v1576; // ST04_4
  SecondaryStat::VIEWELEM *v1577; // eax
  int v1578; // esi
  SecondaryStat::VIEWELEM *v1579; // eax
  CFlag<480> *v1580; // eax
  int v1581; // eax
  signed __int16 v1582; // ax
  SecondaryStat::VIEWELEM *v1583; // eax
  int v1584; // ST04_4
  SecondaryStat::VIEWELEM *v1585; // eax
  int v1586; // esi
  SecondaryStat::VIEWELEM *v1587; // eax
  CFlag<480> *v1588; // eax
  int v1589; // eax
  signed __int16 v1590; // ax
  SecondaryStat::VIEWELEM *v1591; // eax
  int v1592; // ST04_4
  SecondaryStat::VIEWELEM *v1593; // eax
  int v1594; // esi
  SecondaryStat::VIEWELEM *v1595; // eax
  CFlag<480> *v1596; // eax
  int v1597; // eax
  signed __int16 v1598; // ax
  SecondaryStat::VIEWELEM *v1599; // eax
  int v1600; // ST04_4
  SecondaryStat::VIEWELEM *v1601; // eax
  int v1602; // esi
  SecondaryStat::VIEWELEM *v1603; // eax
  CFlag<480> *v1604; // eax
  int v1605; // eax
  signed __int16 v1606; // ax
  SecondaryStat::VIEWELEM *v1607; // eax
  int v1608; // ST04_4
  SecondaryStat::VIEWELEM *v1609; // eax
  int v1610; // esi
  SecondaryStat::VIEWELEM *v1611; // eax
  CFlag<480> *v1612; // eax
  int v1613; // eax
  signed __int16 v1614; // ax
  SecondaryStat::VIEWELEM *v1615; // eax
  int v1616; // ST04_4
  SecondaryStat::VIEWELEM *v1617; // eax
  int v1618; // esi
  SecondaryStat::VIEWELEM *v1619; // eax
  CFlag<480> *v1620; // eax
  int v1621; // eax
  signed __int16 v1622; // ax
  SecondaryStat::VIEWELEM *v1623; // eax
  int v1624; // ST04_4
  SecondaryStat::VIEWELEM *v1625; // eax
  int v1626; // esi
  SecondaryStat::VIEWELEM *v1627; // eax
  CFlag<480> *v1628; // eax
  int v1629; // eax
  signed __int16 v1630; // ax
  SecondaryStat::VIEWELEM *v1631; // eax
  int v1632; // ST04_4
  SecondaryStat::VIEWELEM *v1633; // eax
  int v1634; // esi
  SecondaryStat::VIEWELEM *v1635; // eax
  CFlag<480> *v1636; // eax
  int v1637; // eax
  signed __int16 v1638; // ax
  SecondaryStat::VIEWELEM *v1639; // eax
  int v1640; // ST04_4
  SecondaryStat::VIEWELEM *v1641; // eax
  int v1642; // esi
  SecondaryStat::VIEWELEM *v1643; // eax
  CFlag<480> *v1644; // eax
  int v1645; // eax
  signed __int16 v1646; // ax
  SecondaryStat::VIEWELEM *v1647; // eax
  int v1648; // ST04_4
  SecondaryStat::VIEWELEM *v1649; // eax
  int v1650; // esi
  SecondaryStat::VIEWELEM *v1651; // eax
  CFlag<480> *v1652; // eax
  int v1653; // eax
  signed __int16 v1654; // ax
  SecondaryStat::VIEWELEM *v1655; // eax
  int v1656; // ST04_4
  SecondaryStat::VIEWELEM *v1657; // eax
  int v1658; // esi
  SecondaryStat::VIEWELEM *v1659; // eax
  CFlag<480> *v1660; // eax
  int v1661; // eax
  signed __int16 v1662; // ax
  SecondaryStat::VIEWELEM *v1663; // eax
  int v1664; // ST04_4
  SecondaryStat::VIEWELEM *v1665; // eax
  int v1666; // esi
  SecondaryStat::VIEWELEM *v1667; // eax
  CFlag<480> *v1668; // eax
  int v1669; // eax
  signed __int16 v1670; // ax
  SecondaryStat::VIEWELEM *v1671; // eax
  int v1672; // ST04_4
  SecondaryStat::VIEWELEM *v1673; // eax
  int v1674; // esi
  SecondaryStat::VIEWELEM *v1675; // eax
  CFlag<480> *v1676; // eax
  int v1677; // eax
  signed __int16 v1678; // ax
  SecondaryStat::VIEWELEM *v1679; // eax
  int v1680; // ST04_4
  SecondaryStat::VIEWELEM *v1681; // eax
  int v1682; // esi
  SecondaryStat::VIEWELEM *v1683; // eax
  CFlag<480> *v1684; // eax
  int v1685; // eax
  signed __int16 v1686; // ax
  SecondaryStat::VIEWELEM *v1687; // eax
  int v1688; // ST04_4
  SecondaryStat::VIEWELEM *v1689; // eax
  int v1690; // esi
  SecondaryStat::VIEWELEM *v1691; // eax
  CFlag<480> *v1692; // eax
  int v1693; // eax
  signed __int16 v1694; // ax
  SecondaryStat::VIEWELEM *v1695; // eax
  int v1696; // ST04_4
  SecondaryStat::VIEWELEM *v1697; // eax
  int v1698; // esi
  SecondaryStat::VIEWELEM *v1699; // eax
  CFlag<480> *v1700; // eax
  int v1701; // eax
  signed __int16 v1702; // ax
  SecondaryStat::VIEWELEM *v1703; // eax
  int v1704; // ST04_4
  SecondaryStat::VIEWELEM *v1705; // eax
  int v1706; // esi
  SecondaryStat::VIEWELEM *v1707; // eax
  CFlag<480> *v1708; // eax
  int v1709; // eax
  signed __int16 v1710; // ax
  SecondaryStat::VIEWELEM *v1711; // eax
  int v1712; // ST04_4
  SecondaryStat::VIEWELEM *v1713; // eax
  int v1714; // esi
  SecondaryStat::VIEWELEM *v1715; // eax
  CFlag<480> *v1716; // eax
  int v1717; // eax
  signed __int16 v1718; // ax
  SecondaryStat::VIEWELEM *v1719; // eax
  int v1720; // ST04_4
  SecondaryStat::VIEWELEM *v1721; // eax
  int v1722; // esi
  SecondaryStat::VIEWELEM *v1723; // eax
  CFlag<480> *v1724; // eax
  int v1725; // eax
  signed __int16 v1726; // ax
  SecondaryStat::VIEWELEM *v1727; // eax
  int v1728; // ST04_4
  SecondaryStat::VIEWELEM *v1729; // eax
  int v1730; // esi
  SecondaryStat::VIEWELEM *v1731; // eax
  CFlag<480> *v1732; // eax
  int v1733; // eax
  signed __int16 v1734; // ax
  SecondaryStat::VIEWELEM *v1735; // eax
  int v1736; // ST04_4
  SecondaryStat::VIEWELEM *v1737; // eax
  int v1738; // esi
  SecondaryStat::VIEWELEM *v1739; // eax
  CFlag<480> *v1740; // eax
  int v1741; // eax
  signed __int16 v1742; // ax
  SecondaryStat::VIEWELEM *v1743; // eax
  int v1744; // ST04_4
  SecondaryStat::VIEWELEM *v1745; // eax
  int v1746; // esi
  SecondaryStat::VIEWELEM *v1747; // eax
  CFlag<480> *v1748; // eax
  int v1749; // eax
  signed __int16 v1750; // ax
  SecondaryStat::VIEWELEM *v1751; // eax
  int v1752; // ST04_4
  SecondaryStat::VIEWELEM *v1753; // eax
  int v1754; // esi
  SecondaryStat::VIEWELEM *v1755; // eax
  CFlag<480> *v1756; // eax
  int v1757; // eax
  signed __int16 v1758; // ax
  SecondaryStat::VIEWELEM *v1759; // eax
  int v1760; // ST04_4
  SecondaryStat::VIEWELEM *v1761; // eax
  int v1762; // esi
  SecondaryStat::VIEWELEM *v1763; // eax
  CFlag<480> *v1764; // eax
  int v1765; // eax
  signed __int16 v1766; // ax
  SecondaryStat::VIEWELEM *v1767; // eax
  int v1768; // ST04_4
  SecondaryStat::VIEWELEM *v1769; // eax
  int v1770; // esi
  SecondaryStat::VIEWELEM *v1771; // eax
  CFlag<480> *v1772; // eax
  int v1773; // eax
  signed __int16 v1774; // ax
  SecondaryStat::VIEWELEM *v1775; // eax
  int v1776; // ST04_4
  SecondaryStat::VIEWELEM *v1777; // eax
  int v1778; // esi
  SecondaryStat::VIEWELEM *v1779; // eax
  CFlag<480> *v1780; // eax
  int v1781; // eax
  signed __int16 v1782; // ax
  SecondaryStat::VIEWELEM *v1783; // eax
  int v1784; // ST04_4
  SecondaryStat::VIEWELEM *v1785; // eax
  int v1786; // esi
  SecondaryStat::VIEWELEM *v1787; // eax
  CFlag<480> *v1788; // eax
  int v1789; // eax
  signed __int16 v1790; // ax
  SecondaryStat::VIEWELEM *v1791; // eax
  int v1792; // ST04_4
  SecondaryStat::VIEWELEM *v1793; // eax
  int v1794; // esi
  SecondaryStat::VIEWELEM *v1795; // eax
  CFlag<480> *v1796; // eax
  int v1797; // eax
  signed __int16 v1798; // ax
  SecondaryStat::VIEWELEM *v1799; // eax
  int v1800; // ST04_4
  SecondaryStat::VIEWELEM *v1801; // eax
  int v1802; // esi
  SecondaryStat::VIEWELEM *v1803; // eax
  CFlag<480> *v1804; // eax
  int v1805; // eax
  signed __int16 v1806; // ax
  SecondaryStat::VIEWELEM *v1807; // eax
  int v1808; // ST04_4
  SecondaryStat::VIEWELEM *v1809; // eax
  int v1810; // esi
  SecondaryStat::VIEWELEM *v1811; // eax
  CFlag<480> *v1812; // eax
  int v1813; // eax
  signed __int16 v1814; // ax
  SecondaryStat::VIEWELEM *v1815; // eax
  int v1816; // ST04_4
  SecondaryStat::VIEWELEM *v1817; // eax
  int v1818; // esi
  SecondaryStat::VIEWELEM *v1819; // eax
  CFlag<480> *v1820; // eax
  int v1821; // eax
  signed __int16 v1822; // ax
  SecondaryStat::VIEWELEM *v1823; // eax
  int v1824; // ST04_4
  SecondaryStat::VIEWELEM *v1825; // eax
  int v1826; // esi
  SecondaryStat::VIEWELEM *v1827; // eax
  CFlag<480> *v1828; // eax
  int v1829; // eax
  signed __int16 v1830; // ax
  SecondaryStat::VIEWELEM *v1831; // eax
  int v1832; // ST04_4
  SecondaryStat::VIEWELEM *v1833; // eax
  int v1834; // esi
  SecondaryStat::VIEWELEM *v1835; // eax
  CFlag<480> *v1836; // eax
  int v1837; // eax
  signed __int16 v1838; // ax
  SecondaryStat::VIEWELEM *v1839; // eax
  int v1840; // ST04_4
  SecondaryStat::VIEWELEM *v1841; // eax
  int v1842; // esi
  SecondaryStat::VIEWELEM *v1843; // eax
  CFlag<480> *v1844; // eax
  int v1845; // eax
  signed __int16 v1846; // ax
  SecondaryStat::VIEWELEM *v1847; // eax
  int v1848; // ST04_4
  SecondaryStat::VIEWELEM *v1849; // eax
  int v1850; // esi
  SecondaryStat::VIEWELEM *v1851; // eax
  CFlag<480> *v1852; // eax
  int v1853; // eax
  signed __int16 v1854; // ax
  SecondaryStat::VIEWELEM *v1855; // eax
  int v1856; // ST04_4
  SecondaryStat::VIEWELEM *v1857; // eax
  int v1858; // esi
  SecondaryStat::VIEWELEM *v1859; // eax
  CFlag<480> *v1860; // eax
  int v1861; // eax
  signed __int16 v1862; // ax
  SecondaryStat::VIEWELEM *v1863; // eax
  int v1864; // ST04_4
  SecondaryStat::VIEWELEM *v1865; // eax
  int v1866; // esi
  SecondaryStat::VIEWELEM *v1867; // eax
  CFlag<480> *v1868; // eax
  int v1869; // eax
  signed __int16 v1870; // ax
  SecondaryStat::VIEWELEM *v1871; // eax
  int v1872; // ST04_4
  SecondaryStat::VIEWELEM *v1873; // eax
  int v1874; // esi
  SecondaryStat::VIEWELEM *v1875; // eax
  CFlag<480> *v1876; // eax
  int v1877; // eax
  signed __int16 v1878; // ax
  SecondaryStat::VIEWELEM *v1879; // eax
  int v1880; // ST04_4
  SecondaryStat::VIEWELEM *v1881; // eax
  int v1882; // esi
  SecondaryStat::VIEWELEM *v1883; // eax
  CFlag<480> *v1884; // eax
  int v1885; // eax
  signed __int16 v1886; // ax
  SecondaryStat::VIEWELEM *v1887; // eax
  int v1888; // ST04_4
  SecondaryStat::VIEWELEM *v1889; // eax
  int v1890; // esi
  SecondaryStat::VIEWELEM *v1891; // eax
  CFlag<480> *v1892; // eax
  int v1893; // eax
  signed __int16 v1894; // ax
  SecondaryStat::VIEWELEM *v1895; // eax
  int v1896; // ST04_4
  SecondaryStat::VIEWELEM *v1897; // eax
  int v1898; // esi
  SecondaryStat::VIEWELEM *v1899; // eax
  CFlag<480> *v1900; // eax
  int v1901; // eax
  signed __int16 v1902; // ax
  SecondaryStat::VIEWELEM *v1903; // eax
  int v1904; // ST04_4
  SecondaryStat::VIEWELEM *v1905; // eax
  int v1906; // esi
  SecondaryStat::VIEWELEM *v1907; // eax
  CFlag<480> *v1908; // eax
  int v1909; // eax
  signed __int16 v1910; // ax
  SecondaryStat::VIEWELEM *v1911; // eax
  int v1912; // ST04_4
  SecondaryStat::VIEWELEM *v1913; // eax
  int v1914; // esi
  SecondaryStat::VIEWELEM *v1915; // eax
  CFlag<480> *v1916; // eax
  int v1917; // eax
  signed __int16 v1918; // ax
  SecondaryStat::VIEWELEM *v1919; // eax
  int v1920; // ST04_4
  SecondaryStat::VIEWELEM *v1921; // eax
  int v1922; // esi
  SecondaryStat::VIEWELEM *v1923; // eax
  CFlag<480> *v1924; // eax
  int v1925; // eax
  signed __int16 v1926; // ax
  SecondaryStat::VIEWELEM *v1927; // eax
  int v1928; // ST04_4
  SecondaryStat::VIEWELEM *v1929; // eax
  int v1930; // esi
  SecondaryStat::VIEWELEM *v1931; // eax
  CFlag<480> *v1932; // eax
  int v1933; // eax
  signed __int16 v1934; // ax
  SecondaryStat::VIEWELEM *v1935; // eax
  int v1936; // ST04_4
  SecondaryStat::VIEWELEM *v1937; // eax
  int v1938; // esi
  SecondaryStat::VIEWELEM *v1939; // eax
  CFlag<480> *v1940; // eax
  int v1941; // eax
  signed __int16 v1942; // ax
  SecondaryStat::VIEWELEM *v1943; // eax
  int v1944; // ST04_4
  SecondaryStat::VIEWELEM *v1945; // eax
  int v1946; // esi
  SecondaryStat::VIEWELEM *v1947; // eax
  CFlag<480> *v1948; // eax
  int v1949; // eax
  signed __int16 v1950; // ax
  SecondaryStat::VIEWELEM *v1951; // eax
  int v1952; // ST04_4
  SecondaryStat::VIEWELEM *v1953; // eax
  int v1954; // esi
  SecondaryStat::VIEWELEM *v1955; // eax
  CFlag<480> *v1956; // eax
  int v1957; // eax
  signed __int16 v1958; // ax
  SecondaryStat::VIEWELEM *v1959; // eax
  int v1960; // ST04_4
  SecondaryStat::VIEWELEM *v1961; // eax
  int v1962; // esi
  SecondaryStat::VIEWELEM *v1963; // eax
  CFlag<480> *v1964; // eax
  int v1965; // eax
  signed __int16 v1966; // ax
  SecondaryStat::VIEWELEM *v1967; // eax
  int v1968; // ST04_4
  SecondaryStat::VIEWELEM *v1969; // eax
  int v1970; // esi
  SecondaryStat::VIEWELEM *v1971; // eax
  CFlag<480> *v1972; // eax
  int v1973; // eax
  signed __int16 v1974; // ax
  SecondaryStat::VIEWELEM *v1975; // eax
  int v1976; // ST04_4
  SecondaryStat::VIEWELEM *v1977; // eax
  int v1978; // esi
  SecondaryStat::VIEWELEM *v1979; // eax
  CFlag<480> *v1980; // eax
  int v1981; // eax
  signed __int16 v1982; // ax
  SecondaryStat::VIEWELEM *v1983; // eax
  int v1984; // ST04_4
  SecondaryStat::VIEWELEM *v1985; // eax
  int v1986; // esi
  SecondaryStat::VIEWELEM *v1987; // eax
  CFlag<480> *v1988; // eax
  int v1989; // eax
  signed __int16 v1990; // ax
  SecondaryStat::VIEWELEM *v1991; // eax
  int v1992; // ST04_4
  SecondaryStat::VIEWELEM *v1993; // eax
  int v1994; // esi
  SecondaryStat::VIEWELEM *v1995; // eax
  CFlag<480> *v1996; // eax
  int v1997; // eax
  signed __int16 v1998; // ax
  SecondaryStat::VIEWELEM *v1999; // eax
  int v2000; // ST04_4
  SecondaryStat::VIEWELEM *v2001; // eax
  int v2002; // esi
  SecondaryStat::VIEWELEM *v2003; // eax
  CFlag<480> *v2004; // eax
  int v2005; // eax
  signed __int16 v2006; // ax
  SecondaryStat::VIEWELEM *v2007; // eax
  int v2008; // ST04_4
  SecondaryStat::VIEWELEM *v2009; // eax
  int v2010; // esi
  SecondaryStat::VIEWELEM *v2011; // eax
  CFlag<480> *v2012; // eax
  int v2013; // eax
  signed __int16 v2014; // ax
  SecondaryStat::VIEWELEM *v2015; // eax
  int v2016; // ST04_4
  SecondaryStat::VIEWELEM *v2017; // eax
  int v2018; // esi
  SecondaryStat::VIEWELEM *v2019; // eax
  CFlag<480> *v2020; // eax
  int v2021; // eax
  signed __int16 v2022; // ax
  SecondaryStat::VIEWELEM *v2023; // eax
  int v2024; // ST04_4
  SecondaryStat::VIEWELEM *v2025; // eax
  int v2026; // esi
  SecondaryStat::VIEWELEM *v2027; // eax
  CFlag<480> *v2028; // eax
  int v2029; // eax
  signed __int16 v2030; // ax
  SecondaryStat::VIEWELEM *v2031; // eax
  int v2032; // ST04_4
  SecondaryStat::VIEWELEM *v2033; // eax
  int v2034; // esi
  SecondaryStat::VIEWELEM *v2035; // eax
  CFlag<480> *v2036; // eax
  int v2037; // eax
  signed __int16 v2038; // ax
  SecondaryStat::VIEWELEM *v2039; // eax
  int v2040; // ST04_4
  SecondaryStat::VIEWELEM *v2041; // eax
  int v2042; // esi
  SecondaryStat::VIEWELEM *v2043; // eax
  CFlag<480> *v2044; // eax
  int v2045; // eax
  signed __int16 v2046; // ax
  SecondaryStat::VIEWELEM *v2047; // eax
  int v2048; // ST04_4
  SecondaryStat::VIEWELEM *v2049; // eax
  int v2050; // esi
  SecondaryStat::VIEWELEM *v2051; // eax
  CFlag<480> *v2052; // eax
  int v2053; // eax
  signed __int16 v2054; // ax
  SecondaryStat::VIEWELEM *v2055; // eax
  int v2056; // ST04_4
  SecondaryStat::VIEWELEM *v2057; // eax
  int v2058; // esi
  SecondaryStat::VIEWELEM *v2059; // eax
  CFlag<480> *v2060; // eax
  int v2061; // eax
  signed __int16 v2062; // ax
  SecondaryStat::VIEWELEM *v2063; // eax
  int v2064; // ST04_4
  SecondaryStat::VIEWELEM *v2065; // eax
  int v2066; // esi
  SecondaryStat::VIEWELEM *v2067; // eax
  CFlag<480> *v2068; // eax
  int v2069; // eax
  signed __int16 v2070; // ax
  SecondaryStat::VIEWELEM *v2071; // eax
  int v2072; // ST04_4
  SecondaryStat::VIEWELEM *v2073; // eax
  int v2074; // esi
  SecondaryStat::VIEWELEM *v2075; // eax
  CFlag<480> *v2076; // eax
  int v2077; // eax
  signed __int16 v2078; // ax
  SecondaryStat::VIEWELEM *v2079; // eax
  int v2080; // ST04_4
  SecondaryStat::VIEWELEM *v2081; // eax
  int v2082; // esi
  SecondaryStat::VIEWELEM *v2083; // eax
  CFlag<480> *v2084; // eax
  int v2085; // eax
  signed __int16 v2086; // ax
  SecondaryStat::VIEWELEM *v2087; // eax
  int v2088; // ST04_4
  SecondaryStat::VIEWELEM *v2089; // eax
  int v2090; // esi
  SecondaryStat::VIEWELEM *v2091; // eax
  CFlag<480> *v2092; // eax
  int v2093; // eax
  signed __int16 v2094; // ax
  SecondaryStat::VIEWELEM *v2095; // eax
  int v2096; // ST04_4
  SecondaryStat::VIEWELEM *v2097; // eax
  int v2098; // esi
  SecondaryStat::VIEWELEM *v2099; // eax
  CFlag<480> *v2100; // eax
  int v2101; // eax
  signed __int16 v2102; // ax
  SecondaryStat::VIEWELEM *v2103; // eax
  int v2104; // ST04_4
  SecondaryStat::VIEWELEM *v2105; // eax
  int v2106; // esi
  SecondaryStat::VIEWELEM *v2107; // eax
  CFlag<480> *v2108; // eax
  int v2109; // eax
  signed __int16 v2110; // ax
  SecondaryStat::VIEWELEM *v2111; // eax
  int v2112; // ST04_4
  SecondaryStat::VIEWELEM *v2113; // eax
  int v2114; // esi
  SecondaryStat::VIEWELEM *v2115; // eax
  CFlag<480> *v2116; // eax
  int v2117; // eax
  signed __int16 v2118; // ax
  SecondaryStat::VIEWELEM *v2119; // eax
  int v2120; // ST04_4
  SecondaryStat::VIEWELEM *v2121; // eax
  int v2122; // esi
  SecondaryStat::VIEWELEM *v2123; // eax
  CFlag<480> *v2124; // eax
  int v2125; // eax
  signed __int16 v2126; // ax
  SecondaryStat::VIEWELEM *v2127; // eax
  int v2128; // ST04_4
  SecondaryStat::VIEWELEM *v2129; // eax
  int v2130; // esi
  SecondaryStat::VIEWELEM *v2131; // eax
  CFlag<480> *v2132; // eax
  int v2133; // eax
  signed __int16 v2134; // ax
  SecondaryStat::VIEWELEM *v2135; // eax
  int v2136; // ST04_4
  SecondaryStat::VIEWELEM *v2137; // eax
  int v2138; // esi
  SecondaryStat::VIEWELEM *v2139; // eax
  CFlag<480> *v2140; // eax
  int v2141; // eax
  signed __int16 v2142; // ax
  SecondaryStat::VIEWELEM *v2143; // eax
  int v2144; // ST04_4
  SecondaryStat::VIEWELEM *v2145; // eax
  int v2146; // esi
  SecondaryStat::VIEWELEM *v2147; // eax
  CFlag<480> *v2148; // eax
  int v2149; // eax
  signed __int16 v2150; // ax
  SecondaryStat::VIEWELEM *v2151; // eax
  int v2152; // ST04_4
  SecondaryStat::VIEWELEM *v2153; // eax
  int v2154; // esi
  SecondaryStat::VIEWELEM *v2155; // eax
  CFlag<480> *v2156; // eax
  int v2157; // eax
  signed __int16 v2158; // ax
  SecondaryStat::VIEWELEM *v2159; // eax
  int v2160; // ST04_4
  SecondaryStat::VIEWELEM *v2161; // eax
  int v2162; // esi
  SecondaryStat::VIEWELEM *v2163; // eax
  CFlag<480> *v2164; // eax
  int v2165; // eax
  signed __int16 v2166; // ax
  SecondaryStat::VIEWELEM *v2167; // eax
  int v2168; // ST04_4
  SecondaryStat::VIEWELEM *v2169; // eax
  int v2170; // esi
  SecondaryStat::VIEWELEM *v2171; // eax
  CFlag<480> *v2172; // eax
  int v2173; // eax
  signed __int16 v2174; // ax
  SecondaryStat::VIEWELEM *v2175; // eax
  int v2176; // ST04_4
  SecondaryStat::VIEWELEM *v2177; // eax
  int v2178; // esi
  SecondaryStat::VIEWELEM *v2179; // eax
  CFlag<480> *v2180; // eax
  int v2181; // eax
  signed __int16 v2182; // ax
  SecondaryStat::VIEWELEM *v2183; // eax
  int v2184; // ST04_4
  SecondaryStat::VIEWELEM *v2185; // eax
  int v2186; // esi
  SecondaryStat::VIEWELEM *v2187; // eax
  CFlag<480> *v2188; // eax
  int v2189; // eax
  signed __int16 v2190; // ax
  SecondaryStat::VIEWELEM *v2191; // eax
  int v2192; // ST04_4
  SecondaryStat::VIEWELEM *v2193; // eax
  int v2194; // esi
  SecondaryStat::VIEWELEM *v2195; // eax
  CFlag<480> *v2196; // eax
  int v2197; // eax
  signed __int16 v2198; // ax
  SecondaryStat::VIEWELEM *v2199; // eax
  int v2200; // ST04_4
  SecondaryStat::VIEWELEM *v2201; // eax
  int v2202; // esi
  SecondaryStat::VIEWELEM *v2203; // eax
  CFlag<480> *v2204; // eax
  int v2205; // eax
  signed __int16 v2206; // ax
  SecondaryStat::VIEWELEM *v2207; // eax
  int v2208; // ST04_4
  SecondaryStat::VIEWELEM *v2209; // eax
  int v2210; // esi
  SecondaryStat::VIEWELEM *v2211; // eax
  CFlag<480> *v2212; // eax
  int v2213; // eax
  signed __int16 v2214; // ax
  SecondaryStat::VIEWELEM *v2215; // eax
  int v2216; // ST04_4
  SecondaryStat::VIEWELEM *v2217; // eax
  int v2218; // esi
  SecondaryStat::VIEWELEM *v2219; // eax
  CFlag<480> *v2220; // eax
  int v2221; // eax
  signed __int16 v2222; // ax
  SecondaryStat::VIEWELEM *v2223; // eax
  int v2224; // ST04_4
  SecondaryStat::VIEWELEM *v2225; // eax
  int v2226; // esi
  SecondaryStat::VIEWELEM *v2227; // eax
  CFlag<480> *v2228; // eax
  int v2229; // eax
  signed __int16 v2230; // ax
  SecondaryStat::VIEWELEM *v2231; // eax
  int v2232; // ST04_4
  SecondaryStat::VIEWELEM *v2233; // eax
  int v2234; // esi
  SecondaryStat::VIEWELEM *v2235; // eax
  CFlag<480> *v2236; // eax
  int v2237; // eax
  signed __int16 v2238; // ax
  SecondaryStat::VIEWELEM *v2239; // eax
  int v2240; // ST04_4
  SecondaryStat::VIEWELEM *v2241; // eax
  int v2242; // esi
  SecondaryStat::VIEWELEM *v2243; // eax
  CFlag<480> *v2244; // eax
  int v2245; // eax
  signed __int16 v2246; // ax
  SecondaryStat::VIEWELEM *v2247; // eax
  int v2248; // ST04_4
  SecondaryStat::VIEWELEM *v2249; // eax
  int v2250; // esi
  SecondaryStat::VIEWELEM *v2251; // eax
  CFlag<480> *v2252; // eax
  int v2253; // eax
  signed __int16 v2254; // ax
  SecondaryStat::VIEWELEM *v2255; // eax
  int v2256; // ST04_4
  SecondaryStat::VIEWELEM *v2257; // eax
  int v2258; // esi
  SecondaryStat::VIEWELEM *v2259; // eax
  CFlag<480> *v2260; // eax
  int v2261; // eax
  signed __int16 v2262; // ax
  SecondaryStat::VIEWELEM *v2263; // eax
  int v2264; // ST04_4
  SecondaryStat::VIEWELEM *v2265; // eax
  int v2266; // esi
  SecondaryStat::VIEWELEM *v2267; // eax
  CFlag<480> *v2268; // eax
  int v2269; // eax
  signed __int16 v2270; // ax
  SecondaryStat::VIEWELEM *v2271; // eax
  int v2272; // ST04_4
  SecondaryStat::VIEWELEM *v2273; // eax
  int v2274; // esi
  SecondaryStat::VIEWELEM *v2275; // eax
  CFlag<480> *v2276; // eax
  int v2277; // eax
  signed __int16 v2278; // ax
  SecondaryStat::VIEWELEM *v2279; // eax
  int v2280; // ST04_4
  SecondaryStat::VIEWELEM *v2281; // eax
  int v2282; // esi
  SecondaryStat::VIEWELEM *v2283; // eax
  CFlag<480> *v2284; // eax
  int v2285; // eax
  signed __int16 v2286; // ax
  SecondaryStat::VIEWELEM *v2287; // eax
  int v2288; // ST04_4
  SecondaryStat::VIEWELEM *v2289; // eax
  int v2290; // esi
  SecondaryStat::VIEWELEM *v2291; // eax
  CFlag<480> *v2292; // eax
  int v2293; // eax
  signed __int16 v2294; // ax
  SecondaryStat::VIEWELEM *v2295; // eax
  int v2296; // ST04_4
  SecondaryStat::VIEWELEM *v2297; // eax
  int v2298; // esi
  SecondaryStat::VIEWELEM *v2299; // eax
  CFlag<480> *v2300; // eax
  int v2301; // eax
  signed __int16 v2302; // ax
  SecondaryStat::VIEWELEM *v2303; // eax
  int v2304; // ST04_4
  SecondaryStat::VIEWELEM *v2305; // eax
  int v2306; // esi
  SecondaryStat::VIEWELEM *v2307; // eax
  CFlag<480> *v2308; // eax
  int v2309; // eax
  signed __int16 v2310; // ax
  SecondaryStat::VIEWELEM *v2311; // eax
  int v2312; // ST04_4
  SecondaryStat::VIEWELEM *v2313; // eax
  int v2314; // esi
  SecondaryStat::VIEWELEM *v2315; // eax
  CFlag<480> *v2316; // eax
  int v2317; // eax
  signed __int16 v2318; // ax
  SecondaryStat::VIEWELEM *v2319; // eax
  int v2320; // ST04_4
  SecondaryStat::VIEWELEM *v2321; // eax
  int v2322; // esi
  SecondaryStat::VIEWELEM *v2323; // eax
  CFlag<480> *v2324; // eax
  int v2325; // eax
  signed __int16 v2326; // ax
  SecondaryStat::VIEWELEM *v2327; // eax
  int v2328; // ST04_4
  SecondaryStat::VIEWELEM *v2329; // eax
  int v2330; // esi
  SecondaryStat::VIEWELEM *v2331; // eax
  CFlag<480> *v2332; // eax
  int v2333; // eax
  signed __int16 v2334; // ax
  SecondaryStat::VIEWELEM *v2335; // eax
  int v2336; // ST04_4
  SecondaryStat::VIEWELEM *v2337; // eax
  int v2338; // esi
  SecondaryStat::VIEWELEM *v2339; // eax
  CFlag<480> *v2340; // eax
  int v2341; // eax
  signed __int16 v2342; // ax
  SecondaryStat::VIEWELEM *v2343; // eax
  int v2344; // ST04_4
  SecondaryStat::VIEWELEM *v2345; // eax
  int v2346; // esi
  SecondaryStat::VIEWELEM *v2347; // eax
  CFlag<480> *v2348; // eax
  int v2349; // eax
  signed __int16 v2350; // ax
  SecondaryStat::VIEWELEM *v2351; // eax
  int v2352; // ST04_4
  SecondaryStat::VIEWELEM *v2353; // eax
  int v2354; // esi
  SecondaryStat::VIEWELEM *v2355; // eax
  CFlag<480> *v2356; // eax
  int v2357; // eax
  signed __int16 v2358; // ax
  SecondaryStat::VIEWELEM *v2359; // eax
  int v2360; // ST04_4
  SecondaryStat::VIEWELEM *v2361; // eax
  int v2362; // esi
  SecondaryStat::VIEWELEM *v2363; // eax
  CFlag<480> *v2364; // eax
  int v2365; // eax
  signed __int16 v2366; // ax
  SecondaryStat::VIEWELEM *v2367; // eax
  int v2368; // ST04_4
  SecondaryStat::VIEWELEM *v2369; // eax
  int v2370; // esi
  SecondaryStat::VIEWELEM *v2371; // eax
  CFlag<480> *v2372; // eax
  int v2373; // eax
  signed __int16 v2374; // ax
  SecondaryStat::VIEWELEM *v2375; // eax
  int v2376; // ST04_4
  SecondaryStat::VIEWELEM *v2377; // eax
  int v2378; // esi
  SecondaryStat::VIEWELEM *v2379; // eax
  CFlag<480> *v2380; // eax
  int v2381; // eax
  signed __int16 v2382; // ax
  SecondaryStat::VIEWELEM *v2383; // eax
  int v2384; // ST04_4
  SecondaryStat::VIEWELEM *v2385; // eax
  int v2386; // esi
  SecondaryStat::VIEWELEM *v2387; // eax
  CFlag<480> *v2388; // eax
  int v2389; // eax
  signed __int16 v2390; // ax
  SecondaryStat::VIEWELEM *v2391; // eax
  int v2392; // ST04_4
  SecondaryStat::VIEWELEM *v2393; // eax
  int v2394; // esi
  SecondaryStat::VIEWELEM *v2395; // eax
  CFlag<480> *v2396; // eax
  int v2397; // eax
  signed __int16 v2398; // ax
  SecondaryStat::VIEWELEM *v2399; // eax
  int v2400; // ST04_4
  SecondaryStat::VIEWELEM *v2401; // eax
  int v2402; // esi
  SecondaryStat::VIEWELEM *v2403; // eax
  CFlag<480> *v2404; // eax
  int v2405; // eax
  signed __int16 v2406; // ax
  SecondaryStat::VIEWELEM *v2407; // eax
  int v2408; // ST04_4
  SecondaryStat::VIEWELEM *v2409; // eax
  int v2410; // esi
  SecondaryStat::VIEWELEM *v2411; // eax
  CFlag<480> *v2412; // eax
  int v2413; // eax
  signed __int16 v2414; // ax
  SecondaryStat::VIEWELEM *v2415; // eax
  int v2416; // ST04_4
  SecondaryStat::VIEWELEM *v2417; // eax
  int v2418; // esi
  SecondaryStat::VIEWELEM *v2419; // eax
  CFlag<480> *v2420; // eax
  int v2421; // eax
  signed __int16 v2422; // ax
  SecondaryStat::VIEWELEM *v2423; // eax
  int v2424; // ST04_4
  SecondaryStat::VIEWELEM *v2425; // eax
  int v2426; // esi
  SecondaryStat::VIEWELEM *v2427; // eax
  CFlag<480> *v2428; // eax
  int v2429; // eax
  signed __int16 v2430; // ax
  SecondaryStat::VIEWELEM *v2431; // eax
  int v2432; // ST04_4
  SecondaryStat::VIEWELEM *v2433; // eax
  int v2434; // esi
  SecondaryStat::VIEWELEM *v2435; // eax
  CFlag<480> *v2436; // eax
  int v2437; // eax
  signed __int16 v2438; // ax
  SecondaryStat::VIEWELEM *v2439; // eax
  int v2440; // ST04_4
  SecondaryStat::VIEWELEM *v2441; // eax
  int v2442; // esi
  SecondaryStat::VIEWELEM *v2443; // eax
  CFlag<480> *v2444; // eax
  int v2445; // eax
  signed __int16 v2446; // ax
  SecondaryStat::VIEWELEM *v2447; // eax
  int v2448; // ST04_4
  SecondaryStat::VIEWELEM *v2449; // eax
  int v2450; // esi
  SecondaryStat::VIEWELEM *v2451; // eax
  CFlag<480> *v2452; // eax
  int v2453; // eax
  signed __int16 v2454; // ax
  SecondaryStat::VIEWELEM *v2455; // eax
  int v2456; // ST04_4
  SecondaryStat::VIEWELEM *v2457; // eax
  int v2458; // esi
  SecondaryStat::VIEWELEM *v2459; // eax
  CFlag<480> *v2460; // eax
  int v2461; // eax
  signed __int16 v2462; // ax
  SecondaryStat::VIEWELEM *v2463; // eax
  int v2464; // ST04_4
  SecondaryStat::VIEWELEM *v2465; // eax
  int v2466; // esi
  SecondaryStat::VIEWELEM *v2467; // eax
  CFlag<480> *v2468; // eax
  int v2469; // eax
  signed __int16 v2470; // ax
  SecondaryStat::VIEWELEM *v2471; // eax
  int v2472; // ST04_4
  SecondaryStat::VIEWELEM *v2473; // eax
  int v2474; // esi
  SecondaryStat::VIEWELEM *v2475; // eax
  CFlag<480> *v2476; // eax
  int v2477; // eax
  signed __int16 v2478; // ax
  SecondaryStat::VIEWELEM *v2479; // eax
  int v2480; // ST04_4
  SecondaryStat::VIEWELEM *v2481; // eax
  int v2482; // esi
  SecondaryStat::VIEWELEM *v2483; // eax
  CFlag<480> *v2484; // eax
  int v2485; // eax
  signed __int16 v2486; // ax
  SecondaryStat::VIEWELEM *v2487; // eax
  int v2488; // ST04_4
  SecondaryStat::VIEWELEM *v2489; // eax
  int v2490; // esi
  SecondaryStat::VIEWELEM *v2491; // eax
  CFlag<480> *v2492; // eax
  int v2493; // eax
  signed __int16 v2494; // ax
  SecondaryStat::VIEWELEM *v2495; // eax
  int v2496; // ST04_4
  SecondaryStat::VIEWELEM *v2497; // eax
  int v2498; // esi
  SecondaryStat::VIEWELEM *v2499; // eax
  CFlag<480> *v2500; // eax
  int v2501; // eax
  signed __int16 v2502; // ax
  SecondaryStat::VIEWELEM *v2503; // eax
  int v2504; // ST04_4
  SecondaryStat::VIEWELEM *v2505; // eax
  int v2506; // esi
  SecondaryStat::VIEWELEM *v2507; // eax
  CFlag<480> *v2508; // eax
  int v2509; // eax
  signed __int16 v2510; // ax
  SecondaryStat::VIEWELEM *v2511; // eax
  int v2512; // ST04_4
  SecondaryStat::VIEWELEM *v2513; // eax
  int v2514; // esi
  SecondaryStat::VIEWELEM *v2515; // eax
  CFlag<480> *v2516; // eax
  int v2517; // eax
  signed __int16 v2518; // ax
  SecondaryStat::VIEWELEM *v2519; // eax
  int v2520; // ST04_4
  SecondaryStat::VIEWELEM *v2521; // eax
  int v2522; // esi
  SecondaryStat::VIEWELEM *v2523; // eax
  CFlag<480> *v2524; // eax
  int v2525; // eax
  signed __int16 v2526; // ax
  SecondaryStat::VIEWELEM *v2527; // eax
  int v2528; // ST04_4
  SecondaryStat::VIEWELEM *v2529; // eax
  int v2530; // esi
  SecondaryStat::VIEWELEM *v2531; // eax
  CFlag<480> *v2532; // eax
  int v2533; // eax
  signed __int16 v2534; // ax
  SecondaryStat::VIEWELEM *v2535; // eax
  int v2536; // ST04_4
  SecondaryStat::VIEWELEM *v2537; // eax
  int v2538; // esi
  SecondaryStat::VIEWELEM *v2539; // eax
  CFlag<480> *v2540; // eax
  int v2541; // eax
  signed __int16 v2542; // ax
  SecondaryStat::VIEWELEM *v2543; // eax
  int v2544; // ST04_4
  SecondaryStat::VIEWELEM *v2545; // eax
  int v2546; // esi
  SecondaryStat::VIEWELEM *v2547; // eax
  CFlag<480> *v2548; // eax
  int v2549; // eax
  signed __int16 v2550; // ax
  SecondaryStat::VIEWELEM *v2551; // eax
  int v2552; // ST04_4
  SecondaryStat::VIEWELEM *v2553; // eax
  int v2554; // esi
  SecondaryStat::VIEWELEM *v2555; // eax
  CFlag<480> *v2556; // eax
  int v2557; // eax
  signed __int16 v2558; // ax
  SecondaryStat::VIEWELEM *v2559; // eax
  int v2560; // ST04_4
  SecondaryStat::VIEWELEM *v2561; // eax
  int v2562; // esi
  SecondaryStat::VIEWELEM *v2563; // eax
  CFlag<480> *v2564; // eax
  int v2565; // eax
  signed __int16 v2566; // ax
  SecondaryStat::VIEWELEM *v2567; // eax
  int v2568; // ST04_4
  SecondaryStat::VIEWELEM *v2569; // eax
  int v2570; // esi
  SecondaryStat::VIEWELEM *v2571; // eax
  CFlag<480> *v2572; // eax
  int v2573; // eax
  signed __int16 v2574; // ax
  SecondaryStat::VIEWELEM *v2575; // eax
  int v2576; // ST04_4
  SecondaryStat::VIEWELEM *v2577; // eax
  int v2578; // esi
  SecondaryStat::VIEWELEM *v2579; // eax
  CFlag<480> *v2580; // eax
  int v2581; // eax
  signed __int16 v2582; // ax
  SecondaryStat::VIEWELEM *v2583; // eax
  int v2584; // ST04_4
  SecondaryStat::VIEWELEM *v2585; // eax
  int v2586; // esi
  SecondaryStat::VIEWELEM *v2587; // eax
  CFlag<480> *v2588; // eax
  int v2589; // eax
  signed __int16 v2590; // ax
  SecondaryStat::VIEWELEM *v2591; // eax
  int v2592; // ST04_4
  SecondaryStat::VIEWELEM *v2593; // eax
  int v2594; // esi
  SecondaryStat::VIEWELEM *v2595; // eax
  CFlag<480> *v2596; // eax
  int v2597; // eax
  signed __int16 v2598; // ax
  SecondaryStat::VIEWELEM *v2599; // eax
  int v2600; // ST04_4
  SecondaryStat::VIEWELEM *v2601; // eax
  int v2602; // esi
  SecondaryStat::VIEWELEM *v2603; // eax
  CFlag<480> *v2604; // eax
  int v2605; // eax
  signed __int16 v2606; // ax
  SecondaryStat::VIEWELEM *v2607; // eax
  int v2608; // ST04_4
  SecondaryStat::VIEWELEM *v2609; // eax
  int v2610; // esi
  SecondaryStat::VIEWELEM *v2611; // eax
  CFlag<480> *v2612; // eax
  int v2613; // eax
  signed __int16 v2614; // ax
  SecondaryStat::VIEWELEM *v2615; // eax
  int v2616; // ST04_4
  SecondaryStat::VIEWELEM *v2617; // eax
  int v2618; // esi
  SecondaryStat::VIEWELEM *v2619; // eax
  CFlag<480> *v2620; // eax
  int v2621; // eax
  signed __int16 v2622; // ax
  SecondaryStat::VIEWELEM *v2623; // eax
  int v2624; // ST04_4
  SecondaryStat::VIEWELEM *v2625; // eax
  int v2626; // esi
  SecondaryStat::VIEWELEM *v2627; // eax
  CFlag<480> *v2628; // eax
  int v2629; // eax
  signed __int16 v2630; // ax
  SecondaryStat::VIEWELEM *v2631; // eax
  int v2632; // ST04_4
  SecondaryStat::VIEWELEM *v2633; // eax
  int v2634; // esi
  SecondaryStat::VIEWELEM *v2635; // eax
  CFlag<480> *v2636; // eax
  int v2637; // eax
  signed __int16 v2638; // ax
  SecondaryStat::VIEWELEM *v2639; // eax
  int v2640; // ST04_4
  SecondaryStat::VIEWELEM *v2641; // eax
  int v2642; // esi
  SecondaryStat::VIEWELEM *v2643; // eax
  CFlag<480> *v2644; // eax
  int v2645; // eax
  signed __int16 v2646; // ax
  SecondaryStat::VIEWELEM *v2647; // eax
  int v2648; // ST04_4
  SecondaryStat::VIEWELEM *v2649; // eax
  int v2650; // esi
  SecondaryStat::VIEWELEM *v2651; // eax
  CFlag<480> *v2652; // eax
  int v2653; // eax
  signed __int16 v2654; // ax
  SecondaryStat::VIEWELEM *v2655; // eax
  int v2656; // ST04_4
  SecondaryStat::VIEWELEM *v2657; // eax
  int v2658; // esi
  SecondaryStat::VIEWELEM *v2659; // eax
  CFlag<480> *v2660; // eax
  int v2661; // eax
  signed __int16 v2662; // ax
  SecondaryStat::VIEWELEM *v2663; // eax
  int v2664; // ST04_4
  SecondaryStat::VIEWELEM *v2665; // eax
  int v2666; // esi
  SecondaryStat::VIEWELEM *v2667; // eax
  CFlag<480> *v2668; // eax
  int v2669; // eax
  signed __int16 v2670; // ax
  SecondaryStat::VIEWELEM *v2671; // eax
  int v2672; // ST04_4
  SecondaryStat::VIEWELEM *v2673; // eax
  int v2674; // esi
  SecondaryStat::VIEWELEM *v2675; // eax
  CFlag<480> *v2676; // eax
  int v2677; // eax
  signed __int16 v2678; // ax
  SecondaryStat::VIEWELEM *v2679; // eax
  int v2680; // ST04_4
  SecondaryStat::VIEWELEM *v2681; // eax
  int v2682; // esi
  SecondaryStat::VIEWELEM *v2683; // eax
  CFlag<480> *v2684; // eax
  int v2685; // eax
  signed __int16 v2686; // ax
  SecondaryStat::VIEWELEM *v2687; // eax
  int v2688; // ST04_4
  SecondaryStat::VIEWELEM *v2689; // eax
  int v2690; // esi
  SecondaryStat::VIEWELEM *v2691; // eax
  CFlag<480> *v2692; // eax
  int v2693; // eax
  signed __int16 v2694; // ax
  SecondaryStat::VIEWELEM *v2695; // eax
  int v2696; // ST04_4
  SecondaryStat::VIEWELEM *v2697; // eax
  int v2698; // esi
  SecondaryStat::VIEWELEM *v2699; // eax
  CFlag<480> *v2700; // eax
  int v2701; // eax
  signed __int16 v2702; // ax
  SecondaryStat::VIEWELEM *v2703; // eax
  int v2704; // ST04_4
  SecondaryStat::VIEWELEM *v2705; // eax
  int v2706; // esi
  SecondaryStat::VIEWELEM *v2707; // eax
  CFlag<480> *v2708; // eax
  int v2709; // eax
  signed __int16 v2710; // ax
  SecondaryStat::VIEWELEM *v2711; // eax
  int v2712; // ST04_4
  SecondaryStat::VIEWELEM *v2713; // eax
  int v2714; // esi
  SecondaryStat::VIEWELEM *v2715; // eax
  CFlag<480> *v2716; // eax
  int v2717; // eax
  signed __int16 v2718; // ax
  SecondaryStat::VIEWELEM *v2719; // eax
  int v2720; // ST04_4
  SecondaryStat::VIEWELEM *v2721; // eax
  int v2722; // esi
  SecondaryStat::VIEWELEM *v2723; // eax
  CFlag<480> *v2724; // eax
  int v2725; // eax
  signed __int16 v2726; // ax
  SecondaryStat::VIEWELEM *v2727; // eax
  int v2728; // ST04_4
  SecondaryStat::VIEWELEM *v2729; // eax
  int v2730; // esi
  SecondaryStat::VIEWELEM *v2731; // eax
  CFlag<480> *v2732; // eax
  int v2733; // eax
  signed __int16 v2734; // ax
  SecondaryStat::VIEWELEM *v2735; // eax
  int v2736; // ST04_4
  SecondaryStat::VIEWELEM *v2737; // eax
  int v2738; // esi
  SecondaryStat::VIEWELEM *v2739; // eax
  CFlag<480> *v2740; // eax
  int v2741; // eax
  signed __int16 v2742; // ax
  SecondaryStat::VIEWELEM *v2743; // eax
  int v2744; // ST04_4
  SecondaryStat::VIEWELEM *v2745; // eax
  int v2746; // esi
  SecondaryStat::VIEWELEM *v2747; // eax
  CFlag<480> *v2748; // eax
  int v2749; // eax
  signed __int16 v2750; // ax
  SecondaryStat::VIEWELEM *v2751; // eax
  int v2752; // ST04_4
  SecondaryStat::VIEWELEM *v2753; // eax
  int v2754; // esi
  SecondaryStat::VIEWELEM *v2755; // eax
  CFlag<480> *v2756; // eax
  int v2757; // eax
  signed __int16 v2758; // ax
  SecondaryStat::VIEWELEM *v2759; // eax
  int v2760; // ST04_4
  SecondaryStat::VIEWELEM *v2761; // eax
  int v2762; // esi
  SecondaryStat::VIEWELEM *v2763; // eax
  CFlag<480> *v2764; // eax
  int v2765; // eax
  signed __int16 v2766; // ax
  SecondaryStat::VIEWELEM *v2767; // eax
  int v2768; // ST04_4
  SecondaryStat::VIEWELEM *v2769; // eax
  int v2770; // esi
  SecondaryStat::VIEWELEM *v2771; // eax
  CFlag<480> *v2772; // eax
  int v2773; // eax
  signed __int16 v2774; // ax
  SecondaryStat::VIEWELEM *v2775; // eax
  int v2776; // ST04_4
  SecondaryStat::VIEWELEM *v2777; // eax
  int v2778; // esi
  SecondaryStat::VIEWELEM *v2779; // eax
  CFlag<480> *v2780; // eax
  int v2781; // eax
  signed __int16 v2782; // ax
  SecondaryStat::VIEWELEM *v2783; // eax
  int v2784; // ST04_4
  SecondaryStat::VIEWELEM *v2785; // eax
  int v2786; // esi
  SecondaryStat::VIEWELEM *v2787; // eax
  CFlag<480> *v2788; // eax
  int v2789; // eax
  signed __int16 v2790; // ax
  SecondaryStat::VIEWELEM *v2791; // eax
  int v2792; // ST04_4
  SecondaryStat::VIEWELEM *v2793; // eax
  int v2794; // esi
  SecondaryStat::VIEWELEM *v2795; // eax
  CFlag<480> *v2796; // eax
  int v2797; // eax
  signed __int16 v2798; // ax
  SecondaryStat::VIEWELEM *v2799; // eax
  int v2800; // ST04_4
  SecondaryStat::VIEWELEM *v2801; // eax
  int v2802; // esi
  SecondaryStat::VIEWELEM *v2803; // eax
  CFlag<480> *v2804; // eax
  int v2805; // eax
  signed __int16 v2806; // ax
  SecondaryStat::VIEWELEM *v2807; // eax
  int v2808; // ST04_4
  SecondaryStat::VIEWELEM *v2809; // eax
  int v2810; // esi
  SecondaryStat::VIEWELEM *v2811; // eax
  CFlag<480> *v2812; // eax
  int v2813; // eax
  signed __int16 v2814; // ax
  SecondaryStat::VIEWELEM *v2815; // eax
  int v2816; // ST04_4
  SecondaryStat::VIEWELEM *v2817; // eax
  int v2818; // esi
  SecondaryStat::VIEWELEM *v2819; // eax
  CFlag<480> *v2820; // eax
  int v2821; // eax
  signed __int16 v2822; // ax
  SecondaryStat::VIEWELEM *v2823; // eax
  int v2824; // ST04_4
  SecondaryStat::VIEWELEM *v2825; // eax
  int v2826; // esi
  SecondaryStat::VIEWELEM *v2827; // eax
  CFlag<480> *v2828; // eax
  int v2829; // eax
  signed __int16 v2830; // ax
  SecondaryStat::VIEWELEM *v2831; // eax
  int v2832; // ST04_4
  SecondaryStat::VIEWELEM *v2833; // eax
  int v2834; // esi
  SecondaryStat::VIEWELEM *v2835; // eax
  CFlag<480> *v2836; // eax
  int v2837; // eax
  signed __int16 v2838; // ax
  SecondaryStat::VIEWELEM *v2839; // eax
  int v2840; // ST04_4
  SecondaryStat::VIEWELEM *v2841; // eax
  int v2842; // esi
  SecondaryStat::VIEWELEM *v2843; // eax
  CFlag<480> *v2844; // eax
  int v2845; // eax
  signed __int16 v2846; // ax
  SecondaryStat::VIEWELEM *v2847; // eax
  int v2848; // ST04_4
  SecondaryStat::VIEWELEM *v2849; // eax
  int v2850; // esi
  SecondaryStat::VIEWELEM *v2851; // eax
  CFlag<480> *v2852; // eax
  int v2853; // eax
  signed __int16 v2854; // ax
  SecondaryStat::VIEWELEM *v2855; // eax
  int v2856; // ST04_4
  SecondaryStat::VIEWELEM *v2857; // eax
  int v2858; // esi
  SecondaryStat::VIEWELEM *v2859; // eax
  CFlag<480> *v2860; // eax
  int v2861; // eax
  signed __int16 v2862; // ax
  SecondaryStat::VIEWELEM *v2863; // eax
  int v2864; // ST04_4
  SecondaryStat::VIEWELEM *v2865; // eax
  int v2866; // esi
  SecondaryStat::VIEWELEM *v2867; // eax
  CFlag<480> *v2868; // eax
  int v2869; // eax
  signed __int16 v2870; // ax
  SecondaryStat::VIEWELEM *v2871; // eax
  int v2872; // ST04_4
  SecondaryStat::VIEWELEM *v2873; // eax
  int v2874; // esi
  SecondaryStat::VIEWELEM *v2875; // eax
  CFlag<480> *v2876; // eax
  int v2877; // eax
  signed __int16 v2878; // ax
  SecondaryStat::VIEWELEM *v2879; // eax
  int v2880; // ST04_4
  SecondaryStat::VIEWELEM *v2881; // eax
  int v2882; // esi
  SecondaryStat::VIEWELEM *v2883; // eax
  CFlag<480> *v2884; // eax
  int v2885; // eax
  signed __int16 v2886; // ax
  SecondaryStat::VIEWELEM *v2887; // eax
  int v2888; // ST04_4
  SecondaryStat::VIEWELEM *v2889; // eax
  int v2890; // esi
  SecondaryStat::VIEWELEM *v2891; // eax
  CFlag<480> *v2892; // eax
  int v2893; // eax
  signed __int16 v2894; // ax
  SecondaryStat::VIEWELEM *v2895; // eax
  int v2896; // ST04_4
  SecondaryStat::VIEWELEM *v2897; // eax
  int v2898; // esi
  SecondaryStat::VIEWELEM *v2899; // eax
  CFlag<480> *v2900; // eax
  int v2901; // eax
  signed __int16 v2902; // ax
  SecondaryStat::VIEWELEM *v2903; // eax
  int v2904; // ST04_4
  SecondaryStat::VIEWELEM *v2905; // eax
  int v2906; // esi
  SecondaryStat::VIEWELEM *v2907; // eax
  CFlag<480> *v2908; // eax
  int v2909; // eax
  signed __int16 v2910; // ax
  SecondaryStat::VIEWELEM *v2911; // eax
  int v2912; // ST04_4
  SecondaryStat::VIEWELEM *v2913; // eax
  int v2914; // esi
  SecondaryStat::VIEWELEM *v2915; // eax
  CFlag<480> *v2916; // eax
  int v2917; // eax
  signed __int16 v2918; // ax
  SecondaryStat::VIEWELEM *v2919; // eax
  int v2920; // ST04_4
  SecondaryStat::VIEWELEM *v2921; // eax
  int v2922; // esi
  SecondaryStat::VIEWELEM *v2923; // eax
  CFlag<480> *v2924; // eax
  int v2925; // eax
  signed __int16 v2926; // ax
  SecondaryStat::VIEWELEM *v2927; // eax
  int v2928; // ST04_4
  SecondaryStat::VIEWELEM *v2929; // eax
  int v2930; // esi
  SecondaryStat::VIEWELEM *v2931; // eax
  CFlag<480> *v2932; // eax
  int v2933; // eax
  signed __int16 v2934; // ax
  SecondaryStat::VIEWELEM *v2935; // eax
  int v2936; // ST04_4
  SecondaryStat::VIEWELEM *v2937; // eax
  int v2938; // esi
  SecondaryStat::VIEWELEM *v2939; // eax
  CFlag<480> *v2940; // eax
  int v2941; // eax
  signed __int16 v2942; // ax
  SecondaryStat::VIEWELEM *v2943; // eax
  int v2944; // ST04_4
  SecondaryStat::VIEWELEM *v2945; // eax
  int v2946; // esi
  SecondaryStat::VIEWELEM *v2947; // eax
  CFlag<480> *v2948; // eax
  int v2949; // eax
  signed __int16 v2950; // ax
  SecondaryStat::VIEWELEM *v2951; // eax
  int v2952; // ST04_4
  SecondaryStat::VIEWELEM *v2953; // eax
  int v2954; // esi
  SecondaryStat::VIEWELEM *v2955; // eax
  CFlag<480> *v2956; // eax
  int v2957; // eax
  signed __int16 v2958; // ax
  SecondaryStat::VIEWELEM *v2959; // eax
  int v2960; // ST04_4
  SecondaryStat::VIEWELEM *v2961; // eax
  int v2962; // esi
  SecondaryStat::VIEWELEM *v2963; // eax
  CFlag<480> *v2964; // eax
  int v2965; // eax
  signed __int16 v2966; // ax
  SecondaryStat::VIEWELEM *v2967; // eax
  int v2968; // ST04_4
  SecondaryStat::VIEWELEM *v2969; // eax
  int v2970; // esi
  SecondaryStat::VIEWELEM *v2971; // eax
  CFlag<480> *v2972; // eax
  int v2973; // eax
  signed __int16 v2974; // ax
  SecondaryStat::VIEWELEM *v2975; // eax
  int v2976; // ST04_4
  SecondaryStat::VIEWELEM *v2977; // eax
  int v2978; // esi
  SecondaryStat::VIEWELEM *v2979; // eax
  CFlag<480> *v2980; // eax
  int v2981; // eax
  signed __int16 v2982; // ax
  SecondaryStat::VIEWELEM *v2983; // eax
  int v2984; // ST04_4
  SecondaryStat::VIEWELEM *v2985; // eax
  int v2986; // esi
  SecondaryStat::VIEWELEM *v2987; // eax
  CFlag<480> *v2988; // eax
  int v2989; // eax
  signed __int16 v2990; // ax
  SecondaryStat::VIEWELEM *v2991; // eax
  int v2992; // ST04_4
  SecondaryStat::VIEWELEM *v2993; // eax
  int v2994; // esi
  SecondaryStat::VIEWELEM *v2995; // eax
  CFlag<480> *v2996; // eax
  int v2997; // eax
  signed __int16 v2998; // ax
  SecondaryStat::VIEWELEM *v2999; // eax
  int v3000; // ST04_4
  SecondaryStat::VIEWELEM *v3001; // eax
  int v3002; // esi
  SecondaryStat::VIEWELEM *v3003; // eax
  CFlag<480> *v3004; // eax
  int v3005; // eax
  signed __int16 v3006; // ax
  SecondaryStat::VIEWELEM *v3007; // eax
  int v3008; // ST04_4
  SecondaryStat::VIEWELEM *v3009; // eax
  int v3010; // esi
  SecondaryStat::VIEWELEM *v3011; // eax
  CFlag<480> *v3012; // eax
  int v3013; // eax
  signed __int16 v3014; // ax
  SecondaryStat::VIEWELEM *v3015; // eax
  int v3016; // ST04_4
  SecondaryStat::VIEWELEM *v3017; // eax
  int v3018; // esi
  SecondaryStat::VIEWELEM *v3019; // eax
  CFlag<480> *v3020; // eax
  int v3021; // eax
  signed __int16 v3022; // ax
  SecondaryStat::VIEWELEM *v3023; // eax
  int v3024; // ST04_4
  SecondaryStat::VIEWELEM *v3025; // eax
  int v3026; // esi
  SecondaryStat::VIEWELEM *v3027; // eax
  CFlag<480> *v3028; // eax
  int v3029; // eax
  signed __int16 v3030; // ax
  SecondaryStat::VIEWELEM *v3031; // eax
  int v3032; // ST04_4
  SecondaryStat::VIEWELEM *v3033; // eax
  int v3034; // esi
  SecondaryStat::VIEWELEM *v3035; // eax
  CFlag<480> *v3036; // eax
  int v3037; // eax
  signed __int16 v3038; // ax
  SecondaryStat::VIEWELEM *v3039; // eax
  int v3040; // ST04_4
  SecondaryStat::VIEWELEM *v3041; // eax
  int v3042; // esi
  SecondaryStat::VIEWELEM *v3043; // eax
  CFlag<480> *v3044; // eax
  int v3045; // eax
  signed __int16 v3046; // ax
  SecondaryStat::VIEWELEM *v3047; // eax
  int v3048; // ST04_4
  SecondaryStat::VIEWELEM *v3049; // eax
  int v3050; // esi
  SecondaryStat::VIEWELEM *v3051; // eax
  CFlag<480> *v3052; // eax
  int v3053; // eax
  signed __int16 v3054; // ax
  SecondaryStat::VIEWELEM *v3055; // eax
  int v3056; // ST04_4
  SecondaryStat::VIEWELEM *v3057; // eax
  int v3058; // esi
  SecondaryStat::VIEWELEM *v3059; // eax
  CFlag<480> *v3060; // eax
  int v3061; // eax
  signed __int16 v3062; // ax
  SecondaryStat::VIEWELEM *v3063; // eax
  int v3064; // ST04_4
  SecondaryStat::VIEWELEM *v3065; // eax
  int v3066; // esi
  SecondaryStat::VIEWELEM *v3067; // eax
  CFlag<480> *v3068; // eax
  int v3069; // eax
  signed __int16 v3070; // ax
  SecondaryStat::VIEWELEM *v3071; // eax
  int v3072; // ST04_4
  SecondaryStat::VIEWELEM *v3073; // eax
  int v3074; // esi
  SecondaryStat::VIEWELEM *v3075; // eax
  CFlag<480> *v3076; // eax
  int v3077; // eax
  signed __int16 v3078; // ax
  SecondaryStat::VIEWELEM *v3079; // eax
  int v3080; // ST04_4
  SecondaryStat::VIEWELEM *v3081; // eax
  int v3082; // esi
  SecondaryStat::VIEWELEM *v3083; // eax
  CFlag<480> *v3084; // eax
  int v3085; // eax
  signed __int16 v3086; // ax
  SecondaryStat::VIEWELEM *v3087; // eax
  int v3088; // ST04_4
  SecondaryStat::VIEWELEM *v3089; // eax
  int v3090; // esi
  SecondaryStat::VIEWELEM *v3091; // eax
  CFlag<480> *v3092; // eax
  int v3093; // eax
  signed __int16 v3094; // ax
  SecondaryStat::VIEWELEM *v3095; // eax
  int v3096; // ST04_4
  SecondaryStat::VIEWELEM *v3097; // eax
  int v3098; // esi
  SecondaryStat::VIEWELEM *v3099; // eax
  CFlag<480> *v3100; // eax
  int v3101; // eax
  signed __int16 v3102; // ax
  SecondaryStat::VIEWELEM *v3103; // eax
  int v3104; // ST04_4
  SecondaryStat::VIEWELEM *v3105; // eax
  int v3106; // esi
  SecondaryStat::VIEWELEM *v3107; // eax
  CFlag<480> *v3108; // eax
  int v3109; // eax
  signed __int16 v3110; // ax
  SecondaryStat::VIEWELEM *v3111; // eax
  int v3112; // ST04_4
  SecondaryStat::VIEWELEM *v3113; // eax
  int v3114; // esi
  SecondaryStat::VIEWELEM *v3115; // eax
  CFlag<480> *v3116; // eax
  int v3117; // eax
  signed __int16 v3118; // ax
  SecondaryStat::VIEWELEM *v3119; // eax
  int v3120; // ST04_4
  SecondaryStat::VIEWELEM *v3121; // eax
  int v3122; // esi
  SecondaryStat::VIEWELEM *v3123; // eax
  CFlag<480> *v3124; // eax
  int v3125; // eax
  int v3126; // eax
  CFlag<480> *v3127; // eax
  DWORD v3128; // esi
  unsigned int v3129; // eax
  SecondaryStat::VIEWELEM *v3130; // eax
  char v3131; // al
  char v3132; // al
  unsigned __int8 v3133; // al
  CFlag<480> *v3134; // eax
  unsigned int v3135; // eax
  CFlag<480> *v3136; // eax
  unsigned __int8 v3137; // al
  CFlag<480> *v3138; // eax
  unsigned __int8 v3139; // al
  CFlag<480> *v3140; // eax
  int v3141; // eax
  CFlag<480> *v3142; // eax
  unsigned __int8 v3143; // al
  CFlag<480> *v3144; // eax
  unsigned __int8 v3145; // al
  CFlag<480> *v3146; // eax
  unsigned __int8 v3147; // al
  unsigned __int16 v3148; // ax
  unsigned __int8 v3149; // al
  unsigned __int8 v3150; // al
  CFlag<480> *v3151; // eax
  int v3152; // eax
  CFlag<480> *v3153; // eax
  char v3154; // al
  CFlag<480> *v3155; // eax
  int v3156; // eax
  int v3157; // eax
  CFlag<480> *v3158; // eax
  int v3159; // eax
  CFlag<480> *v3160; // eax
  CFlag<480> *v3161; // eax
  int v3162; // eax
  CFlag<480> *v3163; // eax
  CFlag<480> *v3164; // eax
  char v3165; // al
  CFlag<480> *v3166; // eax
  unsigned __int8 v3167; // al
  CFlag<480> *v3168; // eax
  unsigned __int8 v3169; // al
  CFlag<480> *v3170; // eax
  unsigned __int8 v3171; // al
  CFlag<480> *v3172; // eax
  unsigned __int8 v3173; // al
  CFlag<480> *v3174; // eax
  int v3175; // eax
  unsigned __int8 v3176; // al
  CFlag<480> *v3177; // eax
  unsigned __int8 v3178; // al
  CFlag<480> *v3179; // eax
  int v3180; // eax
  int v3181; // eax
  CFlag<480> *v3182; // eax
  int v3183; // eax
  CFlag<480> *v3184; // eax
  int v3185; // eax
  CFlag<480> *v3186; // eax
  int v3187; // eax
  int v3188; // eax
  CFlag<480> *v3189; // eax
  int v3190; // eax
  CFlag<480> *v3191; // eax
  int v3192; // eax
  CFlag<480> *v3193; // eax
  unsigned __int8 v3194; // al
  CFlag<480> *v3195; // eax
  unsigned __int8 v3196; // al
  CFlag<480> *v3197; // eax
  int v3198; // eax
  CFlag<480> *v3199; // eax
  int v3200; // eax
  CFlag<480> *v3201; // eax
  int v3202; // eax
  CFlag<480> *v3203; // eax
  int v3204; // eax
  CFlag<480> *v3205; // eax
  int v3206; // eax
  CFlag<480> *v3207; // eax
  int v3208; // eax
  int v3209; // eax
  CFlag<480> *v3210; // eax
  int v3211; // eax
  CFlag<480> *v3212; // eax
  int v3213; // eax
  CFlag<480> *v3214; // eax
  int v3215; // eax
  unsigned __int8 v3216; // al
  CFlag<480> *v3217; // eax
  int v3218; // eax
  CFlag<480> *v3219; // eax
  int v3220; // eax
  CFlag<480> *v3221; // eax
  int v3222; // eax
  int v3223; // eax
  CFlag<480> *v3224; // eax
  int v3225; // eax
  unsigned __int8 v3226; // al
  int v3227; // eax
  int v3228; // eax
  CFlag<480> *v3229; // eax
  unsigned __int8 v3230; // al
  CFlag<480> *v3231; // eax
  unsigned __int8 v3232; // al
  unsigned __int16 v3233; // ax
  CFlag<480> *v3234; // eax
  unsigned __int16 v3235; // ax
  unsigned __int8 v3236; // al
  int v3237; // eax
  CFlag<480> *v3238; // eax
  int v3239; // eax
  CFlag<480> *v3240; // eax
  int v3241; // eax
  CFlag<480> *v3242; // eax
  int v3243; // eax
  CFlag<480> *v3244; // eax
  CFlag<480> *v3245; // eax
  SecondaryStat::VIEWELEM *v3246; // eax
  SecondaryStat::VIEWELEM *v3247; // eax
  CFlag<480> *v3248; // ST04_4
  SecondaryStat::VIEWELEM *v3249; // eax
  CFlag<480> *v3250; // eax
  int v3251; // eax
  CFlag<480> *v3252; // eax
  int v3253; // eax
  SecondaryStat::VIEWELEM *v3254; // eax
  SecondaryStat::VIEWELEM *v3255; // eax
  SecondaryStat::VIEWELEM *v3257; // [esp+8h] [ebp-87A8h]
  SecondaryStat::VIEWELEM *v3258; // [esp+Ch] [ebp-87A4h]
  SecondaryStat::VIEWELEM *v3259; // [esp+10h] [ebp-87A0h]
  SecondaryStat::VIEWELEM *v3260; // [esp+14h] [ebp-879Ch]
  SecondaryStat::VIEWELEM *v3261; // [esp+18h] [ebp-8798h]
  SecondaryStat::VIEWELEM *v3262; // [esp+1Ch] [ebp-8794h]
  SecondaryStat::VIEWELEM *v3263; // [esp+20h] [ebp-8790h]
  SecondaryStat::VIEWELEM *v3264; // [esp+24h] [ebp-878Ch]
  SecondaryStat::VIEWELEM *v3265; // [esp+28h] [ebp-8788h]
  SecondaryStat::VIEWELEM *v3266; // [esp+2Ch] [ebp-8784h]
  SecondaryStat::VIEWELEM *v3267; // [esp+30h] [ebp-8780h]
  SecondaryStat::VIEWELEM *v3268; // [esp+34h] [ebp-877Ch]
  SecondaryStat::VIEWELEM *v3269; // [esp+38h] [ebp-8778h]
  SecondaryStat::VIEWELEM *v3270; // [esp+3Ch] [ebp-8774h]
  SecondaryStat::VIEWELEM *v3271; // [esp+40h] [ebp-8770h]
  SecondaryStat::VIEWELEM *v3272; // [esp+44h] [ebp-876Ch]
  SecondaryStat::VIEWELEM *v3273; // [esp+48h] [ebp-8768h]
  SecondaryStat::VIEWELEM *v3274; // [esp+4Ch] [ebp-8764h]
  SecondaryStat::VIEWELEM *v3275; // [esp+50h] [ebp-8760h]
  SecondaryStat::VIEWELEM *v3276; // [esp+54h] [ebp-875Ch]
  SecondaryStat::VIEWELEM *v3277; // [esp+58h] [ebp-8758h]
  SecondaryStat::VIEWELEM *v3278; // [esp+5Ch] [ebp-8754h]
  SecondaryStat::VIEWELEM *v3279; // [esp+60h] [ebp-8750h]
  SecondaryStat::VIEWELEM *v3280; // [esp+64h] [ebp-874Ch]
  SecondaryStat::VIEWELEM *v3281; // [esp+68h] [ebp-8748h]
  SecondaryStat::VIEWELEM *v3282; // [esp+6Ch] [ebp-8744h]
  SecondaryStat::VIEWELEM *v3283; // [esp+70h] [ebp-8740h]
  SecondaryStat::VIEWELEM *v3284; // [esp+74h] [ebp-873Ch]
  SecondaryStat::VIEWELEM *v3285; // [esp+78h] [ebp-8738h]
  SecondaryStat::VIEWELEM *v3286; // [esp+7Ch] [ebp-8734h]
  SecondaryStat::VIEWELEM *v3287; // [esp+80h] [ebp-8730h]
  SecondaryStat::VIEWELEM *v3288; // [esp+84h] [ebp-872Ch]
  SecondaryStat::VIEWELEM *v3289; // [esp+88h] [ebp-8728h]
  SecondaryStat::VIEWELEM *v3290; // [esp+8Ch] [ebp-8724h]
  SecondaryStat::VIEWELEM *v3291; // [esp+90h] [ebp-8720h]
  SecondaryStat::VIEWELEM *v3292; // [esp+94h] [ebp-871Ch]
  SecondaryStat::VIEWELEM *v3293; // [esp+98h] [ebp-8718h]
  SecondaryStat::VIEWELEM *v3294; // [esp+9Ch] [ebp-8714h]
  SecondaryStat::VIEWELEM *v3295; // [esp+A0h] [ebp-8710h]
  SecondaryStat::VIEWELEM *v3296; // [esp+A4h] [ebp-870Ch]
  SecondaryStat::VIEWELEM *v3297; // [esp+A8h] [ebp-8708h]
  SecondaryStat::VIEWELEM *v3298; // [esp+ACh] [ebp-8704h]
  SecondaryStat::VIEWELEM *v3299; // [esp+B0h] [ebp-8700h]
  SecondaryStat::VIEWELEM *v3300; // [esp+B4h] [ebp-86FCh]
  SecondaryStat::VIEWELEM *v3301; // [esp+B8h] [ebp-86F8h]
  SecondaryStat::VIEWELEM *v3302; // [esp+BCh] [ebp-86F4h]
  SecondaryStat::VIEWELEM *v3303; // [esp+C0h] [ebp-86F0h]
  SecondaryStat::VIEWELEM *v3304; // [esp+C4h] [ebp-86ECh]
  SecondaryStat::VIEWELEM *v3305; // [esp+C8h] [ebp-86E8h]
  SecondaryStat::VIEWELEM *v3306; // [esp+CCh] [ebp-86E4h]
  SecondaryStat::VIEWELEM *v3307; // [esp+D0h] [ebp-86E0h]
  SecondaryStat::VIEWELEM *v3308; // [esp+D4h] [ebp-86DCh]
  SecondaryStat::VIEWELEM *v3309; // [esp+D8h] [ebp-86D8h]
  SecondaryStat::VIEWELEM *v3310; // [esp+DCh] [ebp-86D4h]
  SecondaryStat::VIEWELEM *v3311; // [esp+E0h] [ebp-86D0h]
  SecondaryStat::VIEWELEM *v3312; // [esp+E4h] [ebp-86CCh]
  SecondaryStat::VIEWELEM *v3313; // [esp+E8h] [ebp-86C8h]
  SecondaryStat::VIEWELEM *v3314; // [esp+ECh] [ebp-86C4h]
  SecondaryStat::VIEWELEM *v3315; // [esp+F0h] [ebp-86C0h]
  SecondaryStat::VIEWELEM *v3316; // [esp+F4h] [ebp-86BCh]
  SecondaryStat::VIEWELEM *v3317; // [esp+F8h] [ebp-86B8h]
  SecondaryStat::VIEWELEM *v3318; // [esp+FCh] [ebp-86B4h]
  SecondaryStat::VIEWELEM *v3319; // [esp+100h] [ebp-86B0h]
  SecondaryStat::VIEWELEM *v3320; // [esp+104h] [ebp-86ACh]
  SecondaryStat::VIEWELEM *v3321; // [esp+108h] [ebp-86A8h]
  SecondaryStat::VIEWELEM *v3322; // [esp+10Ch] [ebp-86A4h]
  SecondaryStat::VIEWELEM *v3323; // [esp+110h] [ebp-86A0h]
  SecondaryStat::VIEWELEM *v3324; // [esp+114h] [ebp-869Ch]
  SecondaryStat::VIEWELEM *v3325; // [esp+118h] [ebp-8698h]
  SecondaryStat::VIEWELEM *v3326; // [esp+11Ch] [ebp-8694h]
  SecondaryStat::VIEWELEM *v3327; // [esp+120h] [ebp-8690h]
  SecondaryStat::VIEWELEM *v3328; // [esp+124h] [ebp-868Ch]
  SecondaryStat::VIEWELEM *v3329; // [esp+128h] [ebp-8688h]
  SecondaryStat::VIEWELEM *v3330; // [esp+12Ch] [ebp-8684h]
  SecondaryStat::VIEWELEM *v3331; // [esp+130h] [ebp-8680h]
  SecondaryStat::VIEWELEM *v3332; // [esp+134h] [ebp-867Ch]
  SecondaryStat::VIEWELEM *v3333; // [esp+138h] [ebp-8678h]
  SecondaryStat::VIEWELEM *v3334; // [esp+13Ch] [ebp-8674h]
  SecondaryStat::VIEWELEM *v3335; // [esp+140h] [ebp-8670h]
  SecondaryStat::VIEWELEM *v3336; // [esp+144h] [ebp-866Ch]
  SecondaryStat::VIEWELEM *v3337; // [esp+148h] [ebp-8668h]
  SecondaryStat::VIEWELEM *v3338; // [esp+14Ch] [ebp-8664h]
  SecondaryStat::VIEWELEM *v3339; // [esp+150h] [ebp-8660h]
  SecondaryStat::VIEWELEM *v3340; // [esp+154h] [ebp-865Ch]
  SecondaryStat::VIEWELEM *v3341; // [esp+158h] [ebp-8658h]
  SecondaryStat::VIEWELEM *v3342; // [esp+15Ch] [ebp-8654h]
  SecondaryStat::VIEWELEM *v3343; // [esp+160h] [ebp-8650h]
  SecondaryStat::VIEWELEM *v3344; // [esp+164h] [ebp-864Ch]
  SecondaryStat::VIEWELEM *v3345; // [esp+168h] [ebp-8648h]
  SecondaryStat::VIEWELEM *v3346; // [esp+16Ch] [ebp-8644h]
  SecondaryStat::VIEWELEM *v3347; // [esp+170h] [ebp-8640h]
  SecondaryStat::VIEWELEM *v3348; // [esp+174h] [ebp-863Ch]
  SecondaryStat::VIEWELEM *v3349; // [esp+178h] [ebp-8638h]
  SecondaryStat::VIEWELEM *v3350; // [esp+17Ch] [ebp-8634h]
  SecondaryStat::VIEWELEM *v3351; // [esp+180h] [ebp-8630h]
  SecondaryStat::VIEWELEM *v3352; // [esp+184h] [ebp-862Ch]
  SecondaryStat::VIEWELEM *v3353; // [esp+188h] [ebp-8628h]
  SecondaryStat::VIEWELEM *v3354; // [esp+18Ch] [ebp-8624h]
  SecondaryStat::VIEWELEM *v3355; // [esp+190h] [ebp-8620h]
  SecondaryStat::VIEWELEM *v3356; // [esp+194h] [ebp-861Ch]
  SecondaryStat::VIEWELEM *v3357; // [esp+198h] [ebp-8618h]
  SecondaryStat::VIEWELEM *v3358; // [esp+19Ch] [ebp-8614h]
  SecondaryStat::VIEWELEM *v3359; // [esp+1A0h] [ebp-8610h]
  SecondaryStat::VIEWELEM *v3360; // [esp+1A4h] [ebp-860Ch]
  SecondaryStat::VIEWELEM *v3361; // [esp+1A8h] [ebp-8608h]
  SecondaryStat::VIEWELEM *v3362; // [esp+1ACh] [ebp-8604h]
  SecondaryStat::VIEWELEM *v3363; // [esp+1B0h] [ebp-8600h]
  SecondaryStat::VIEWELEM *v3364; // [esp+1B4h] [ebp-85FCh]
  SecondaryStat::VIEWELEM *v3365; // [esp+1B8h] [ebp-85F8h]
  SecondaryStat::VIEWELEM *v3366; // [esp+1BCh] [ebp-85F4h]
  SecondaryStat::VIEWELEM *v3367; // [esp+1C0h] [ebp-85F0h]
  SecondaryStat::VIEWELEM *v3368; // [esp+1C4h] [ebp-85ECh]
  SecondaryStat::VIEWELEM *v3369; // [esp+1C8h] [ebp-85E8h]
  SecondaryStat::VIEWELEM *v3370; // [esp+1CCh] [ebp-85E4h]
  SecondaryStat::VIEWELEM *v3371; // [esp+1D0h] [ebp-85E0h]
  SecondaryStat::VIEWELEM *v3372; // [esp+1D4h] [ebp-85DCh]
  SecondaryStat::VIEWELEM *v3373; // [esp+1D8h] [ebp-85D8h]
  SecondaryStat::VIEWELEM *v3374; // [esp+1DCh] [ebp-85D4h]
  SecondaryStat::VIEWELEM *v3375; // [esp+1E0h] [ebp-85D0h]
  SecondaryStat::VIEWELEM *v3376; // [esp+1E4h] [ebp-85CCh]
  SecondaryStat::VIEWELEM *v3377; // [esp+1E8h] [ebp-85C8h]
  SecondaryStat::VIEWELEM *v3378; // [esp+1ECh] [ebp-85C4h]
  SecondaryStat::VIEWELEM *v3379; // [esp+1F0h] [ebp-85C0h]
  SecondaryStat::VIEWELEM *v3380; // [esp+1F4h] [ebp-85BCh]
  SecondaryStat::VIEWELEM *v3381; // [esp+1F8h] [ebp-85B8h]
  SecondaryStat::VIEWELEM *v3382; // [esp+1FCh] [ebp-85B4h]
  SecondaryStat::VIEWELEM *v3383; // [esp+200h] [ebp-85B0h]
  SecondaryStat::VIEWELEM *v3384; // [esp+204h] [ebp-85ACh]
  SecondaryStat::VIEWELEM *v3385; // [esp+208h] [ebp-85A8h]
  SecondaryStat::VIEWELEM *v3386; // [esp+20Ch] [ebp-85A4h]
  SecondaryStat::VIEWELEM *v3387; // [esp+210h] [ebp-85A0h]
  SecondaryStat::VIEWELEM *v3388; // [esp+214h] [ebp-859Ch]
  SecondaryStat::VIEWELEM *v3389; // [esp+218h] [ebp-8598h]
  SecondaryStat::VIEWELEM *v3390; // [esp+21Ch] [ebp-8594h]
  SecondaryStat::VIEWELEM *v3391; // [esp+220h] [ebp-8590h]
  SecondaryStat::VIEWELEM *v3392; // [esp+224h] [ebp-858Ch]
  SecondaryStat::VIEWELEM *v3393; // [esp+228h] [ebp-8588h]
  SecondaryStat::VIEWELEM *v3394; // [esp+22Ch] [ebp-8584h]
  SecondaryStat::VIEWELEM *v3395; // [esp+230h] [ebp-8580h]
  SecondaryStat::VIEWELEM *v3396; // [esp+234h] [ebp-857Ch]
  SecondaryStat::VIEWELEM *v3397; // [esp+238h] [ebp-8578h]
  SecondaryStat::VIEWELEM *v3398; // [esp+23Ch] [ebp-8574h]
  SecondaryStat::VIEWELEM *v3399; // [esp+240h] [ebp-8570h]
  SecondaryStat::VIEWELEM *v3400; // [esp+244h] [ebp-856Ch]
  SecondaryStat::VIEWELEM *v3401; // [esp+248h] [ebp-8568h]
  SecondaryStat::VIEWELEM *v3402; // [esp+24Ch] [ebp-8564h]
  SecondaryStat::VIEWELEM *v3403; // [esp+250h] [ebp-8560h]
  SecondaryStat::VIEWELEM *v3404; // [esp+254h] [ebp-855Ch]
  SecondaryStat::VIEWELEM *v3405; // [esp+258h] [ebp-8558h]
  SecondaryStat::VIEWELEM *v3406; // [esp+25Ch] [ebp-8554h]
  SecondaryStat::VIEWELEM *v3407; // [esp+260h] [ebp-8550h]
  SecondaryStat::VIEWELEM *v3408; // [esp+264h] [ebp-854Ch]
  SecondaryStat::VIEWELEM *v3409; // [esp+268h] [ebp-8548h]
  SecondaryStat::VIEWELEM *v3410; // [esp+26Ch] [ebp-8544h]
  SecondaryStat::VIEWELEM *v3411; // [esp+270h] [ebp-8540h]
  SecondaryStat::VIEWELEM *v3412; // [esp+274h] [ebp-853Ch]
  SecondaryStat::VIEWELEM *v3413; // [esp+278h] [ebp-8538h]
  SecondaryStat::VIEWELEM *v3414; // [esp+27Ch] [ebp-8534h]
  SecondaryStat::VIEWELEM *v3415; // [esp+280h] [ebp-8530h]
  SecondaryStat::VIEWELEM *v3416; // [esp+284h] [ebp-852Ch]
  SecondaryStat::VIEWELEM *v3417; // [esp+288h] [ebp-8528h]
  SecondaryStat::VIEWELEM *v3418; // [esp+28Ch] [ebp-8524h]
  SecondaryStat::VIEWELEM *v3419; // [esp+290h] [ebp-8520h]
  SecondaryStat::VIEWELEM *v3420; // [esp+294h] [ebp-851Ch]
  SecondaryStat::VIEWELEM *v3421; // [esp+298h] [ebp-8518h]
  SecondaryStat::VIEWELEM *v3422; // [esp+29Ch] [ebp-8514h]
  SecondaryStat::VIEWELEM *v3423; // [esp+2A0h] [ebp-8510h]
  SecondaryStat::VIEWELEM *v3424; // [esp+2A4h] [ebp-850Ch]
  SecondaryStat::VIEWELEM *v3425; // [esp+2A8h] [ebp-8508h]
  SecondaryStat::VIEWELEM *v3426; // [esp+2ACh] [ebp-8504h]
  SecondaryStat::VIEWELEM *v3427; // [esp+2B0h] [ebp-8500h]
  SecondaryStat::VIEWELEM *v3428; // [esp+2B4h] [ebp-84FCh]
  SecondaryStat::VIEWELEM *v3429; // [esp+2B8h] [ebp-84F8h]
  SecondaryStat::VIEWELEM *v3430; // [esp+2BCh] [ebp-84F4h]
  SecondaryStat::VIEWELEM *v3431; // [esp+2C0h] [ebp-84F0h]
  SecondaryStat::VIEWELEM *v3432; // [esp+2C4h] [ebp-84ECh]
  SecondaryStat::VIEWELEM *v3433; // [esp+2C8h] [ebp-84E8h]
  SecondaryStat::VIEWELEM *v3434; // [esp+2CCh] [ebp-84E4h]
  SecondaryStat::VIEWELEM *v3435; // [esp+2D0h] [ebp-84E0h]
  SecondaryStat::VIEWELEM *v3436; // [esp+2D4h] [ebp-84DCh]
  SecondaryStat::VIEWELEM *v3437; // [esp+2D8h] [ebp-84D8h]
  SecondaryStat::VIEWELEM *v3438; // [esp+2DCh] [ebp-84D4h]
  SecondaryStat::VIEWELEM *v3439; // [esp+2E0h] [ebp-84D0h]
  SecondaryStat::VIEWELEM *v3440; // [esp+2E4h] [ebp-84CCh]
  SecondaryStat::VIEWELEM *v3441; // [esp+2E8h] [ebp-84C8h]
  SecondaryStat::VIEWELEM *v3442; // [esp+2ECh] [ebp-84C4h]
  SecondaryStat::VIEWELEM *v3443; // [esp+2F0h] [ebp-84C0h]
  SecondaryStat::VIEWELEM *v3444; // [esp+2F4h] [ebp-84BCh]
  SecondaryStat::VIEWELEM *v3445; // [esp+2F8h] [ebp-84B8h]
  SecondaryStat::VIEWELEM *v3446; // [esp+2FCh] [ebp-84B4h]
  SecondaryStat::VIEWELEM *v3447; // [esp+300h] [ebp-84B0h]
  SecondaryStat::VIEWELEM *v3448; // [esp+304h] [ebp-84ACh]
  SecondaryStat::VIEWELEM *v3449; // [esp+308h] [ebp-84A8h]
  SecondaryStat::VIEWELEM *v3450; // [esp+30Ch] [ebp-84A4h]
  SecondaryStat::VIEWELEM *v3451; // [esp+310h] [ebp-84A0h]
  SecondaryStat::VIEWELEM *v3452; // [esp+314h] [ebp-849Ch]
  SecondaryStat::VIEWELEM *v3453; // [esp+318h] [ebp-8498h]
  SecondaryStat::VIEWELEM *v3454; // [esp+31Ch] [ebp-8494h]
  SecondaryStat::VIEWELEM *v3455; // [esp+320h] [ebp-8490h]
  SecondaryStat::VIEWELEM *v3456; // [esp+324h] [ebp-848Ch]
  SecondaryStat::VIEWELEM *v3457; // [esp+328h] [ebp-8488h]
  SecondaryStat::VIEWELEM *v3458; // [esp+32Ch] [ebp-8484h]
  SecondaryStat::VIEWELEM *v3459; // [esp+330h] [ebp-8480h]
  SecondaryStat::VIEWELEM *v3460; // [esp+334h] [ebp-847Ch]
  SecondaryStat::VIEWELEM *v3461; // [esp+338h] [ebp-8478h]
  SecondaryStat::VIEWELEM *v3462; // [esp+33Ch] [ebp-8474h]
  SecondaryStat::VIEWELEM *v3463; // [esp+340h] [ebp-8470h]
  SecondaryStat::VIEWELEM *v3464; // [esp+344h] [ebp-846Ch]
  SecondaryStat::VIEWELEM *v3465; // [esp+348h] [ebp-8468h]
  SecondaryStat::VIEWELEM *v3466; // [esp+34Ch] [ebp-8464h]
  SecondaryStat::VIEWELEM *v3467; // [esp+350h] [ebp-8460h]
  SecondaryStat::VIEWELEM *v3468; // [esp+354h] [ebp-845Ch]
  SecondaryStat::VIEWELEM *v3469; // [esp+358h] [ebp-8458h]
  SecondaryStat::VIEWELEM *v3470; // [esp+35Ch] [ebp-8454h]
  SecondaryStat::VIEWELEM *v3471; // [esp+360h] [ebp-8450h]
  SecondaryStat::VIEWELEM *v3472; // [esp+364h] [ebp-844Ch]
  SecondaryStat::VIEWELEM *v3473; // [esp+368h] [ebp-8448h]
  SecondaryStat::VIEWELEM *v3474; // [esp+36Ch] [ebp-8444h]
  SecondaryStat::VIEWELEM *v3475; // [esp+370h] [ebp-8440h]
  SecondaryStat::VIEWELEM *v3476; // [esp+374h] [ebp-843Ch]
  SecondaryStat::VIEWELEM *v3477; // [esp+378h] [ebp-8438h]
  SecondaryStat::VIEWELEM *v3478; // [esp+37Ch] [ebp-8434h]
  SecondaryStat::VIEWELEM *v3479; // [esp+380h] [ebp-8430h]
  SecondaryStat::VIEWELEM *v3480; // [esp+384h] [ebp-842Ch]
  SecondaryStat::VIEWELEM *v3481; // [esp+388h] [ebp-8428h]
  SecondaryStat::VIEWELEM *v3482; // [esp+38Ch] [ebp-8424h]
  SecondaryStat::VIEWELEM *v3483; // [esp+390h] [ebp-8420h]
  SecondaryStat::VIEWELEM *v3484; // [esp+394h] [ebp-841Ch]
  SecondaryStat::VIEWELEM *v3485; // [esp+398h] [ebp-8418h]
  SecondaryStat::VIEWELEM *v3486; // [esp+39Ch] [ebp-8414h]
  SecondaryStat::VIEWELEM *v3487; // [esp+3A0h] [ebp-8410h]
  SecondaryStat::VIEWELEM *v3488; // [esp+3A4h] [ebp-840Ch]
  SecondaryStat::VIEWELEM *v3489; // [esp+3A8h] [ebp-8408h]
  SecondaryStat::VIEWELEM *v3490; // [esp+3ACh] [ebp-8404h]
  SecondaryStat::VIEWELEM *v3491; // [esp+3B0h] [ebp-8400h]
  SecondaryStat::VIEWELEM *v3492; // [esp+3B4h] [ebp-83FCh]
  SecondaryStat::VIEWELEM *v3493; // [esp+3B8h] [ebp-83F8h]
  SecondaryStat::VIEWELEM *v3494; // [esp+3BCh] [ebp-83F4h]
  SecondaryStat::VIEWELEM *v3495; // [esp+3C0h] [ebp-83F0h]
  SecondaryStat::VIEWELEM *v3496; // [esp+3C4h] [ebp-83ECh]
  SecondaryStat::VIEWELEM *v3497; // [esp+3C8h] [ebp-83E8h]
  SecondaryStat::VIEWELEM *v3498; // [esp+3CCh] [ebp-83E4h]
  SecondaryStat::VIEWELEM *v3499; // [esp+3D0h] [ebp-83E0h]
  SecondaryStat::VIEWELEM *v3500; // [esp+3D4h] [ebp-83DCh]
  SecondaryStat::VIEWELEM *v3501; // [esp+3D8h] [ebp-83D8h]
  SecondaryStat::VIEWELEM *v3502; // [esp+3DCh] [ebp-83D4h]
  SecondaryStat::VIEWELEM *v3503; // [esp+3E0h] [ebp-83D0h]
  SecondaryStat::VIEWELEM *v3504; // [esp+3E4h] [ebp-83CCh]
  SecondaryStat::VIEWELEM *v3505; // [esp+3E8h] [ebp-83C8h]
  SecondaryStat::VIEWELEM *v3506; // [esp+3ECh] [ebp-83C4h]
  SecondaryStat::VIEWELEM *v3507; // [esp+3F0h] [ebp-83C0h]
  SecondaryStat::VIEWELEM *v3508; // [esp+3F4h] [ebp-83BCh]
  SecondaryStat::VIEWELEM *v3509; // [esp+3F8h] [ebp-83B8h]
  SecondaryStat::VIEWELEM *v3510; // [esp+3FCh] [ebp-83B4h]
  SecondaryStat::VIEWELEM *v3511; // [esp+400h] [ebp-83B0h]
  SecondaryStat::VIEWELEM *v3512; // [esp+404h] [ebp-83ACh]
  SecondaryStat::VIEWELEM *v3513; // [esp+408h] [ebp-83A8h]
  SecondaryStat::VIEWELEM *v3514; // [esp+40Ch] [ebp-83A4h]
  SecondaryStat::VIEWELEM *v3515; // [esp+410h] [ebp-83A0h]
  SecondaryStat::VIEWELEM *v3516; // [esp+414h] [ebp-839Ch]
  SecondaryStat::VIEWELEM *v3517; // [esp+418h] [ebp-8398h]
  SecondaryStat::VIEWELEM *v3518; // [esp+41Ch] [ebp-8394h]
  SecondaryStat::VIEWELEM *v3519; // [esp+420h] [ebp-8390h]
  SecondaryStat::VIEWELEM *v3520; // [esp+424h] [ebp-838Ch]
  SecondaryStat::VIEWELEM *v3521; // [esp+428h] [ebp-8388h]
  SecondaryStat::VIEWELEM *v3522; // [esp+42Ch] [ebp-8384h]
  SecondaryStat::VIEWELEM *v3523; // [esp+430h] [ebp-8380h]
  SecondaryStat::VIEWELEM *v3524; // [esp+434h] [ebp-837Ch]
  SecondaryStat::VIEWELEM *v3525; // [esp+438h] [ebp-8378h]
  SecondaryStat::VIEWELEM *v3526; // [esp+43Ch] [ebp-8374h]
  SecondaryStat::VIEWELEM *v3527; // [esp+440h] [ebp-8370h]
  SecondaryStat::VIEWELEM *v3528; // [esp+444h] [ebp-836Ch]
  SecondaryStat::VIEWELEM *v3529; // [esp+448h] [ebp-8368h]
  SecondaryStat::VIEWELEM *v3530; // [esp+44Ch] [ebp-8364h]
  SecondaryStat::VIEWELEM *v3531; // [esp+450h] [ebp-8360h]
  SecondaryStat::VIEWELEM *v3532; // [esp+454h] [ebp-835Ch]
  SecondaryStat::VIEWELEM *v3533; // [esp+458h] [ebp-8358h]
  SecondaryStat::VIEWELEM *v3534; // [esp+45Ch] [ebp-8354h]
  SecondaryStat::VIEWELEM *v3535; // [esp+460h] [ebp-8350h]
  SecondaryStat::VIEWELEM *v3536; // [esp+464h] [ebp-834Ch]
  SecondaryStat::VIEWELEM *v3537; // [esp+468h] [ebp-8348h]
  SecondaryStat::VIEWELEM *v3538; // [esp+46Ch] [ebp-8344h]
  SecondaryStat::VIEWELEM *v3539; // [esp+470h] [ebp-8340h]
  SecondaryStat::VIEWELEM *v3540; // [esp+474h] [ebp-833Ch]
  SecondaryStat::VIEWELEM *v3541; // [esp+478h] [ebp-8338h]
  SecondaryStat::VIEWELEM *v3542; // [esp+47Ch] [ebp-8334h]
  SecondaryStat::VIEWELEM *v3543; // [esp+480h] [ebp-8330h]
  SecondaryStat::VIEWELEM *v3544; // [esp+484h] [ebp-832Ch]
  SecondaryStat::VIEWELEM *v3545; // [esp+488h] [ebp-8328h]
  SecondaryStat::VIEWELEM *v3546; // [esp+48Ch] [ebp-8324h]
  SecondaryStat::VIEWELEM *v3547; // [esp+490h] [ebp-8320h]
  SecondaryStat::VIEWELEM *v3548; // [esp+494h] [ebp-831Ch]
  SecondaryStat::VIEWELEM *v3549; // [esp+498h] [ebp-8318h]
  SecondaryStat::VIEWELEM *v3550; // [esp+49Ch] [ebp-8314h]
  SecondaryStat::VIEWELEM *v3551; // [esp+4A0h] [ebp-8310h]
  SecondaryStat::VIEWELEM *v3552; // [esp+4A4h] [ebp-830Ch]
  SecondaryStat::VIEWELEM *v3553; // [esp+4A8h] [ebp-8308h]
  SecondaryStat::VIEWELEM *v3554; // [esp+4ACh] [ebp-8304h]
  SecondaryStat::VIEWELEM *v3555; // [esp+4B0h] [ebp-8300h]
  SecondaryStat::VIEWELEM *v3556; // [esp+4B4h] [ebp-82FCh]
  SecondaryStat::VIEWELEM *v3557; // [esp+4B8h] [ebp-82F8h]
  SecondaryStat::VIEWELEM *v3558; // [esp+4BCh] [ebp-82F4h]
  SecondaryStat::VIEWELEM *v3559; // [esp+4C0h] [ebp-82F0h]
  SecondaryStat::VIEWELEM *v3560; // [esp+4C4h] [ebp-82ECh]
  SecondaryStat::VIEWELEM *v3561; // [esp+4C8h] [ebp-82E8h]
  SecondaryStat::VIEWELEM *v3562; // [esp+4CCh] [ebp-82E4h]
  SecondaryStat::VIEWELEM *v3563; // [esp+4D0h] [ebp-82E0h]
  SecondaryStat::VIEWELEM *v3564; // [esp+4D4h] [ebp-82DCh]
  SecondaryStat::VIEWELEM *v3565; // [esp+4D8h] [ebp-82D8h]
  SecondaryStat::VIEWELEM *v3566; // [esp+4DCh] [ebp-82D4h]
  SecondaryStat::VIEWELEM *v3567; // [esp+4E0h] [ebp-82D0h]
  SecondaryStat::VIEWELEM *v3568; // [esp+4E4h] [ebp-82CCh]
  SecondaryStat::VIEWELEM *v3569; // [esp+4E8h] [ebp-82C8h]
  SecondaryStat::VIEWELEM *v3570; // [esp+4ECh] [ebp-82C4h]
  SecondaryStat::VIEWELEM *v3571; // [esp+4F0h] [ebp-82C0h]
  SecondaryStat::VIEWELEM *v3572; // [esp+4F4h] [ebp-82BCh]
  SecondaryStat::VIEWELEM *v3573; // [esp+4F8h] [ebp-82B8h]
  SecondaryStat::VIEWELEM *v3574; // [esp+4FCh] [ebp-82B4h]
  SecondaryStat::VIEWELEM *v3575; // [esp+500h] [ebp-82B0h]
  SecondaryStat::VIEWELEM *v3576; // [esp+504h] [ebp-82ACh]
  SecondaryStat::VIEWELEM *v3577; // [esp+508h] [ebp-82A8h]
  SecondaryStat::VIEWELEM *v3578; // [esp+50Ch] [ebp-82A4h]
  SecondaryStat::VIEWELEM *v3579; // [esp+510h] [ebp-82A0h]
  SecondaryStat::VIEWELEM *v3580; // [esp+514h] [ebp-829Ch]
  SecondaryStat::VIEWELEM *v3581; // [esp+518h] [ebp-8298h]
  SecondaryStat::VIEWELEM *v3582; // [esp+51Ch] [ebp-8294h]
  SecondaryStat::VIEWELEM *v3583; // [esp+520h] [ebp-8290h]
  SecondaryStat::VIEWELEM *v3584; // [esp+524h] [ebp-828Ch]
  SecondaryStat::VIEWELEM *v3585; // [esp+528h] [ebp-8288h]
  SecondaryStat::VIEWELEM *v3586; // [esp+52Ch] [ebp-8284h]
  SecondaryStat::VIEWELEM *v3587; // [esp+530h] [ebp-8280h]
  SecondaryStat::VIEWELEM *v3588; // [esp+534h] [ebp-827Ch]
  SecondaryStat::VIEWELEM *v3589; // [esp+538h] [ebp-8278h]
  SecondaryStat::VIEWELEM *v3590; // [esp+53Ch] [ebp-8274h]
  SecondaryStat::VIEWELEM *v3591; // [esp+540h] [ebp-8270h]
  SecondaryStat::VIEWELEM *v3592; // [esp+544h] [ebp-826Ch]
  SecondaryStat::VIEWELEM *v3593; // [esp+548h] [ebp-8268h]
  SecondaryStat::VIEWELEM *v3594; // [esp+54Ch] [ebp-8264h]
  SecondaryStat::VIEWELEM *v3595; // [esp+550h] [ebp-8260h]
  SecondaryStat::VIEWELEM *v3596; // [esp+554h] [ebp-825Ch]
  SecondaryStat::VIEWELEM *v3597; // [esp+558h] [ebp-8258h]
  SecondaryStat::VIEWELEM *v3598; // [esp+55Ch] [ebp-8254h]
  SecondaryStat::VIEWELEM *v3599; // [esp+560h] [ebp-8250h]
  SecondaryStat::VIEWELEM *v3600; // [esp+564h] [ebp-824Ch]
  SecondaryStat::VIEWELEM *v3601; // [esp+568h] [ebp-8248h]
  SecondaryStat::VIEWELEM *v3602; // [esp+56Ch] [ebp-8244h]
  SecondaryStat::VIEWELEM *v3603; // [esp+570h] [ebp-8240h]
  SecondaryStat::VIEWELEM *v3604; // [esp+574h] [ebp-823Ch]
  SecondaryStat::VIEWELEM *v3605; // [esp+578h] [ebp-8238h]
  SecondaryStat::VIEWELEM *v3606; // [esp+57Ch] [ebp-8234h]
  SecondaryStat::VIEWELEM *v3607; // [esp+580h] [ebp-8230h]
  SecondaryStat::VIEWELEM *v3608; // [esp+584h] [ebp-822Ch]
  SecondaryStat::VIEWELEM *v3609; // [esp+588h] [ebp-8228h]
  SecondaryStat::VIEWELEM *v3610; // [esp+58Ch] [ebp-8224h]
  SecondaryStat::VIEWELEM *v3611; // [esp+590h] [ebp-8220h]
  SecondaryStat::VIEWELEM *v3612; // [esp+594h] [ebp-821Ch]
  SecondaryStat::VIEWELEM *v3613; // [esp+598h] [ebp-8218h]
  SecondaryStat::VIEWELEM *v3614; // [esp+59Ch] [ebp-8214h]
  SecondaryStat::VIEWELEM *v3615; // [esp+5A0h] [ebp-8210h]
  SecondaryStat::VIEWELEM *v3616; // [esp+5A4h] [ebp-820Ch]
  SecondaryStat::VIEWELEM *v3617; // [esp+5A8h] [ebp-8208h]
  SecondaryStat::VIEWELEM *v3618; // [esp+5ACh] [ebp-8204h]
  SecondaryStat::VIEWELEM *v3619; // [esp+5B0h] [ebp-8200h]
  SecondaryStat::VIEWELEM *v3620; // [esp+5B4h] [ebp-81FCh]
  SecondaryStat::VIEWELEM *v3621; // [esp+5B8h] [ebp-81F8h]
  SecondaryStat::VIEWELEM *v3622; // [esp+5BCh] [ebp-81F4h]
  SecondaryStat::VIEWELEM *v3623; // [esp+5C0h] [ebp-81F0h]
  SecondaryStat::VIEWELEM *v3624; // [esp+5C4h] [ebp-81ECh]
  SecondaryStat::VIEWELEM *v3625; // [esp+5C8h] [ebp-81E8h]
  SecondaryStat::VIEWELEM *v3626; // [esp+5CCh] [ebp-81E4h]
  SecondaryStat::VIEWELEM *v3627; // [esp+5D0h] [ebp-81E0h]
  SecondaryStat::VIEWELEM *v3628; // [esp+5D4h] [ebp-81DCh]
  SecondaryStat::VIEWELEM *v3629; // [esp+5D8h] [ebp-81D8h]
  SecondaryStat::VIEWELEM *v3630; // [esp+5DCh] [ebp-81D4h]
  SecondaryStat::VIEWELEM *v3631; // [esp+5E0h] [ebp-81D0h]
  SecondaryStat::VIEWELEM *v3632; // [esp+5E4h] [ebp-81CCh]
  SecondaryStat::VIEWELEM *v3633; // [esp+5E8h] [ebp-81C8h]
  SecondaryStat::VIEWELEM *v3634; // [esp+5ECh] [ebp-81C4h]
  SecondaryStat::VIEWELEM *v3635; // [esp+5F0h] [ebp-81C0h]
  SecondaryStat::VIEWELEM *v3636; // [esp+5F4h] [ebp-81BCh]
  SecondaryStat::VIEWELEM *v3637; // [esp+5F8h] [ebp-81B8h]
  SecondaryStat::VIEWELEM *v3638; // [esp+5FCh] [ebp-81B4h]
  SecondaryStat::VIEWELEM *v3639; // [esp+600h] [ebp-81B0h]
  SecondaryStat::VIEWELEM *v3640; // [esp+604h] [ebp-81ACh]
  SecondaryStat::VIEWELEM *v3641; // [esp+608h] [ebp-81A8h]
  SecondaryStat::VIEWELEM *v3642; // [esp+60Ch] [ebp-81A4h]
  SecondaryStat::VIEWELEM *v3643; // [esp+610h] [ebp-81A0h]
  SecondaryStat::VIEWELEM *v3644; // [esp+614h] [ebp-819Ch]
  SecondaryStat::VIEWELEM *v3645; // [esp+618h] [ebp-8198h]
  SecondaryStat::VIEWELEM *v3646; // [esp+61Ch] [ebp-8194h]
  SecondaryStat::VIEWELEM *v3647; // [esp+620h] [ebp-8190h]
  SecondaryStat::VIEWELEM *v3648; // [esp+624h] [ebp-818Ch]
  SecondaryStat *v3649; // [esp+628h] [ebp-8188h]
  int v3650; // [esp+62Ch] [ebp-8184h]
  SecondaryStat::VIEWELEM *v3651; // [esp+630h] [ebp-8180h]
  SecondaryStat::VIEWELEM *v3652; // [esp+634h] [ebp-817Ch]
  CFlag<480> v3653; // [esp+638h] [ebp-8178h]
  CFlag<480> v3654; // [esp+674h] [ebp-813Ch]
  CFlag<480> v3655; // [esp+6B0h] [ebp-8100h]
  SecondaryStat::VIEWELEM *v3656; // [esp+6ECh] [ebp-80C4h]
  SecondaryStat::VIEWELEM *v3657; // [esp+6F0h] [ebp-80C0h]
  CFlag<480> v3658; // [esp+6F4h] [ebp-80BCh]
  CFlag<480> v3659; // [esp+730h] [ebp-8080h]
  CFlag<480> v3660; // [esp+76Ch] [ebp-8044h]
  CFlag<480> v3661; // [esp+7A8h] [ebp-8008h]
  CFlag<480> v3662; // [esp+7E4h] [ebp-7FCCh]
  CFlag<480> v3663; // [esp+820h] [ebp-7F90h]
  CFlag<480> v3664; // [esp+85Ch] [ebp-7F54h]
  CFlag<480> v3665; // [esp+898h] [ebp-7F18h]
  CFlag<480> v3666; // [esp+8D4h] [ebp-7EDCh]
  CFlag<480> v3667; // [esp+910h] [ebp-7EA0h]
  CFlag<480> v3668; // [esp+94Ch] [ebp-7E64h]
  CFlag<480> v3669; // [esp+988h] [ebp-7E28h]
  CFlag<480> v3670; // [esp+9C4h] [ebp-7DECh]
  CFlag<480> v3671; // [esp+A00h] [ebp-7DB0h]
  CFlag<480> v3672; // [esp+A3Ch] [ebp-7D74h]
  CFlag<480> v3673; // [esp+A78h] [ebp-7D38h]
  CFlag<480> v3674; // [esp+AB4h] [ebp-7CFCh]
  CFlag<480> v3675; // [esp+AF0h] [ebp-7CC0h]
  CFlag<480> v3676; // [esp+B2Ch] [ebp-7C84h]
  CFlag<480> v3677; // [esp+B68h] [ebp-7C48h]
  CFlag<480> v3678; // [esp+BA4h] [ebp-7C0Ch]
  CFlag<480> v3679; // [esp+BE0h] [ebp-7BD0h]
  CFlag<480> v3680; // [esp+C1Ch] [ebp-7B94h]
  CFlag<480> v3681; // [esp+C58h] [ebp-7B58h]
  CFlag<480> v3682; // [esp+C94h] [ebp-7B1Ch]
  CFlag<480> v3683; // [esp+CD0h] [ebp-7AE0h]
  CFlag<480> v3684; // [esp+D0Ch] [ebp-7AA4h]
  CFlag<480> v3685; // [esp+D48h] [ebp-7A68h]
  CFlag<480> v3686; // [esp+D84h] [ebp-7A2Ch]
  CFlag<480> v3687; // [esp+DC0h] [ebp-79F0h]
  CFlag<480> v3688; // [esp+DFCh] [ebp-79B4h]
  CFlag<480> v3689; // [esp+E38h] [ebp-7978h]
  CFlag<480> v3690; // [esp+E74h] [ebp-793Ch]
  CFlag<480> v3691; // [esp+EB0h] [ebp-7900h]
  CFlag<480> v3692; // [esp+EECh] [ebp-78C4h]
  CFlag<480> v3693; // [esp+F28h] [ebp-7888h]
  std::pair<std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0> >::iterator,bool> v3694; // [esp+F64h] [ebp-784Ch]
  unsigned int v3695; // [esp+F6Ch] [ebp-7844h]
  CFlag<480> v3696; // [esp+F70h] [ebp-7840h]
  CFlag<480> v3697; // [esp+FACh] [ebp-7804h]
  CFlag<480> v3698; // [esp+FE8h] [ebp-77C8h]
  CFlag<480> v3699; // [esp+1024h] [ebp-778Ch]
  CFlag<480> v3700; // [esp+1060h] [ebp-7750h]
  CFlag<480> v3701; // [esp+109Ch] [ebp-7714h]
  CFlag<480> v3702; // [esp+10D8h] [ebp-76D8h]
  CFlag<480> v3703; // [esp+1114h] [ebp-769Ch]
  CFlag<480> v3704; // [esp+1150h] [ebp-7660h]
  CFlag<480> v3705; // [esp+118Ch] [ebp-7624h]
  CFlag<480> v3706; // [esp+11C8h] [ebp-75E8h]
  CFlag<480> v3707; // [esp+1204h] [ebp-75ACh]
  CFlag<480> v3708; // [esp+1240h] [ebp-7570h]
  CFlag<480> v3709; // [esp+127Ch] [ebp-7534h]
  int v3710; // [esp+12B8h] [ebp-74F8h]
  CFlag<480> v3711; // [esp+12BCh] [ebp-74F4h]
  CFlag<480> v3712; // [esp+12F8h] [ebp-74B8h]
  SecondaryStat::VIEWELEM *v3713; // [esp+1334h] [ebp-747Ch]
  SecondaryStat::VIEWELEM *v3714; // [esp+1338h] [ebp-7478h]
  CFlag<480> v3715; // [esp+133Ch] [ebp-7474h]
  SecondaryStat::VIEWELEM *v3716; // [esp+1378h] [ebp-7438h]
  SecondaryStat::VIEWELEM *v3717; // [esp+137Ch] [ebp-7434h]
  CFlag<480> v3718; // [esp+1380h] [ebp-7430h]
  SecondaryStat::VIEWELEM *v3719; // [esp+13BCh] [ebp-73F4h]
  SecondaryStat::VIEWELEM *v3720; // [esp+13C0h] [ebp-73F0h]
  CFlag<480> v3721; // [esp+13C4h] [ebp-73ECh]
  SecondaryStat::VIEWELEM *v3722; // [esp+1400h] [ebp-73B0h]
  SecondaryStat::VIEWELEM *v3723; // [esp+1404h] [ebp-73ACh]
  CFlag<480> v3724; // [esp+1408h] [ebp-73A8h]
  SecondaryStat::VIEWELEM *v3725; // [esp+1444h] [ebp-736Ch]
  SecondaryStat::VIEWELEM *v3726; // [esp+1448h] [ebp-7368h]
  CFlag<480> v3727; // [esp+144Ch] [ebp-7364h]
  SecondaryStat::VIEWELEM *v3728; // [esp+1488h] [ebp-7328h]
  SecondaryStat::VIEWELEM *v3729; // [esp+148Ch] [ebp-7324h]
  CFlag<480> v3730; // [esp+1490h] [ebp-7320h]
  SecondaryStat::VIEWELEM *v3731; // [esp+14CCh] [ebp-72E4h]
  SecondaryStat::VIEWELEM *v3732; // [esp+14D0h] [ebp-72E0h]
  CFlag<480> v3733; // [esp+14D4h] [ebp-72DCh]
  SecondaryStat::VIEWELEM *v3734; // [esp+1510h] [ebp-72A0h]
  SecondaryStat::VIEWELEM *v3735; // [esp+1514h] [ebp-729Ch]
  CFlag<480> v3736; // [esp+1518h] [ebp-7298h]
  SecondaryStat::VIEWELEM *v3737; // [esp+1554h] [ebp-725Ch]
  SecondaryStat::VIEWELEM *v3738; // [esp+1558h] [ebp-7258h]
  CFlag<480> v3739; // [esp+155Ch] [ebp-7254h]
  SecondaryStat::VIEWELEM *v3740; // [esp+1598h] [ebp-7218h]
  SecondaryStat::VIEWELEM *v3741; // [esp+159Ch] [ebp-7214h]
  CFlag<480> v3742; // [esp+15A0h] [ebp-7210h]
  SecondaryStat::VIEWELEM *v3743; // [esp+15DCh] [ebp-71D4h]
  SecondaryStat::VIEWELEM *v3744; // [esp+15E0h] [ebp-71D0h]
  CFlag<480> v3745; // [esp+15E4h] [ebp-71CCh]
  SecondaryStat::VIEWELEM *v3746; // [esp+1620h] [ebp-7190h]
  SecondaryStat::VIEWELEM *v3747; // [esp+1624h] [ebp-718Ch]
  CFlag<480> v3748; // [esp+1628h] [ebp-7188h]
  SecondaryStat::VIEWELEM *v3749; // [esp+1664h] [ebp-714Ch]
  SecondaryStat::VIEWELEM *v3750; // [esp+1668h] [ebp-7148h]
  CFlag<480> v3751; // [esp+166Ch] [ebp-7144h]
  SecondaryStat::VIEWELEM *v3752; // [esp+16A8h] [ebp-7108h]
  SecondaryStat::VIEWELEM *v3753; // [esp+16ACh] [ebp-7104h]
  CFlag<480> v3754; // [esp+16B0h] [ebp-7100h]
  SecondaryStat::VIEWELEM *v3755; // [esp+16ECh] [ebp-70C4h]
  SecondaryStat::VIEWELEM *v3756; // [esp+16F0h] [ebp-70C0h]
  CFlag<480> v3757; // [esp+16F4h] [ebp-70BCh]
  SecondaryStat::VIEWELEM *v3758; // [esp+1730h] [ebp-7080h]
  SecondaryStat::VIEWELEM *v3759; // [esp+1734h] [ebp-707Ch]
  CFlag<480> v3760; // [esp+1738h] [ebp-7078h]
  SecondaryStat::VIEWELEM *v3761; // [esp+1774h] [ebp-703Ch]
  SecondaryStat::VIEWELEM *v3762; // [esp+1778h] [ebp-7038h]
  CFlag<480> v3763; // [esp+177Ch] [ebp-7034h]
  SecondaryStat::VIEWELEM *v3764; // [esp+17B8h] [ebp-6FF8h]
  SecondaryStat::VIEWELEM *v3765; // [esp+17BCh] [ebp-6FF4h]
  CFlag<480> v3766; // [esp+17C0h] [ebp-6FF0h]
  SecondaryStat::VIEWELEM *v3767; // [esp+17FCh] [ebp-6FB4h]
  SecondaryStat::VIEWELEM *v3768; // [esp+1800h] [ebp-6FB0h]
  CFlag<480> v3769; // [esp+1804h] [ebp-6FACh]
  SecondaryStat::VIEWELEM *v3770; // [esp+1840h] [ebp-6F70h]
  SecondaryStat::VIEWELEM *v3771; // [esp+1844h] [ebp-6F6Ch]
  CFlag<480> v3772; // [esp+1848h] [ebp-6F68h]
  SecondaryStat::VIEWELEM *v3773; // [esp+1884h] [ebp-6F2Ch]
  SecondaryStat::VIEWELEM *v3774; // [esp+1888h] [ebp-6F28h]
  CFlag<480> v3775; // [esp+188Ch] [ebp-6F24h]
  SecondaryStat::VIEWELEM *v3776; // [esp+18C8h] [ebp-6EE8h]
  SecondaryStat::VIEWELEM *v3777; // [esp+18CCh] [ebp-6EE4h]
  CFlag<480> v3778; // [esp+18D0h] [ebp-6EE0h]
  SecondaryStat::VIEWELEM *v3779; // [esp+190Ch] [ebp-6EA4h]
  SecondaryStat::VIEWELEM *v3780; // [esp+1910h] [ebp-6EA0h]
  CFlag<480> v3781; // [esp+1914h] [ebp-6E9Ch]
  SecondaryStat::VIEWELEM *v3782; // [esp+1950h] [ebp-6E60h]
  SecondaryStat::VIEWELEM *v3783; // [esp+1954h] [ebp-6E5Ch]
  CFlag<480> v3784; // [esp+1958h] [ebp-6E58h]
  SecondaryStat::VIEWELEM *v3785; // [esp+1994h] [ebp-6E1Ch]
  SecondaryStat::VIEWELEM *v3786; // [esp+1998h] [ebp-6E18h]
  CFlag<480> v3787; // [esp+199Ch] [ebp-6E14h]
  SecondaryStat::VIEWELEM *v3788; // [esp+19D8h] [ebp-6DD8h]
  SecondaryStat::VIEWELEM *v3789; // [esp+19DCh] [ebp-6DD4h]
  CFlag<480> v3790; // [esp+19E0h] [ebp-6DD0h]
  SecondaryStat::VIEWELEM *v3791; // [esp+1A1Ch] [ebp-6D94h]
  SecondaryStat::VIEWELEM *v3792; // [esp+1A20h] [ebp-6D90h]
  CFlag<480> v3793; // [esp+1A24h] [ebp-6D8Ch]
  SecondaryStat::VIEWELEM *v3794; // [esp+1A60h] [ebp-6D50h]
  SecondaryStat::VIEWELEM *v3795; // [esp+1A64h] [ebp-6D4Ch]
  CFlag<480> v3796; // [esp+1A68h] [ebp-6D48h]
  SecondaryStat::VIEWELEM *v3797; // [esp+1AA4h] [ebp-6D0Ch]
  SecondaryStat::VIEWELEM *v3798; // [esp+1AA8h] [ebp-6D08h]
  CFlag<480> v3799; // [esp+1AACh] [ebp-6D04h]
  SecondaryStat::VIEWELEM *v3800; // [esp+1AE8h] [ebp-6CC8h]
  SecondaryStat::VIEWELEM *v3801; // [esp+1AECh] [ebp-6CC4h]
  CFlag<480> v3802; // [esp+1AF0h] [ebp-6CC0h]
  SecondaryStat::VIEWELEM *v3803; // [esp+1B2Ch] [ebp-6C84h]
  SecondaryStat::VIEWELEM *v3804; // [esp+1B30h] [ebp-6C80h]
  CFlag<480> v3805; // [esp+1B34h] [ebp-6C7Ch]
  SecondaryStat::VIEWELEM *v3806; // [esp+1B70h] [ebp-6C40h]
  SecondaryStat::VIEWELEM *v3807; // [esp+1B74h] [ebp-6C3Ch]
  CFlag<480> v3808; // [esp+1B78h] [ebp-6C38h]
  SecondaryStat::VIEWELEM *v3809; // [esp+1BB4h] [ebp-6BFCh]
  SecondaryStat::VIEWELEM *v3810; // [esp+1BB8h] [ebp-6BF8h]
  CFlag<480> v3811; // [esp+1BBCh] [ebp-6BF4h]
  SecondaryStat::VIEWELEM *v3812; // [esp+1BF8h] [ebp-6BB8h]
  SecondaryStat::VIEWELEM *v3813; // [esp+1BFCh] [ebp-6BB4h]
  CFlag<480> v3814; // [esp+1C00h] [ebp-6BB0h]
  SecondaryStat::VIEWELEM *v3815; // [esp+1C3Ch] [ebp-6B74h]
  SecondaryStat::VIEWELEM *v3816; // [esp+1C40h] [ebp-6B70h]
  CFlag<480> v3817; // [esp+1C44h] [ebp-6B6Ch]
  SecondaryStat::VIEWELEM *v3818; // [esp+1C80h] [ebp-6B30h]
  SecondaryStat::VIEWELEM *v3819; // [esp+1C84h] [ebp-6B2Ch]
  CFlag<480> v3820; // [esp+1C88h] [ebp-6B28h]
  SecondaryStat::VIEWELEM *v3821; // [esp+1CC4h] [ebp-6AECh]
  SecondaryStat::VIEWELEM *v3822; // [esp+1CC8h] [ebp-6AE8h]
  CFlag<480> v3823; // [esp+1CCCh] [ebp-6AE4h]
  SecondaryStat::VIEWELEM *v3824; // [esp+1D08h] [ebp-6AA8h]
  SecondaryStat::VIEWELEM *v3825; // [esp+1D0Ch] [ebp-6AA4h]
  CFlag<480> v3826; // [esp+1D10h] [ebp-6AA0h]
  SecondaryStat::VIEWELEM *v3827; // [esp+1D4Ch] [ebp-6A64h]
  SecondaryStat::VIEWELEM *v3828; // [esp+1D50h] [ebp-6A60h]
  CFlag<480> v3829; // [esp+1D54h] [ebp-6A5Ch]
  SecondaryStat::VIEWELEM *v3830; // [esp+1D90h] [ebp-6A20h]
  SecondaryStat::VIEWELEM *v3831; // [esp+1D94h] [ebp-6A1Ch]
  CFlag<480> v3832; // [esp+1D98h] [ebp-6A18h]
  SecondaryStat::VIEWELEM *v3833; // [esp+1DD4h] [ebp-69DCh]
  SecondaryStat::VIEWELEM *v3834; // [esp+1DD8h] [ebp-69D8h]
  CFlag<480> v3835; // [esp+1DDCh] [ebp-69D4h]
  SecondaryStat::VIEWELEM *v3836; // [esp+1E18h] [ebp-6998h]
  SecondaryStat::VIEWELEM *v3837; // [esp+1E1Ch] [ebp-6994h]
  CFlag<480> v3838; // [esp+1E20h] [ebp-6990h]
  SecondaryStat::VIEWELEM *v3839; // [esp+1E5Ch] [ebp-6954h]
  SecondaryStat::VIEWELEM *v3840; // [esp+1E60h] [ebp-6950h]
  CFlag<480> v3841; // [esp+1E64h] [ebp-694Ch]
  SecondaryStat::VIEWELEM *v3842; // [esp+1EA0h] [ebp-6910h]
  SecondaryStat::VIEWELEM *v3843; // [esp+1EA4h] [ebp-690Ch]
  CFlag<480> v3844; // [esp+1EA8h] [ebp-6908h]
  SecondaryStat::VIEWELEM *v3845; // [esp+1EE4h] [ebp-68CCh]
  SecondaryStat::VIEWELEM *v3846; // [esp+1EE8h] [ebp-68C8h]
  CFlag<480> v3847; // [esp+1EECh] [ebp-68C4h]
  SecondaryStat::VIEWELEM *v3848; // [esp+1F28h] [ebp-6888h]
  SecondaryStat::VIEWELEM *v3849; // [esp+1F2Ch] [ebp-6884h]
  CFlag<480> v3850; // [esp+1F30h] [ebp-6880h]
  SecondaryStat::VIEWELEM *v3851; // [esp+1F6Ch] [ebp-6844h]
  SecondaryStat::VIEWELEM *v3852; // [esp+1F70h] [ebp-6840h]
  CFlag<480> v3853; // [esp+1F74h] [ebp-683Ch]
  SecondaryStat::VIEWELEM *v3854; // [esp+1FB0h] [ebp-6800h]
  SecondaryStat::VIEWELEM *v3855; // [esp+1FB4h] [ebp-67FCh]
  CFlag<480> v3856; // [esp+1FB8h] [ebp-67F8h]
  SecondaryStat::VIEWELEM *v3857; // [esp+1FF4h] [ebp-67BCh]
  SecondaryStat::VIEWELEM *v3858; // [esp+1FF8h] [ebp-67B8h]
  CFlag<480> v3859; // [esp+1FFCh] [ebp-67B4h]
  SecondaryStat::VIEWELEM *v3860; // [esp+2038h] [ebp-6778h]
  SecondaryStat::VIEWELEM *v3861; // [esp+203Ch] [ebp-6774h]
  CFlag<480> v3862; // [esp+2040h] [ebp-6770h]
  SecondaryStat::VIEWELEM *v3863; // [esp+207Ch] [ebp-6734h]
  SecondaryStat::VIEWELEM *v3864; // [esp+2080h] [ebp-6730h]
  CFlag<480> v3865; // [esp+2084h] [ebp-672Ch]
  SecondaryStat::VIEWELEM *v3866; // [esp+20C0h] [ebp-66F0h]
  SecondaryStat::VIEWELEM *v3867; // [esp+20C4h] [ebp-66ECh]
  CFlag<480> v3868; // [esp+20C8h] [ebp-66E8h]
  SecondaryStat::VIEWELEM *v3869; // [esp+2104h] [ebp-66ACh]
  SecondaryStat::VIEWELEM *v3870; // [esp+2108h] [ebp-66A8h]
  CFlag<480> v3871; // [esp+210Ch] [ebp-66A4h]
  SecondaryStat::VIEWELEM *v3872; // [esp+2148h] [ebp-6668h]
  SecondaryStat::VIEWELEM *v3873; // [esp+214Ch] [ebp-6664h]
  CFlag<480> v3874; // [esp+2150h] [ebp-6660h]
  SecondaryStat::VIEWELEM *v3875; // [esp+218Ch] [ebp-6624h]
  SecondaryStat::VIEWELEM *v3876; // [esp+2190h] [ebp-6620h]
  CFlag<480> v3877; // [esp+2194h] [ebp-661Ch]
  SecondaryStat::VIEWELEM *v3878; // [esp+21D0h] [ebp-65E0h]
  SecondaryStat::VIEWELEM *v3879; // [esp+21D4h] [ebp-65DCh]
  CFlag<480> v3880; // [esp+21D8h] [ebp-65D8h]
  SecondaryStat::VIEWELEM *v3881; // [esp+2214h] [ebp-659Ch]
  SecondaryStat::VIEWELEM *v3882; // [esp+2218h] [ebp-6598h]
  CFlag<480> v3883; // [esp+221Ch] [ebp-6594h]
  SecondaryStat::VIEWELEM *v3884; // [esp+2258h] [ebp-6558h]
  SecondaryStat::VIEWELEM *v3885; // [esp+225Ch] [ebp-6554h]
  CFlag<480> v3886; // [esp+2260h] [ebp-6550h]
  SecondaryStat::VIEWELEM *v3887; // [esp+229Ch] [ebp-6514h]
  SecondaryStat::VIEWELEM *v3888; // [esp+22A0h] [ebp-6510h]
  CFlag<480> v3889; // [esp+22A4h] [ebp-650Ch]
  SecondaryStat::VIEWELEM *v3890; // [esp+22E0h] [ebp-64D0h]
  SecondaryStat::VIEWELEM *v3891; // [esp+22E4h] [ebp-64CCh]
  CFlag<480> v3892; // [esp+22E8h] [ebp-64C8h]
  SecondaryStat::VIEWELEM *v3893; // [esp+2324h] [ebp-648Ch]
  SecondaryStat::VIEWELEM *v3894; // [esp+2328h] [ebp-6488h]
  CFlag<480> v3895; // [esp+232Ch] [ebp-6484h]
  SecondaryStat::VIEWELEM *v3896; // [esp+2368h] [ebp-6448h]
  SecondaryStat::VIEWELEM *v3897; // [esp+236Ch] [ebp-6444h]
  CFlag<480> v3898; // [esp+2370h] [ebp-6440h]
  SecondaryStat::VIEWELEM *v3899; // [esp+23ACh] [ebp-6404h]
  SecondaryStat::VIEWELEM *v3900; // [esp+23B0h] [ebp-6400h]
  CFlag<480> v3901; // [esp+23B4h] [ebp-63FCh]
  SecondaryStat::VIEWELEM *v3902; // [esp+23F0h] [ebp-63C0h]
  SecondaryStat::VIEWELEM *v3903; // [esp+23F4h] [ebp-63BCh]
  CFlag<480> v3904; // [esp+23F8h] [ebp-63B8h]
  SecondaryStat::VIEWELEM *v3905; // [esp+2434h] [ebp-637Ch]
  SecondaryStat::VIEWELEM *v3906; // [esp+2438h] [ebp-6378h]
  CFlag<480> v3907; // [esp+243Ch] [ebp-6374h]
  SecondaryStat::VIEWELEM *v3908; // [esp+2478h] [ebp-6338h]
  SecondaryStat::VIEWELEM *v3909; // [esp+247Ch] [ebp-6334h]
  CFlag<480> v3910; // [esp+2480h] [ebp-6330h]
  SecondaryStat::VIEWELEM *v3911; // [esp+24BCh] [ebp-62F4h]
  SecondaryStat::VIEWELEM *v3912; // [esp+24C0h] [ebp-62F0h]
  CFlag<480> v3913; // [esp+24C4h] [ebp-62ECh]
  SecondaryStat::VIEWELEM *v3914; // [esp+2500h] [ebp-62B0h]
  SecondaryStat::VIEWELEM *v3915; // [esp+2504h] [ebp-62ACh]
  CFlag<480> v3916; // [esp+2508h] [ebp-62A8h]
  SecondaryStat::VIEWELEM *v3917; // [esp+2544h] [ebp-626Ch]
  SecondaryStat::VIEWELEM *v3918; // [esp+2548h] [ebp-6268h]
  CFlag<480> v3919; // [esp+254Ch] [ebp-6264h]
  SecondaryStat::VIEWELEM *v3920; // [esp+2588h] [ebp-6228h]
  SecondaryStat::VIEWELEM *v3921; // [esp+258Ch] [ebp-6224h]
  CFlag<480> v3922; // [esp+2590h] [ebp-6220h]
  SecondaryStat::VIEWELEM *v3923; // [esp+25CCh] [ebp-61E4h]
  SecondaryStat::VIEWELEM *v3924; // [esp+25D0h] [ebp-61E0h]
  CFlag<480> v3925; // [esp+25D4h] [ebp-61DCh]
  SecondaryStat::VIEWELEM *v3926; // [esp+2610h] [ebp-61A0h]
  SecondaryStat::VIEWELEM *v3927; // [esp+2614h] [ebp-619Ch]
  CFlag<480> v3928; // [esp+2618h] [ebp-6198h]
  SecondaryStat::VIEWELEM *v3929; // [esp+2654h] [ebp-615Ch]
  SecondaryStat::VIEWELEM *v3930; // [esp+2658h] [ebp-6158h]
  CFlag<480> v3931; // [esp+265Ch] [ebp-6154h]
  SecondaryStat::VIEWELEM *v3932; // [esp+2698h] [ebp-6118h]
  SecondaryStat::VIEWELEM *v3933; // [esp+269Ch] [ebp-6114h]
  CFlag<480> v3934; // [esp+26A0h] [ebp-6110h]
  SecondaryStat::VIEWELEM *v3935; // [esp+26DCh] [ebp-60D4h]
  SecondaryStat::VIEWELEM *v3936; // [esp+26E0h] [ebp-60D0h]
  CFlag<480> v3937; // [esp+26E4h] [ebp-60CCh]
  SecondaryStat::VIEWELEM *v3938; // [esp+2720h] [ebp-6090h]
  SecondaryStat::VIEWELEM *v3939; // [esp+2724h] [ebp-608Ch]
  CFlag<480> v3940; // [esp+2728h] [ebp-6088h]
  SecondaryStat::VIEWELEM *v3941; // [esp+2764h] [ebp-604Ch]
  SecondaryStat::VIEWELEM *v3942; // [esp+2768h] [ebp-6048h]
  CFlag<480> v3943; // [esp+276Ch] [ebp-6044h]
  SecondaryStat::VIEWELEM *v3944; // [esp+27A8h] [ebp-6008h]
  SecondaryStat::VIEWELEM *v3945; // [esp+27ACh] [ebp-6004h]
  CFlag<480> v3946; // [esp+27B0h] [ebp-6000h]
  SecondaryStat::VIEWELEM *v3947; // [esp+27ECh] [ebp-5FC4h]
  SecondaryStat::VIEWELEM *v3948; // [esp+27F0h] [ebp-5FC0h]
  CFlag<480> v3949; // [esp+27F4h] [ebp-5FBCh]
  SecondaryStat::VIEWELEM *v3950; // [esp+2830h] [ebp-5F80h]
  SecondaryStat::VIEWELEM *v3951; // [esp+2834h] [ebp-5F7Ch]
  CFlag<480> v3952; // [esp+2838h] [ebp-5F78h]
  SecondaryStat::VIEWELEM *v3953; // [esp+2874h] [ebp-5F3Ch]
  SecondaryStat::VIEWELEM *v3954; // [esp+2878h] [ebp-5F38h]
  CFlag<480> v3955; // [esp+287Ch] [ebp-5F34h]
  SecondaryStat::VIEWELEM *v3956; // [esp+28B8h] [ebp-5EF8h]
  SecondaryStat::VIEWELEM *v3957; // [esp+28BCh] [ebp-5EF4h]
  CFlag<480> v3958; // [esp+28C0h] [ebp-5EF0h]
  SecondaryStat::VIEWELEM *v3959; // [esp+28FCh] [ebp-5EB4h]
  SecondaryStat::VIEWELEM *v3960; // [esp+2900h] [ebp-5EB0h]
  CFlag<480> v3961; // [esp+2904h] [ebp-5EACh]
  SecondaryStat::VIEWELEM *v3962; // [esp+2940h] [ebp-5E70h]
  SecondaryStat::VIEWELEM *v3963; // [esp+2944h] [ebp-5E6Ch]
  CFlag<480> v3964; // [esp+2948h] [ebp-5E68h]
  SecondaryStat::VIEWELEM *v3965; // [esp+2984h] [ebp-5E2Ch]
  SecondaryStat::VIEWELEM *v3966; // [esp+2988h] [ebp-5E28h]
  CFlag<480> v3967; // [esp+298Ch] [ebp-5E24h]
  SecondaryStat::VIEWELEM *v3968; // [esp+29C8h] [ebp-5DE8h]
  SecondaryStat::VIEWELEM *v3969; // [esp+29CCh] [ebp-5DE4h]
  CFlag<480> v3970; // [esp+29D0h] [ebp-5DE0h]
  SecondaryStat::VIEWELEM *v3971; // [esp+2A0Ch] [ebp-5DA4h]
  SecondaryStat::VIEWELEM *v3972; // [esp+2A10h] [ebp-5DA0h]
  CFlag<480> v3973; // [esp+2A14h] [ebp-5D9Ch]
  SecondaryStat::VIEWELEM *v3974; // [esp+2A50h] [ebp-5D60h]
  SecondaryStat::VIEWELEM *v3975; // [esp+2A54h] [ebp-5D5Ch]
  CFlag<480> v3976; // [esp+2A58h] [ebp-5D58h]
  SecondaryStat::VIEWELEM *v3977; // [esp+2A94h] [ebp-5D1Ch]
  SecondaryStat::VIEWELEM *v3978; // [esp+2A98h] [ebp-5D18h]
  CFlag<480> v3979; // [esp+2A9Ch] [ebp-5D14h]
  SecondaryStat::VIEWELEM *v3980; // [esp+2AD8h] [ebp-5CD8h]
  SecondaryStat::VIEWELEM *v3981; // [esp+2ADCh] [ebp-5CD4h]
  CFlag<480> v3982; // [esp+2AE0h] [ebp-5CD0h]
  SecondaryStat::VIEWELEM *v3983; // [esp+2B1Ch] [ebp-5C94h]
  SecondaryStat::VIEWELEM *v3984; // [esp+2B20h] [ebp-5C90h]
  CFlag<480> v3985; // [esp+2B24h] [ebp-5C8Ch]
  SecondaryStat::VIEWELEM *v3986; // [esp+2B60h] [ebp-5C50h]
  SecondaryStat::VIEWELEM *v3987; // [esp+2B64h] [ebp-5C4Ch]
  CFlag<480> v3988; // [esp+2B68h] [ebp-5C48h]
  SecondaryStat::VIEWELEM *v3989; // [esp+2BA4h] [ebp-5C0Ch]
  SecondaryStat::VIEWELEM *v3990; // [esp+2BA8h] [ebp-5C08h]
  CFlag<480> v3991; // [esp+2BACh] [ebp-5C04h]
  SecondaryStat::VIEWELEM *v3992; // [esp+2BE8h] [ebp-5BC8h]
  SecondaryStat::VIEWELEM *v3993; // [esp+2BECh] [ebp-5BC4h]
  CFlag<480> v3994; // [esp+2BF0h] [ebp-5BC0h]
  SecondaryStat::VIEWELEM *v3995; // [esp+2C2Ch] [ebp-5B84h]
  SecondaryStat::VIEWELEM *v3996; // [esp+2C30h] [ebp-5B80h]
  CFlag<480> v3997; // [esp+2C34h] [ebp-5B7Ch]
  SecondaryStat::VIEWELEM *v3998; // [esp+2C70h] [ebp-5B40h]
  SecondaryStat::VIEWELEM *v3999; // [esp+2C74h] [ebp-5B3Ch]
  CFlag<480> v4000; // [esp+2C78h] [ebp-5B38h]
  SecondaryStat::VIEWELEM *v4001; // [esp+2CB4h] [ebp-5AFCh]
  SecondaryStat::VIEWELEM *v4002; // [esp+2CB8h] [ebp-5AF8h]
  CFlag<480> v4003; // [esp+2CBCh] [ebp-5AF4h]
  SecondaryStat::VIEWELEM *v4004; // [esp+2CF8h] [ebp-5AB8h]
  SecondaryStat::VIEWELEM *v4005; // [esp+2CFCh] [ebp-5AB4h]
  CFlag<480> v4006; // [esp+2D00h] [ebp-5AB0h]
  SecondaryStat::VIEWELEM *v4007; // [esp+2D3Ch] [ebp-5A74h]
  SecondaryStat::VIEWELEM *v4008; // [esp+2D40h] [ebp-5A70h]
  CFlag<480> v4009; // [esp+2D44h] [ebp-5A6Ch]
  SecondaryStat::VIEWELEM *v4010; // [esp+2D80h] [ebp-5A30h]
  SecondaryStat::VIEWELEM *v4011; // [esp+2D84h] [ebp-5A2Ch]
  CFlag<480> v4012; // [esp+2D88h] [ebp-5A28h]
  SecondaryStat::VIEWELEM *v4013; // [esp+2DC4h] [ebp-59ECh]
  SecondaryStat::VIEWELEM *v4014; // [esp+2DC8h] [ebp-59E8h]
  CFlag<480> v4015; // [esp+2DCCh] [ebp-59E4h]
  SecondaryStat::VIEWELEM *v4016; // [esp+2E08h] [ebp-59A8h]
  SecondaryStat::VIEWELEM *v4017; // [esp+2E0Ch] [ebp-59A4h]
  CFlag<480> v4018; // [esp+2E10h] [ebp-59A0h]
  SecondaryStat::VIEWELEM *v4019; // [esp+2E4Ch] [ebp-5964h]
  SecondaryStat::VIEWELEM *v4020; // [esp+2E50h] [ebp-5960h]
  CFlag<480> v4021; // [esp+2E54h] [ebp-595Ch]
  SecondaryStat::VIEWELEM *v4022; // [esp+2E90h] [ebp-5920h]
  SecondaryStat::VIEWELEM *v4023; // [esp+2E94h] [ebp-591Ch]
  CFlag<480> v4024; // [esp+2E98h] [ebp-5918h]
  SecondaryStat::VIEWELEM *v4025; // [esp+2ED4h] [ebp-58DCh]
  SecondaryStat::VIEWELEM *v4026; // [esp+2ED8h] [ebp-58D8h]
  CFlag<480> v4027; // [esp+2EDCh] [ebp-58D4h]
  SecondaryStat::VIEWELEM *v4028; // [esp+2F18h] [ebp-5898h]
  SecondaryStat::VIEWELEM *v4029; // [esp+2F1Ch] [ebp-5894h]
  CFlag<480> v4030; // [esp+2F20h] [ebp-5890h]
  SecondaryStat::VIEWELEM *v4031; // [esp+2F5Ch] [ebp-5854h]
  SecondaryStat::VIEWELEM *v4032; // [esp+2F60h] [ebp-5850h]
  CFlag<480> v4033; // [esp+2F64h] [ebp-584Ch]
  SecondaryStat::VIEWELEM *v4034; // [esp+2FA0h] [ebp-5810h]
  SecondaryStat::VIEWELEM *v4035; // [esp+2FA4h] [ebp-580Ch]
  CFlag<480> v4036; // [esp+2FA8h] [ebp-5808h]
  SecondaryStat::VIEWELEM *v4037; // [esp+2FE4h] [ebp-57CCh]
  SecondaryStat::VIEWELEM *v4038; // [esp+2FE8h] [ebp-57C8h]
  CFlag<480> v4039; // [esp+2FECh] [ebp-57C4h]
  SecondaryStat::VIEWELEM *v4040; // [esp+3028h] [ebp-5788h]
  SecondaryStat::VIEWELEM *v4041; // [esp+302Ch] [ebp-5784h]
  CFlag<480> v4042; // [esp+3030h] [ebp-5780h]
  SecondaryStat::VIEWELEM *v4043; // [esp+306Ch] [ebp-5744h]
  SecondaryStat::VIEWELEM *v4044; // [esp+3070h] [ebp-5740h]
  CFlag<480> v4045; // [esp+3074h] [ebp-573Ch]
  SecondaryStat::VIEWELEM *v4046; // [esp+30B0h] [ebp-5700h]
  SecondaryStat::VIEWELEM *v4047; // [esp+30B4h] [ebp-56FCh]
  CFlag<480> v4048; // [esp+30B8h] [ebp-56F8h]
  SecondaryStat::VIEWELEM *v4049; // [esp+30F4h] [ebp-56BCh]
  SecondaryStat::VIEWELEM *v4050; // [esp+30F8h] [ebp-56B8h]
  CFlag<480> v4051; // [esp+30FCh] [ebp-56B4h]
  SecondaryStat::VIEWELEM *v4052; // [esp+3138h] [ebp-5678h]
  SecondaryStat::VIEWELEM *v4053; // [esp+313Ch] [ebp-5674h]
  CFlag<480> v4054; // [esp+3140h] [ebp-5670h]
  SecondaryStat::VIEWELEM *v4055; // [esp+317Ch] [ebp-5634h]
  SecondaryStat::VIEWELEM *v4056; // [esp+3180h] [ebp-5630h]
  CFlag<480> v4057; // [esp+3184h] [ebp-562Ch]
  SecondaryStat::VIEWELEM *v4058; // [esp+31C0h] [ebp-55F0h]
  SecondaryStat::VIEWELEM *v4059; // [esp+31C4h] [ebp-55ECh]
  CFlag<480> v4060; // [esp+31C8h] [ebp-55E8h]
  SecondaryStat::VIEWELEM *v4061; // [esp+3204h] [ebp-55ACh]
  SecondaryStat::VIEWELEM *v4062; // [esp+3208h] [ebp-55A8h]
  CFlag<480> v4063; // [esp+320Ch] [ebp-55A4h]
  SecondaryStat::VIEWELEM *v4064; // [esp+3248h] [ebp-5568h]
  SecondaryStat::VIEWELEM *v4065; // [esp+324Ch] [ebp-5564h]
  CFlag<480> v4066; // [esp+3250h] [ebp-5560h]
  SecondaryStat::VIEWELEM *v4067; // [esp+328Ch] [ebp-5524h]
  SecondaryStat::VIEWELEM *v4068; // [esp+3290h] [ebp-5520h]
  CFlag<480> v4069; // [esp+3294h] [ebp-551Ch]
  SecondaryStat::VIEWELEM *v4070; // [esp+32D0h] [ebp-54E0h]
  SecondaryStat::VIEWELEM *v4071; // [esp+32D4h] [ebp-54DCh]
  CFlag<480> v4072; // [esp+32D8h] [ebp-54D8h]
  SecondaryStat::VIEWELEM *v4073; // [esp+3314h] [ebp-549Ch]
  SecondaryStat::VIEWELEM *v4074; // [esp+3318h] [ebp-5498h]
  CFlag<480> v4075; // [esp+331Ch] [ebp-5494h]
  SecondaryStat::VIEWELEM *v4076; // [esp+3358h] [ebp-5458h]
  SecondaryStat::VIEWELEM *v4077; // [esp+335Ch] [ebp-5454h]
  CFlag<480> v4078; // [esp+3360h] [ebp-5450h]
  SecondaryStat::VIEWELEM *v4079; // [esp+339Ch] [ebp-5414h]
  SecondaryStat::VIEWELEM *v4080; // [esp+33A0h] [ebp-5410h]
  CFlag<480> v4081; // [esp+33A4h] [ebp-540Ch]
  SecondaryStat::VIEWELEM *v4082; // [esp+33E0h] [ebp-53D0h]
  SecondaryStat::VIEWELEM *v4083; // [esp+33E4h] [ebp-53CCh]
  CFlag<480> v4084; // [esp+33E8h] [ebp-53C8h]
  SecondaryStat::VIEWELEM *v4085; // [esp+3424h] [ebp-538Ch]
  SecondaryStat::VIEWELEM *v4086; // [esp+3428h] [ebp-5388h]
  CFlag<480> v4087; // [esp+342Ch] [ebp-5384h]
  SecondaryStat::VIEWELEM *v4088; // [esp+3468h] [ebp-5348h]
  SecondaryStat::VIEWELEM *v4089; // [esp+346Ch] [ebp-5344h]
  CFlag<480> v4090; // [esp+3470h] [ebp-5340h]
  SecondaryStat::VIEWELEM *v4091; // [esp+34ACh] [ebp-5304h]
  SecondaryStat::VIEWELEM *v4092; // [esp+34B0h] [ebp-5300h]
  CFlag<480> v4093; // [esp+34B4h] [ebp-52FCh]
  SecondaryStat::VIEWELEM *v4094; // [esp+34F0h] [ebp-52C0h]
  SecondaryStat::VIEWELEM *v4095; // [esp+34F4h] [ebp-52BCh]
  CFlag<480> v4096; // [esp+34F8h] [ebp-52B8h]
  SecondaryStat::VIEWELEM *v4097; // [esp+3534h] [ebp-527Ch]
  SecondaryStat::VIEWELEM *v4098; // [esp+3538h] [ebp-5278h]
  CFlag<480> v4099; // [esp+353Ch] [ebp-5274h]
  SecondaryStat::VIEWELEM *v4100; // [esp+3578h] [ebp-5238h]
  SecondaryStat::VIEWELEM *v4101; // [esp+357Ch] [ebp-5234h]
  CFlag<480> v4102; // [esp+3580h] [ebp-5230h]
  SecondaryStat::VIEWELEM *v4103; // [esp+35BCh] [ebp-51F4h]
  SecondaryStat::VIEWELEM *v4104; // [esp+35C0h] [ebp-51F0h]
  CFlag<480> v4105; // [esp+35C4h] [ebp-51ECh]
  SecondaryStat::VIEWELEM *v4106; // [esp+3600h] [ebp-51B0h]
  SecondaryStat::VIEWELEM *v4107; // [esp+3604h] [ebp-51ACh]
  CFlag<480> v4108; // [esp+3608h] [ebp-51A8h]
  SecondaryStat::VIEWELEM *v4109; // [esp+3644h] [ebp-516Ch]
  SecondaryStat::VIEWELEM *v4110; // [esp+3648h] [ebp-5168h]
  CFlag<480> v4111; // [esp+364Ch] [ebp-5164h]
  SecondaryStat::VIEWELEM *v4112; // [esp+3688h] [ebp-5128h]
  SecondaryStat::VIEWELEM *v4113; // [esp+368Ch] [ebp-5124h]
  CFlag<480> v4114; // [esp+3690h] [ebp-5120h]
  SecondaryStat::VIEWELEM *v4115; // [esp+36CCh] [ebp-50E4h]
  SecondaryStat::VIEWELEM *v4116; // [esp+36D0h] [ebp-50E0h]
  CFlag<480> v4117; // [esp+36D4h] [ebp-50DCh]
  SecondaryStat::VIEWELEM *v4118; // [esp+3710h] [ebp-50A0h]
  SecondaryStat::VIEWELEM *v4119; // [esp+3714h] [ebp-509Ch]
  CFlag<480> v4120; // [esp+3718h] [ebp-5098h]
  SecondaryStat::VIEWELEM *v4121; // [esp+3754h] [ebp-505Ch]
  SecondaryStat::VIEWELEM *v4122; // [esp+3758h] [ebp-5058h]
  CFlag<480> v4123; // [esp+375Ch] [ebp-5054h]
  SecondaryStat::VIEWELEM *v4124; // [esp+3798h] [ebp-5018h]
  SecondaryStat::VIEWELEM *v4125; // [esp+379Ch] [ebp-5014h]
  CFlag<480> v4126; // [esp+37A0h] [ebp-5010h]
  SecondaryStat::VIEWELEM *v4127; // [esp+37DCh] [ebp-4FD4h]
  SecondaryStat::VIEWELEM *v4128; // [esp+37E0h] [ebp-4FD0h]
  CFlag<480> v4129; // [esp+37E4h] [ebp-4FCCh]
  SecondaryStat::VIEWELEM *v4130; // [esp+3820h] [ebp-4F90h]
  SecondaryStat::VIEWELEM *v4131; // [esp+3824h] [ebp-4F8Ch]
  CFlag<480> v4132; // [esp+3828h] [ebp-4F88h]
  SecondaryStat::VIEWELEM *v4133; // [esp+3864h] [ebp-4F4Ch]
  SecondaryStat::VIEWELEM *v4134; // [esp+3868h] [ebp-4F48h]
  CFlag<480> v4135; // [esp+386Ch] [ebp-4F44h]
  SecondaryStat::VIEWELEM *v4136; // [esp+38A8h] [ebp-4F08h]
  SecondaryStat::VIEWELEM *v4137; // [esp+38ACh] [ebp-4F04h]
  CFlag<480> v4138; // [esp+38B0h] [ebp-4F00h]
  SecondaryStat::VIEWELEM *v4139; // [esp+38ECh] [ebp-4EC4h]
  SecondaryStat::VIEWELEM *v4140; // [esp+38F0h] [ebp-4EC0h]
  CFlag<480> v4141; // [esp+38F4h] [ebp-4EBCh]
  SecondaryStat::VIEWELEM *v4142; // [esp+3930h] [ebp-4E80h]
  SecondaryStat::VIEWELEM *v4143; // [esp+3934h] [ebp-4E7Ch]
  CFlag<480> v4144; // [esp+3938h] [ebp-4E78h]
  SecondaryStat::VIEWELEM *v4145; // [esp+3974h] [ebp-4E3Ch]
  SecondaryStat::VIEWELEM *v4146; // [esp+3978h] [ebp-4E38h]
  CFlag<480> v4147; // [esp+397Ch] [ebp-4E34h]
  SecondaryStat::VIEWELEM *v4148; // [esp+39B8h] [ebp-4DF8h]
  SecondaryStat::VIEWELEM *v4149; // [esp+39BCh] [ebp-4DF4h]
  CFlag<480> v4150; // [esp+39C0h] [ebp-4DF0h]
  SecondaryStat::VIEWELEM *v4151; // [esp+39FCh] [ebp-4DB4h]
  SecondaryStat::VIEWELEM *v4152; // [esp+3A00h] [ebp-4DB0h]
  CFlag<480> v4153; // [esp+3A04h] [ebp-4DACh]
  SecondaryStat::VIEWELEM *v4154; // [esp+3A40h] [ebp-4D70h]
  SecondaryStat::VIEWELEM *v4155; // [esp+3A44h] [ebp-4D6Ch]
  CFlag<480> v4156; // [esp+3A48h] [ebp-4D68h]
  SecondaryStat::VIEWELEM *v4157; // [esp+3A84h] [ebp-4D2Ch]
  SecondaryStat::VIEWELEM *v4158; // [esp+3A88h] [ebp-4D28h]
  CFlag<480> v4159; // [esp+3A8Ch] [ebp-4D24h]
  SecondaryStat::VIEWELEM *v4160; // [esp+3AC8h] [ebp-4CE8h]
  SecondaryStat::VIEWELEM *v4161; // [esp+3ACCh] [ebp-4CE4h]
  CFlag<480> v4162; // [esp+3AD0h] [ebp-4CE0h]
  SecondaryStat::VIEWELEM *v4163; // [esp+3B0Ch] [ebp-4CA4h]
  SecondaryStat::VIEWELEM *v4164; // [esp+3B10h] [ebp-4CA0h]
  CFlag<480> v4165; // [esp+3B14h] [ebp-4C9Ch]
  SecondaryStat::VIEWELEM *v4166; // [esp+3B50h] [ebp-4C60h]
  SecondaryStat::VIEWELEM *v4167; // [esp+3B54h] [ebp-4C5Ch]
  CFlag<480> v4168; // [esp+3B58h] [ebp-4C58h]
  SecondaryStat::VIEWELEM *v4169; // [esp+3B94h] [ebp-4C1Ch]
  SecondaryStat::VIEWELEM *v4170; // [esp+3B98h] [ebp-4C18h]
  CFlag<480> v4171; // [esp+3B9Ch] [ebp-4C14h]
  SecondaryStat::VIEWELEM *v4172; // [esp+3BD8h] [ebp-4BD8h]
  SecondaryStat::VIEWELEM *v4173; // [esp+3BDCh] [ebp-4BD4h]
  CFlag<480> v4174; // [esp+3BE0h] [ebp-4BD0h]
  SecondaryStat::VIEWELEM *v4175; // [esp+3C1Ch] [ebp-4B94h]
  SecondaryStat::VIEWELEM *v4176; // [esp+3C20h] [ebp-4B90h]
  CFlag<480> v4177; // [esp+3C24h] [ebp-4B8Ch]
  SecondaryStat::VIEWELEM *v4178; // [esp+3C60h] [ebp-4B50h]
  SecondaryStat::VIEWELEM *v4179; // [esp+3C64h] [ebp-4B4Ch]
  CFlag<480> v4180; // [esp+3C68h] [ebp-4B48h]
  SecondaryStat::VIEWELEM *v4181; // [esp+3CA4h] [ebp-4B0Ch]
  SecondaryStat::VIEWELEM *v4182; // [esp+3CA8h] [ebp-4B08h]
  CFlag<480> v4183; // [esp+3CACh] [ebp-4B04h]
  SecondaryStat::VIEWELEM *v4184; // [esp+3CE8h] [ebp-4AC8h]
  SecondaryStat::VIEWELEM *v4185; // [esp+3CECh] [ebp-4AC4h]
  CFlag<480> v4186; // [esp+3CF0h] [ebp-4AC0h]
  SecondaryStat::VIEWELEM *v4187; // [esp+3D2Ch] [ebp-4A84h]
  SecondaryStat::VIEWELEM *v4188; // [esp+3D30h] [ebp-4A80h]
  CFlag<480> v4189; // [esp+3D34h] [ebp-4A7Ch]
  SecondaryStat::VIEWELEM *v4190; // [esp+3D70h] [ebp-4A40h]
  SecondaryStat::VIEWELEM *v4191; // [esp+3D74h] [ebp-4A3Ch]
  CFlag<480> v4192; // [esp+3D78h] [ebp-4A38h]
  SecondaryStat::VIEWELEM *v4193; // [esp+3DB4h] [ebp-49FCh]
  SecondaryStat::VIEWELEM *v4194; // [esp+3DB8h] [ebp-49F8h]
  CFlag<480> v4195; // [esp+3DBCh] [ebp-49F4h]
  SecondaryStat::VIEWELEM *v4196; // [esp+3DF8h] [ebp-49B8h]
  SecondaryStat::VIEWELEM *v4197; // [esp+3DFCh] [ebp-49B4h]
  CFlag<480> v4198; // [esp+3E00h] [ebp-49B0h]
  SecondaryStat::VIEWELEM *v4199; // [esp+3E3Ch] [ebp-4974h]
  SecondaryStat::VIEWELEM *v4200; // [esp+3E40h] [ebp-4970h]
  CFlag<480> v4201; // [esp+3E44h] [ebp-496Ch]
  SecondaryStat::VIEWELEM *v4202; // [esp+3E80h] [ebp-4930h]
  SecondaryStat::VIEWELEM *v4203; // [esp+3E84h] [ebp-492Ch]
  CFlag<480> v4204; // [esp+3E88h] [ebp-4928h]
  SecondaryStat::VIEWELEM *v4205; // [esp+3EC4h] [ebp-48ECh]
  SecondaryStat::VIEWELEM *v4206; // [esp+3EC8h] [ebp-48E8h]
  CFlag<480> v4207; // [esp+3ECCh] [ebp-48E4h]
  SecondaryStat::VIEWELEM *v4208; // [esp+3F08h] [ebp-48A8h]
  SecondaryStat::VIEWELEM *v4209; // [esp+3F0Ch] [ebp-48A4h]
  CFlag<480> v4210; // [esp+3F10h] [ebp-48A0h]
  SecondaryStat::VIEWELEM *v4211; // [esp+3F4Ch] [ebp-4864h]
  SecondaryStat::VIEWELEM *v4212; // [esp+3F50h] [ebp-4860h]
  CFlag<480> v4213; // [esp+3F54h] [ebp-485Ch]
  SecondaryStat::VIEWELEM *v4214; // [esp+3F90h] [ebp-4820h]
  SecondaryStat::VIEWELEM *v4215; // [esp+3F94h] [ebp-481Ch]
  CFlag<480> v4216; // [esp+3F98h] [ebp-4818h]
  SecondaryStat::VIEWELEM *v4217; // [esp+3FD4h] [ebp-47DCh]
  SecondaryStat::VIEWELEM *v4218; // [esp+3FD8h] [ebp-47D8h]
  CFlag<480> v4219; // [esp+3FDCh] [ebp-47D4h]
  SecondaryStat::VIEWELEM *v4220; // [esp+4018h] [ebp-4798h]
  SecondaryStat::VIEWELEM *v4221; // [esp+401Ch] [ebp-4794h]
  CFlag<480> v4222; // [esp+4020h] [ebp-4790h]
  SecondaryStat::VIEWELEM *v4223; // [esp+405Ch] [ebp-4754h]
  SecondaryStat::VIEWELEM *v4224; // [esp+4060h] [ebp-4750h]
  CFlag<480> v4225; // [esp+4064h] [ebp-474Ch]
  SecondaryStat::VIEWELEM *v4226; // [esp+40A0h] [ebp-4710h]
  SecondaryStat::VIEWELEM *v4227; // [esp+40A4h] [ebp-470Ch]
  CFlag<480> v4228; // [esp+40A8h] [ebp-4708h]
  SecondaryStat::VIEWELEM *v4229; // [esp+40E4h] [ebp-46CCh]
  SecondaryStat::VIEWELEM *v4230; // [esp+40E8h] [ebp-46C8h]
  CFlag<480> v4231; // [esp+40ECh] [ebp-46C4h]
  SecondaryStat::VIEWELEM *v4232; // [esp+4128h] [ebp-4688h]
  SecondaryStat::VIEWELEM *v4233; // [esp+412Ch] [ebp-4684h]
  CFlag<480> v4234; // [esp+4130h] [ebp-4680h]
  SecondaryStat::VIEWELEM *v4235; // [esp+416Ch] [ebp-4644h]
  SecondaryStat::VIEWELEM *v4236; // [esp+4170h] [ebp-4640h]
  CFlag<480> v4237; // [esp+4174h] [ebp-463Ch]
  SecondaryStat::VIEWELEM *v4238; // [esp+41B0h] [ebp-4600h]
  SecondaryStat::VIEWELEM *v4239; // [esp+41B4h] [ebp-45FCh]
  CFlag<480> v4240; // [esp+41B8h] [ebp-45F8h]
  SecondaryStat::VIEWELEM *v4241; // [esp+41F4h] [ebp-45BCh]
  SecondaryStat::VIEWELEM *v4242; // [esp+41F8h] [ebp-45B8h]
  CFlag<480> v4243; // [esp+41FCh] [ebp-45B4h]
  SecondaryStat::VIEWELEM *v4244; // [esp+4238h] [ebp-4578h]
  SecondaryStat::VIEWELEM *v4245; // [esp+423Ch] [ebp-4574h]
  CFlag<480> v4246; // [esp+4240h] [ebp-4570h]
  SecondaryStat::VIEWELEM *v4247; // [esp+427Ch] [ebp-4534h]
  SecondaryStat::VIEWELEM *v4248; // [esp+4280h] [ebp-4530h]
  CFlag<480> v4249; // [esp+4284h] [ebp-452Ch]
  SecondaryStat::VIEWELEM *v4250; // [esp+42C0h] [ebp-44F0h]
  SecondaryStat::VIEWELEM *v4251; // [esp+42C4h] [ebp-44ECh]
  CFlag<480> v4252; // [esp+42C8h] [ebp-44E8h]
  SecondaryStat::VIEWELEM *v4253; // [esp+4304h] [ebp-44ACh]
  SecondaryStat::VIEWELEM *v4254; // [esp+4308h] [ebp-44A8h]
  CFlag<480> v4255; // [esp+430Ch] [ebp-44A4h]
  SecondaryStat::VIEWELEM *v4256; // [esp+4348h] [ebp-4468h]
  SecondaryStat::VIEWELEM *v4257; // [esp+434Ch] [ebp-4464h]
  CFlag<480> v4258; // [esp+4350h] [ebp-4460h]
  SecondaryStat::VIEWELEM *v4259; // [esp+438Ch] [ebp-4424h]
  SecondaryStat::VIEWELEM *v4260; // [esp+4390h] [ebp-4420h]
  CFlag<480> v4261; // [esp+4394h] [ebp-441Ch]
  SecondaryStat::VIEWELEM *v4262; // [esp+43D0h] [ebp-43E0h]
  SecondaryStat::VIEWELEM *v4263; // [esp+43D4h] [ebp-43DCh]
  CFlag<480> v4264; // [esp+43D8h] [ebp-43D8h]
  SecondaryStat::VIEWELEM *v4265; // [esp+4414h] [ebp-439Ch]
  SecondaryStat::VIEWELEM *v4266; // [esp+4418h] [ebp-4398h]
  CFlag<480> v4267; // [esp+441Ch] [ebp-4394h]
  SecondaryStat::VIEWELEM *v4268; // [esp+4458h] [ebp-4358h]
  SecondaryStat::VIEWELEM *v4269; // [esp+445Ch] [ebp-4354h]
  CFlag<480> v4270; // [esp+4460h] [ebp-4350h]
  SecondaryStat::VIEWELEM *v4271; // [esp+449Ch] [ebp-4314h]
  SecondaryStat::VIEWELEM *v4272; // [esp+44A0h] [ebp-4310h]
  CFlag<480> v4273; // [esp+44A4h] [ebp-430Ch]
  SecondaryStat::VIEWELEM *v4274; // [esp+44E0h] [ebp-42D0h]
  SecondaryStat::VIEWELEM *v4275; // [esp+44E4h] [ebp-42CCh]
  CFlag<480> v4276; // [esp+44E8h] [ebp-42C8h]
  SecondaryStat::VIEWELEM *v4277; // [esp+4524h] [ebp-428Ch]
  SecondaryStat::VIEWELEM *v4278; // [esp+4528h] [ebp-4288h]
  CFlag<480> v4279; // [esp+452Ch] [ebp-4284h]
  SecondaryStat::VIEWELEM *v4280; // [esp+4568h] [ebp-4248h]
  SecondaryStat::VIEWELEM *v4281; // [esp+456Ch] [ebp-4244h]
  CFlag<480> v4282; // [esp+4570h] [ebp-4240h]
  SecondaryStat::VIEWELEM *v4283; // [esp+45ACh] [ebp-4204h]
  SecondaryStat::VIEWELEM *v4284; // [esp+45B0h] [ebp-4200h]
  CFlag<480> v4285; // [esp+45B4h] [ebp-41FCh]
  SecondaryStat::VIEWELEM *v4286; // [esp+45F0h] [ebp-41C0h]
  SecondaryStat::VIEWELEM *v4287; // [esp+45F4h] [ebp-41BCh]
  CFlag<480> v4288; // [esp+45F8h] [ebp-41B8h]
  SecondaryStat::VIEWELEM *v4289; // [esp+4634h] [ebp-417Ch]
  SecondaryStat::VIEWELEM *v4290; // [esp+4638h] [ebp-4178h]
  CFlag<480> v4291; // [esp+463Ch] [ebp-4174h]
  SecondaryStat::VIEWELEM *v4292; // [esp+4678h] [ebp-4138h]
  SecondaryStat::VIEWELEM *v4293; // [esp+467Ch] [ebp-4134h]
  CFlag<480> v4294; // [esp+4680h] [ebp-4130h]
  SecondaryStat::VIEWELEM *v4295; // [esp+46BCh] [ebp-40F4h]
  SecondaryStat::VIEWELEM *v4296; // [esp+46C0h] [ebp-40F0h]
  CFlag<480> v4297; // [esp+46C4h] [ebp-40ECh]
  SecondaryStat::VIEWELEM *v4298; // [esp+4700h] [ebp-40B0h]
  SecondaryStat::VIEWELEM *v4299; // [esp+4704h] [ebp-40ACh]
  CFlag<480> v4300; // [esp+4708h] [ebp-40A8h]
  SecondaryStat::VIEWELEM *v4301; // [esp+4744h] [ebp-406Ch]
  SecondaryStat::VIEWELEM *v4302; // [esp+4748h] [ebp-4068h]
  CFlag<480> v4303; // [esp+474Ch] [ebp-4064h]
  SecondaryStat::VIEWELEM *v4304; // [esp+4788h] [ebp-4028h]
  SecondaryStat::VIEWELEM *v4305; // [esp+478Ch] [ebp-4024h]
  CFlag<480> v4306; // [esp+4790h] [ebp-4020h]
  SecondaryStat::VIEWELEM *v4307; // [esp+47CCh] [ebp-3FE4h]
  SecondaryStat::VIEWELEM *v4308; // [esp+47D0h] [ebp-3FE0h]
  CFlag<480> v4309; // [esp+47D4h] [ebp-3FDCh]
  SecondaryStat::VIEWELEM *v4310; // [esp+4810h] [ebp-3FA0h]
  SecondaryStat::VIEWELEM *v4311; // [esp+4814h] [ebp-3F9Ch]
  CFlag<480> v4312; // [esp+4818h] [ebp-3F98h]
  SecondaryStat::VIEWELEM *v4313; // [esp+4854h] [ebp-3F5Ch]
  SecondaryStat::VIEWELEM *v4314; // [esp+4858h] [ebp-3F58h]
  CFlag<480> v4315; // [esp+485Ch] [ebp-3F54h]
  SecondaryStat::VIEWELEM *v4316; // [esp+4898h] [ebp-3F18h]
  SecondaryStat::VIEWELEM *v4317; // [esp+489Ch] [ebp-3F14h]
  CFlag<480> v4318; // [esp+48A0h] [ebp-3F10h]
  SecondaryStat::VIEWELEM *v4319; // [esp+48DCh] [ebp-3ED4h]
  SecondaryStat::VIEWELEM *v4320; // [esp+48E0h] [ebp-3ED0h]
  CFlag<480> v4321; // [esp+48E4h] [ebp-3ECCh]
  SecondaryStat::VIEWELEM *v4322; // [esp+4920h] [ebp-3E90h]
  SecondaryStat::VIEWELEM *v4323; // [esp+4924h] [ebp-3E8Ch]
  CFlag<480> v4324; // [esp+4928h] [ebp-3E88h]
  SecondaryStat::VIEWELEM *v4325; // [esp+4964h] [ebp-3E4Ch]
  SecondaryStat::VIEWELEM *v4326; // [esp+4968h] [ebp-3E48h]
  CFlag<480> v4327; // [esp+496Ch] [ebp-3E44h]
  SecondaryStat::VIEWELEM *v4328; // [esp+49A8h] [ebp-3E08h]
  SecondaryStat::VIEWELEM *v4329; // [esp+49ACh] [ebp-3E04h]
  CFlag<480> v4330; // [esp+49B0h] [ebp-3E00h]
  SecondaryStat::VIEWELEM *v4331; // [esp+49ECh] [ebp-3DC4h]
  SecondaryStat::VIEWELEM *v4332; // [esp+49F0h] [ebp-3DC0h]
  CFlag<480> v4333; // [esp+49F4h] [ebp-3DBCh]
  SecondaryStat::VIEWELEM *v4334; // [esp+4A30h] [ebp-3D80h]
  SecondaryStat::VIEWELEM *v4335; // [esp+4A34h] [ebp-3D7Ch]
  CFlag<480> v4336; // [esp+4A38h] [ebp-3D78h]
  SecondaryStat::VIEWELEM *v4337; // [esp+4A74h] [ebp-3D3Ch]
  SecondaryStat::VIEWELEM *v4338; // [esp+4A78h] [ebp-3D38h]
  CFlag<480> v4339; // [esp+4A7Ch] [ebp-3D34h]
  SecondaryStat::VIEWELEM *v4340; // [esp+4AB8h] [ebp-3CF8h]
  SecondaryStat::VIEWELEM *v4341; // [esp+4ABCh] [ebp-3CF4h]
  CFlag<480> v4342; // [esp+4AC0h] [ebp-3CF0h]
  SecondaryStat::VIEWELEM *v4343; // [esp+4AFCh] [ebp-3CB4h]
  SecondaryStat::VIEWELEM *v4344; // [esp+4B00h] [ebp-3CB0h]
  CFlag<480> v4345; // [esp+4B04h] [ebp-3CACh]
  SecondaryStat::VIEWELEM *v4346; // [esp+4B40h] [ebp-3C70h]
  SecondaryStat::VIEWELEM *v4347; // [esp+4B44h] [ebp-3C6Ch]
  CFlag<480> v4348; // [esp+4B48h] [ebp-3C68h]
  SecondaryStat::VIEWELEM *v4349; // [esp+4B84h] [ebp-3C2Ch]
  SecondaryStat::VIEWELEM *v4350; // [esp+4B88h] [ebp-3C28h]
  CFlag<480> v4351; // [esp+4B8Ch] [ebp-3C24h]
  SecondaryStat::VIEWELEM *v4352; // [esp+4BC8h] [ebp-3BE8h]
  SecondaryStat::VIEWELEM *v4353; // [esp+4BCCh] [ebp-3BE4h]
  CFlag<480> v4354; // [esp+4BD0h] [ebp-3BE0h]
  SecondaryStat::VIEWELEM *v4355; // [esp+4C0Ch] [ebp-3BA4h]
  SecondaryStat::VIEWELEM *v4356; // [esp+4C10h] [ebp-3BA0h]
  CFlag<480> v4357; // [esp+4C14h] [ebp-3B9Ch]
  SecondaryStat::VIEWELEM *v4358; // [esp+4C50h] [ebp-3B60h]
  SecondaryStat::VIEWELEM *v4359; // [esp+4C54h] [ebp-3B5Ch]
  CFlag<480> v4360; // [esp+4C58h] [ebp-3B58h]
  SecondaryStat::VIEWELEM *v4361; // [esp+4C94h] [ebp-3B1Ch]
  SecondaryStat::VIEWELEM *v4362; // [esp+4C98h] [ebp-3B18h]
  CFlag<480> v4363; // [esp+4C9Ch] [ebp-3B14h]
  SecondaryStat::VIEWELEM *v4364; // [esp+4CD8h] [ebp-3AD8h]
  SecondaryStat::VIEWELEM *v4365; // [esp+4CDCh] [ebp-3AD4h]
  CFlag<480> v4366; // [esp+4CE0h] [ebp-3AD0h]
  SecondaryStat::VIEWELEM *v4367; // [esp+4D1Ch] [ebp-3A94h]
  SecondaryStat::VIEWELEM *v4368; // [esp+4D20h] [ebp-3A90h]
  CFlag<480> v4369; // [esp+4D24h] [ebp-3A8Ch]
  SecondaryStat::VIEWELEM *v4370; // [esp+4D60h] [ebp-3A50h]
  SecondaryStat::VIEWELEM *v4371; // [esp+4D64h] [ebp-3A4Ch]
  CFlag<480> v4372; // [esp+4D68h] [ebp-3A48h]
  SecondaryStat::VIEWELEM *v4373; // [esp+4DA4h] [ebp-3A0Ch]
  SecondaryStat::VIEWELEM *v4374; // [esp+4DA8h] [ebp-3A08h]
  CFlag<480> v4375; // [esp+4DACh] [ebp-3A04h]
  SecondaryStat::VIEWELEM *v4376; // [esp+4DE8h] [ebp-39C8h]
  SecondaryStat::VIEWELEM *v4377; // [esp+4DECh] [ebp-39C4h]
  CFlag<480> v4378; // [esp+4DF0h] [ebp-39C0h]
  SecondaryStat::VIEWELEM *v4379; // [esp+4E2Ch] [ebp-3984h]
  SecondaryStat::VIEWELEM *v4380; // [esp+4E30h] [ebp-3980h]
  CFlag<480> v4381; // [esp+4E34h] [ebp-397Ch]
  SecondaryStat::VIEWELEM *v4382; // [esp+4E70h] [ebp-3940h]
  SecondaryStat::VIEWELEM *v4383; // [esp+4E74h] [ebp-393Ch]
  CFlag<480> v4384; // [esp+4E78h] [ebp-3938h]
  SecondaryStat::VIEWELEM *v4385; // [esp+4EB4h] [ebp-38FCh]
  SecondaryStat::VIEWELEM *v4386; // [esp+4EB8h] [ebp-38F8h]
  CFlag<480> v4387; // [esp+4EBCh] [ebp-38F4h]
  SecondaryStat::VIEWELEM *v4388; // [esp+4EF8h] [ebp-38B8h]
  SecondaryStat::VIEWELEM *v4389; // [esp+4EFCh] [ebp-38B4h]
  CFlag<480> v4390; // [esp+4F00h] [ebp-38B0h]
  SecondaryStat::VIEWELEM *v4391; // [esp+4F3Ch] [ebp-3874h]
  SecondaryStat::VIEWELEM *v4392; // [esp+4F40h] [ebp-3870h]
  CFlag<480> v4393; // [esp+4F44h] [ebp-386Ch]
  SecondaryStat::VIEWELEM *v4394; // [esp+4F80h] [ebp-3830h]
  SecondaryStat::VIEWELEM *v4395; // [esp+4F84h] [ebp-382Ch]
  CFlag<480> v4396; // [esp+4F88h] [ebp-3828h]
  SecondaryStat::VIEWELEM *v4397; // [esp+4FC4h] [ebp-37ECh]
  SecondaryStat::VIEWELEM *v4398; // [esp+4FC8h] [ebp-37E8h]
  CFlag<480> v4399; // [esp+4FCCh] [ebp-37E4h]
  SecondaryStat::VIEWELEM *v4400; // [esp+5008h] [ebp-37A8h]
  SecondaryStat::VIEWELEM *v4401; // [esp+500Ch] [ebp-37A4h]
  CFlag<480> v4402; // [esp+5010h] [ebp-37A0h]
  SecondaryStat::VIEWELEM *v4403; // [esp+504Ch] [ebp-3764h]
  SecondaryStat::VIEWELEM *v4404; // [esp+5050h] [ebp-3760h]
  CFlag<480> v4405; // [esp+5054h] [ebp-375Ch]
  SecondaryStat::VIEWELEM *v4406; // [esp+5090h] [ebp-3720h]
  SecondaryStat::VIEWELEM *v4407; // [esp+5094h] [ebp-371Ch]
  CFlag<480> v4408; // [esp+5098h] [ebp-3718h]
  SecondaryStat::VIEWELEM *v4409; // [esp+50D4h] [ebp-36DCh]
  SecondaryStat::VIEWELEM *v4410; // [esp+50D8h] [ebp-36D8h]
  CFlag<480> v4411; // [esp+50DCh] [ebp-36D4h]
  SecondaryStat::VIEWELEM *v4412; // [esp+5118h] [ebp-3698h]
  SecondaryStat::VIEWELEM *v4413; // [esp+511Ch] [ebp-3694h]
  CFlag<480> v4414; // [esp+5120h] [ebp-3690h]
  SecondaryStat::VIEWELEM *v4415; // [esp+515Ch] [ebp-3654h]
  SecondaryStat::VIEWELEM *v4416; // [esp+5160h] [ebp-3650h]
  CFlag<480> v4417; // [esp+5164h] [ebp-364Ch]
  SecondaryStat::VIEWELEM *v4418; // [esp+51A0h] [ebp-3610h]
  SecondaryStat::VIEWELEM *v4419; // [esp+51A4h] [ebp-360Ch]
  CFlag<480> v4420; // [esp+51A8h] [ebp-3608h]
  SecondaryStat::VIEWELEM *v4421; // [esp+51E4h] [ebp-35CCh]
  SecondaryStat::VIEWELEM *v4422; // [esp+51E8h] [ebp-35C8h]
  CFlag<480> v4423; // [esp+51ECh] [ebp-35C4h]
  SecondaryStat::VIEWELEM *v4424; // [esp+5228h] [ebp-3588h]
  SecondaryStat::VIEWELEM *v4425; // [esp+522Ch] [ebp-3584h]
  CFlag<480> v4426; // [esp+5230h] [ebp-3580h]
  SecondaryStat::VIEWELEM *v4427; // [esp+526Ch] [ebp-3544h]
  SecondaryStat::VIEWELEM *v4428; // [esp+5270h] [ebp-3540h]
  CFlag<480> v4429; // [esp+5274h] [ebp-353Ch]
  SecondaryStat::VIEWELEM *v4430; // [esp+52B0h] [ebp-3500h]
  SecondaryStat::VIEWELEM *v4431; // [esp+52B4h] [ebp-34FCh]
  CFlag<480> v4432; // [esp+52B8h] [ebp-34F8h]
  SecondaryStat::VIEWELEM *v4433; // [esp+52F4h] [ebp-34BCh]
  SecondaryStat::VIEWELEM *v4434; // [esp+52F8h] [ebp-34B8h]
  CFlag<480> v4435; // [esp+52FCh] [ebp-34B4h]
  SecondaryStat::VIEWELEM *v4436; // [esp+5338h] [ebp-3478h]
  SecondaryStat::VIEWELEM *v4437; // [esp+533Ch] [ebp-3474h]
  CFlag<480> v4438; // [esp+5340h] [ebp-3470h]
  SecondaryStat::VIEWELEM *v4439; // [esp+537Ch] [ebp-3434h]
  SecondaryStat::VIEWELEM *v4440; // [esp+5380h] [ebp-3430h]
  CFlag<480> v4441; // [esp+5384h] [ebp-342Ch]
  SecondaryStat::VIEWELEM *v4442; // [esp+53C0h] [ebp-33F0h]
  SecondaryStat::VIEWELEM *v4443; // [esp+53C4h] [ebp-33ECh]
  CFlag<480> v4444; // [esp+53C8h] [ebp-33E8h]
  SecondaryStat::VIEWELEM *v4445; // [esp+5404h] [ebp-33ACh]
  SecondaryStat::VIEWELEM *v4446; // [esp+5408h] [ebp-33A8h]
  CFlag<480> v4447; // [esp+540Ch] [ebp-33A4h]
  SecondaryStat::VIEWELEM *v4448; // [esp+5448h] [ebp-3368h]
  SecondaryStat::VIEWELEM *v4449; // [esp+544Ch] [ebp-3364h]
  CFlag<480> v4450; // [esp+5450h] [ebp-3360h]
  SecondaryStat::VIEWELEM *v4451; // [esp+548Ch] [ebp-3324h]
  SecondaryStat::VIEWELEM *v4452; // [esp+5490h] [ebp-3320h]
  CFlag<480> v4453; // [esp+5494h] [ebp-331Ch]
  SecondaryStat::VIEWELEM *v4454; // [esp+54D0h] [ebp-32E0h]
  SecondaryStat::VIEWELEM *v4455; // [esp+54D4h] [ebp-32DCh]
  CFlag<480> v4456; // [esp+54D8h] [ebp-32D8h]
  SecondaryStat::VIEWELEM *v4457; // [esp+5514h] [ebp-329Ch]
  SecondaryStat::VIEWELEM *v4458; // [esp+5518h] [ebp-3298h]
  CFlag<480> v4459; // [esp+551Ch] [ebp-3294h]
  SecondaryStat::VIEWELEM *v4460; // [esp+5558h] [ebp-3258h]
  SecondaryStat::VIEWELEM *v4461; // [esp+555Ch] [ebp-3254h]
  CFlag<480> v4462; // [esp+5560h] [ebp-3250h]
  SecondaryStat::VIEWELEM *v4463; // [esp+559Ch] [ebp-3214h]
  SecondaryStat::VIEWELEM *v4464; // [esp+55A0h] [ebp-3210h]
  CFlag<480> v4465; // [esp+55A4h] [ebp-320Ch]
  SecondaryStat::VIEWELEM *v4466; // [esp+55E0h] [ebp-31D0h]
  SecondaryStat::VIEWELEM *v4467; // [esp+55E4h] [ebp-31CCh]
  CFlag<480> v4468; // [esp+55E8h] [ebp-31C8h]
  SecondaryStat::VIEWELEM *v4469; // [esp+5624h] [ebp-318Ch]
  SecondaryStat::VIEWELEM *v4470; // [esp+5628h] [ebp-3188h]
  CFlag<480> v4471; // [esp+562Ch] [ebp-3184h]
  SecondaryStat::VIEWELEM *v4472; // [esp+5668h] [ebp-3148h]
  SecondaryStat::VIEWELEM *v4473; // [esp+566Ch] [ebp-3144h]
  CFlag<480> v4474; // [esp+5670h] [ebp-3140h]
  SecondaryStat::VIEWELEM *v4475; // [esp+56ACh] [ebp-3104h]
  SecondaryStat::VIEWELEM *v4476; // [esp+56B0h] [ebp-3100h]
  CFlag<480> v4477; // [esp+56B4h] [ebp-30FCh]
  SecondaryStat::VIEWELEM *v4478; // [esp+56F0h] [ebp-30C0h]
  SecondaryStat::VIEWELEM *v4479; // [esp+56F4h] [ebp-30BCh]
  CFlag<480> v4480; // [esp+56F8h] [ebp-30B8h]
  SecondaryStat::VIEWELEM *v4481; // [esp+5734h] [ebp-307Ch]
  SecondaryStat::VIEWELEM *v4482; // [esp+5738h] [ebp-3078h]
  CFlag<480> v4483; // [esp+573Ch] [ebp-3074h]
  SecondaryStat::VIEWELEM *v4484; // [esp+5778h] [ebp-3038h]
  SecondaryStat::VIEWELEM *v4485; // [esp+577Ch] [ebp-3034h]
  CFlag<480> v4486; // [esp+5780h] [ebp-3030h]
  SecondaryStat::VIEWELEM *v4487; // [esp+57BCh] [ebp-2FF4h]
  SecondaryStat::VIEWELEM *v4488; // [esp+57C0h] [ebp-2FF0h]
  CFlag<480> v4489; // [esp+57C4h] [ebp-2FECh]
  SecondaryStat::VIEWELEM *v4490; // [esp+5800h] [ebp-2FB0h]
  SecondaryStat::VIEWELEM *v4491; // [esp+5804h] [ebp-2FACh]
  CFlag<480> v4492; // [esp+5808h] [ebp-2FA8h]
  SecondaryStat::VIEWELEM *v4493; // [esp+5844h] [ebp-2F6Ch]
  SecondaryStat::VIEWELEM *v4494; // [esp+5848h] [ebp-2F68h]
  CFlag<480> v4495; // [esp+584Ch] [ebp-2F64h]
  SecondaryStat::VIEWELEM *v4496; // [esp+5888h] [ebp-2F28h]
  SecondaryStat::VIEWELEM *v4497; // [esp+588Ch] [ebp-2F24h]
  CFlag<480> v4498; // [esp+5890h] [ebp-2F20h]
  SecondaryStat::VIEWELEM *v4499; // [esp+58CCh] [ebp-2EE4h]
  SecondaryStat::VIEWELEM *v4500; // [esp+58D0h] [ebp-2EE0h]
  CFlag<480> v4501; // [esp+58D4h] [ebp-2EDCh]
  SecondaryStat::VIEWELEM *v4502; // [esp+5910h] [ebp-2EA0h]
  SecondaryStat::VIEWELEM *v4503; // [esp+5914h] [ebp-2E9Ch]
  CFlag<480> v4504; // [esp+5918h] [ebp-2E98h]
  SecondaryStat::VIEWELEM *v4505; // [esp+5954h] [ebp-2E5Ch]
  SecondaryStat::VIEWELEM *v4506; // [esp+5958h] [ebp-2E58h]
  CFlag<480> v4507; // [esp+595Ch] [ebp-2E54h]
  SecondaryStat::VIEWELEM *v4508; // [esp+5998h] [ebp-2E18h]
  SecondaryStat::VIEWELEM *v4509; // [esp+599Ch] [ebp-2E14h]
  CFlag<480> v4510; // [esp+59A0h] [ebp-2E10h]
  SecondaryStat::VIEWELEM *v4511; // [esp+59DCh] [ebp-2DD4h]
  SecondaryStat::VIEWELEM *v4512; // [esp+59E0h] [ebp-2DD0h]
  CFlag<480> v4513; // [esp+59E4h] [ebp-2DCCh]
  SecondaryStat::VIEWELEM *v4514; // [esp+5A20h] [ebp-2D90h]
  SecondaryStat::VIEWELEM *v4515; // [esp+5A24h] [ebp-2D8Ch]
  CFlag<480> v4516; // [esp+5A28h] [ebp-2D88h]
  SecondaryStat::VIEWELEM *v4517; // [esp+5A64h] [ebp-2D4Ch]
  SecondaryStat::VIEWELEM *v4518; // [esp+5A68h] [ebp-2D48h]
  CFlag<480> v4519; // [esp+5A6Ch] [ebp-2D44h]
  SecondaryStat::VIEWELEM *v4520; // [esp+5AA8h] [ebp-2D08h]
  SecondaryStat::VIEWELEM *v4521; // [esp+5AACh] [ebp-2D04h]
  CFlag<480> v4522; // [esp+5AB0h] [ebp-2D00h]
  SecondaryStat::VIEWELEM *v4523; // [esp+5AECh] [ebp-2CC4h]
  SecondaryStat::VIEWELEM *v4524; // [esp+5AF0h] [ebp-2CC0h]
  CFlag<480> v4525; // [esp+5AF4h] [ebp-2CBCh]
  SecondaryStat::VIEWELEM *v4526; // [esp+5B30h] [ebp-2C80h]
  SecondaryStat::VIEWELEM *v4527; // [esp+5B34h] [ebp-2C7Ch]
  CFlag<480> v4528; // [esp+5B38h] [ebp-2C78h]
  SecondaryStat::VIEWELEM *v4529; // [esp+5B74h] [ebp-2C3Ch]
  SecondaryStat::VIEWELEM *v4530; // [esp+5B78h] [ebp-2C38h]
  CFlag<480> v4531; // [esp+5B7Ch] [ebp-2C34h]
  SecondaryStat::VIEWELEM *v4532; // [esp+5BB8h] [ebp-2BF8h]
  SecondaryStat::VIEWELEM *v4533; // [esp+5BBCh] [ebp-2BF4h]
  CFlag<480> v4534; // [esp+5BC0h] [ebp-2BF0h]
  SecondaryStat::VIEWELEM *v4535; // [esp+5BFCh] [ebp-2BB4h]
  SecondaryStat::VIEWELEM *v4536; // [esp+5C00h] [ebp-2BB0h]
  CFlag<480> v4537; // [esp+5C04h] [ebp-2BACh]
  SecondaryStat::VIEWELEM *v4538; // [esp+5C40h] [ebp-2B70h]
  SecondaryStat::VIEWELEM *v4539; // [esp+5C44h] [ebp-2B6Ch]
  CFlag<480> v4540; // [esp+5C48h] [ebp-2B68h]
  SecondaryStat::VIEWELEM *v4541; // [esp+5C84h] [ebp-2B2Ch]
  SecondaryStat::VIEWELEM *v4542; // [esp+5C88h] [ebp-2B28h]
  CFlag<480> v4543; // [esp+5C8Ch] [ebp-2B24h]
  SecondaryStat::VIEWELEM *v4544; // [esp+5CC8h] [ebp-2AE8h]
  SecondaryStat::VIEWELEM *v4545; // [esp+5CCCh] [ebp-2AE4h]
  CFlag<480> v4546; // [esp+5CD0h] [ebp-2AE0h]
  SecondaryStat::VIEWELEM *v4547; // [esp+5D0Ch] [ebp-2AA4h]
  SecondaryStat::VIEWELEM *v4548; // [esp+5D10h] [ebp-2AA0h]
  CFlag<480> v4549; // [esp+5D14h] [ebp-2A9Ch]
  SecondaryStat::VIEWELEM *v4550; // [esp+5D50h] [ebp-2A60h]
  SecondaryStat::VIEWELEM *v4551; // [esp+5D54h] [ebp-2A5Ch]
  CFlag<480> v4552; // [esp+5D58h] [ebp-2A58h]
  SecondaryStat::VIEWELEM *v4553; // [esp+5D94h] [ebp-2A1Ch]
  SecondaryStat::VIEWELEM *v4554; // [esp+5D98h] [ebp-2A18h]
  CFlag<480> v4555; // [esp+5D9Ch] [ebp-2A14h]
  SecondaryStat::VIEWELEM *v4556; // [esp+5DD8h] [ebp-29D8h]
  SecondaryStat::VIEWELEM *v4557; // [esp+5DDCh] [ebp-29D4h]
  CFlag<480> v4558; // [esp+5DE0h] [ebp-29D0h]
  SecondaryStat::VIEWELEM *v4559; // [esp+5E1Ch] [ebp-2994h]
  SecondaryStat::VIEWELEM *v4560; // [esp+5E20h] [ebp-2990h]
  CFlag<480> v4561; // [esp+5E24h] [ebp-298Ch]
  SecondaryStat::VIEWELEM *v4562; // [esp+5E60h] [ebp-2950h]
  SecondaryStat::VIEWELEM *v4563; // [esp+5E64h] [ebp-294Ch]
  CFlag<480> v4564; // [esp+5E68h] [ebp-2948h]
  SecondaryStat::VIEWELEM *v4565; // [esp+5EA4h] [ebp-290Ch]
  SecondaryStat::VIEWELEM *v4566; // [esp+5EA8h] [ebp-2908h]
  CFlag<480> v4567; // [esp+5EACh] [ebp-2904h]
  SecondaryStat::VIEWELEM *v4568; // [esp+5EE8h] [ebp-28C8h]
  SecondaryStat::VIEWELEM *v4569; // [esp+5EECh] [ebp-28C4h]
  CFlag<480> v4570; // [esp+5EF0h] [ebp-28C0h]
  SecondaryStat::VIEWELEM *v4571; // [esp+5F2Ch] [ebp-2884h]
  SecondaryStat::VIEWELEM *v4572; // [esp+5F30h] [ebp-2880h]
  CFlag<480> v4573; // [esp+5F34h] [ebp-287Ch]
  SecondaryStat::VIEWELEM *v4574; // [esp+5F70h] [ebp-2840h]
  SecondaryStat::VIEWELEM *v4575; // [esp+5F74h] [ebp-283Ch]
  CFlag<480> v4576; // [esp+5F78h] [ebp-2838h]
  SecondaryStat::VIEWELEM *v4577; // [esp+5FB4h] [ebp-27FCh]
  SecondaryStat::VIEWELEM *v4578; // [esp+5FB8h] [ebp-27F8h]
  CFlag<480> v4579; // [esp+5FBCh] [ebp-27F4h]
  SecondaryStat::VIEWELEM *v4580; // [esp+5FF8h] [ebp-27B8h]
  SecondaryStat::VIEWELEM *v4581; // [esp+5FFCh] [ebp-27B4h]
  CFlag<480> v4582; // [esp+6000h] [ebp-27B0h]
  SecondaryStat::VIEWELEM *v4583; // [esp+603Ch] [ebp-2774h]
  SecondaryStat::VIEWELEM *v4584; // [esp+6040h] [ebp-2770h]
  CFlag<480> v4585; // [esp+6044h] [ebp-276Ch]
  SecondaryStat::VIEWELEM *v4586; // [esp+6080h] [ebp-2730h]
  SecondaryStat::VIEWELEM *v4587; // [esp+6084h] [ebp-272Ch]
  CFlag<480> v4588; // [esp+6088h] [ebp-2728h]
  SecondaryStat::VIEWELEM *v4589; // [esp+60C4h] [ebp-26ECh]
  SecondaryStat::VIEWELEM *v4590; // [esp+60C8h] [ebp-26E8h]
  CFlag<480> v4591; // [esp+60CCh] [ebp-26E4h]
  SecondaryStat::VIEWELEM *v4592; // [esp+6108h] [ebp-26A8h]
  SecondaryStat::VIEWELEM *v4593; // [esp+610Ch] [ebp-26A4h]
  CFlag<480> v4594; // [esp+6110h] [ebp-26A0h]
  SecondaryStat::VIEWELEM *v4595; // [esp+614Ch] [ebp-2664h]
  SecondaryStat::VIEWELEM *v4596; // [esp+6150h] [ebp-2660h]
  CFlag<480> v4597; // [esp+6154h] [ebp-265Ch]
  SecondaryStat::VIEWELEM *v4598; // [esp+6190h] [ebp-2620h]
  SecondaryStat::VIEWELEM *v4599; // [esp+6194h] [ebp-261Ch]
  CFlag<480> v4600; // [esp+6198h] [ebp-2618h]
  SecondaryStat::VIEWELEM *v4601; // [esp+61D4h] [ebp-25DCh]
  SecondaryStat::VIEWELEM *v4602; // [esp+61D8h] [ebp-25D8h]
  CFlag<480> v4603; // [esp+61DCh] [ebp-25D4h]
  SecondaryStat::VIEWELEM *v4604; // [esp+6218h] [ebp-2598h]
  SecondaryStat::VIEWELEM *v4605; // [esp+621Ch] [ebp-2594h]
  CFlag<480> v4606; // [esp+6220h] [ebp-2590h]
  SecondaryStat::VIEWELEM *v4607; // [esp+625Ch] [ebp-2554h]
  SecondaryStat::VIEWELEM *v4608; // [esp+6260h] [ebp-2550h]
  CFlag<480> v4609; // [esp+6264h] [ebp-254Ch]
  SecondaryStat::VIEWELEM *v4610; // [esp+62A0h] [ebp-2510h]
  SecondaryStat::VIEWELEM *v4611; // [esp+62A4h] [ebp-250Ch]
  CFlag<480> v4612; // [esp+62A8h] [ebp-2508h]
  SecondaryStat::VIEWELEM *v4613; // [esp+62E4h] [ebp-24CCh]
  SecondaryStat::VIEWELEM *v4614; // [esp+62E8h] [ebp-24C8h]
  CFlag<480> v4615; // [esp+62ECh] [ebp-24C4h]
  SecondaryStat::VIEWELEM *v4616; // [esp+6328h] [ebp-2488h]
  SecondaryStat::VIEWELEM *v4617; // [esp+632Ch] [ebp-2484h]
  CFlag<480> v4618; // [esp+6330h] [ebp-2480h]
  SecondaryStat::VIEWELEM *v4619; // [esp+636Ch] [ebp-2444h]
  SecondaryStat::VIEWELEM *v4620; // [esp+6370h] [ebp-2440h]
  CFlag<480> v4621; // [esp+6374h] [ebp-243Ch]
  SecondaryStat::VIEWELEM *v4622; // [esp+63B0h] [ebp-2400h]
  SecondaryStat::VIEWELEM *v4623; // [esp+63B4h] [ebp-23FCh]
  CFlag<480> v4624; // [esp+63B8h] [ebp-23F8h]
  SecondaryStat::VIEWELEM *v4625; // [esp+63F4h] [ebp-23BCh]
  SecondaryStat::VIEWELEM *v4626; // [esp+63F8h] [ebp-23B8h]
  CFlag<480> v4627; // [esp+63FCh] [ebp-23B4h]
  SecondaryStat::VIEWELEM *v4628; // [esp+6438h] [ebp-2378h]
  SecondaryStat::VIEWELEM *v4629; // [esp+643Ch] [ebp-2374h]
  CFlag<480> v4630; // [esp+6440h] [ebp-2370h]
  SecondaryStat::VIEWELEM *v4631; // [esp+647Ch] [ebp-2334h]
  SecondaryStat::VIEWELEM *v4632; // [esp+6480h] [ebp-2330h]
  CFlag<480> v4633; // [esp+6484h] [ebp-232Ch]
  SecondaryStat::VIEWELEM *v4634; // [esp+64C0h] [ebp-22F0h]
  SecondaryStat::VIEWELEM *v4635; // [esp+64C4h] [ebp-22ECh]
  CFlag<480> v4636; // [esp+64C8h] [ebp-22E8h]
  SecondaryStat::VIEWELEM *v4637; // [esp+6504h] [ebp-22ACh]
  SecondaryStat::VIEWELEM *v4638; // [esp+6508h] [ebp-22A8h]
  CFlag<480> v4639; // [esp+650Ch] [ebp-22A4h]
  SecondaryStat::VIEWELEM *v4640; // [esp+6548h] [ebp-2268h]
  SecondaryStat::VIEWELEM *v4641; // [esp+654Ch] [ebp-2264h]
  CFlag<480> v4642; // [esp+6550h] [ebp-2260h]
  SecondaryStat::VIEWELEM *v4643; // [esp+658Ch] [ebp-2224h]
  SecondaryStat::VIEWELEM *v4644; // [esp+6590h] [ebp-2220h]
  CFlag<480> v4645; // [esp+6594h] [ebp-221Ch]
  SecondaryStat::VIEWELEM *v4646; // [esp+65D0h] [ebp-21E0h]
  SecondaryStat::VIEWELEM *v4647; // [esp+65D4h] [ebp-21DCh]
  CFlag<480> v4648; // [esp+65D8h] [ebp-21D8h]
  SecondaryStat::VIEWELEM *v4649; // [esp+6614h] [ebp-219Ch]
  SecondaryStat::VIEWELEM *v4650; // [esp+6618h] [ebp-2198h]
  CFlag<480> v4651; // [esp+661Ch] [ebp-2194h]
  SecondaryStat::VIEWELEM *v4652; // [esp+6658h] [ebp-2158h]
  SecondaryStat::VIEWELEM *v4653; // [esp+665Ch] [ebp-2154h]
  CFlag<480> v4654; // [esp+6660h] [ebp-2150h]
  SecondaryStat::VIEWELEM *v4655; // [esp+669Ch] [ebp-2114h]
  SecondaryStat::VIEWELEM *v4656; // [esp+66A0h] [ebp-2110h]
  CFlag<480> v4657; // [esp+66A4h] [ebp-210Ch]
  SecondaryStat::VIEWELEM *v4658; // [esp+66E0h] [ebp-20D0h]
  SecondaryStat::VIEWELEM *v4659; // [esp+66E4h] [ebp-20CCh]
  CFlag<480> v4660; // [esp+66E8h] [ebp-20C8h]
  SecondaryStat::VIEWELEM *v4661; // [esp+6724h] [ebp-208Ch]
  SecondaryStat::VIEWELEM *v4662; // [esp+6728h] [ebp-2088h]
  CFlag<480> v4663; // [esp+672Ch] [ebp-2084h]
  SecondaryStat::VIEWELEM *v4664; // [esp+6768h] [ebp-2048h]
  SecondaryStat::VIEWELEM *v4665; // [esp+676Ch] [ebp-2044h]
  CFlag<480> v4666; // [esp+6770h] [ebp-2040h]
  SecondaryStat::VIEWELEM *v4667; // [esp+67ACh] [ebp-2004h]
  SecondaryStat::VIEWELEM *v4668; // [esp+67B0h] [ebp-2000h]
  CFlag<480> v4669; // [esp+67B4h] [ebp-1FFCh]
  SecondaryStat::VIEWELEM *v4670; // [esp+67F0h] [ebp-1FC0h]
  SecondaryStat::VIEWELEM *v4671; // [esp+67F4h] [ebp-1FBCh]
  CFlag<480> v4672; // [esp+67F8h] [ebp-1FB8h]
  SecondaryStat::VIEWELEM *v4673; // [esp+6834h] [ebp-1F7Ch]
  SecondaryStat::VIEWELEM *v4674; // [esp+6838h] [ebp-1F78h]
  CFlag<480> v4675; // [esp+683Ch] [ebp-1F74h]
  SecondaryStat::VIEWELEM *v4676; // [esp+6878h] [ebp-1F38h]
  SecondaryStat::VIEWELEM *v4677; // [esp+687Ch] [ebp-1F34h]
  CFlag<480> v4678; // [esp+6880h] [ebp-1F30h]
  SecondaryStat::VIEWELEM *v4679; // [esp+68BCh] [ebp-1EF4h]
  SecondaryStat::VIEWELEM *v4680; // [esp+68C0h] [ebp-1EF0h]
  CFlag<480> v4681; // [esp+68C4h] [ebp-1EECh]
  SecondaryStat::VIEWELEM *v4682; // [esp+6900h] [ebp-1EB0h]
  SecondaryStat::VIEWELEM *v4683; // [esp+6904h] [ebp-1EACh]
  CFlag<480> v4684; // [esp+6908h] [ebp-1EA8h]
  SecondaryStat::VIEWELEM *v4685; // [esp+6944h] [ebp-1E6Ch]
  SecondaryStat::VIEWELEM *v4686; // [esp+6948h] [ebp-1E68h]
  CFlag<480> v4687; // [esp+694Ch] [ebp-1E64h]
  SecondaryStat::VIEWELEM *v4688; // [esp+6988h] [ebp-1E28h]
  SecondaryStat::VIEWELEM *v4689; // [esp+698Ch] [ebp-1E24h]
  CFlag<480> v4690; // [esp+6990h] [ebp-1E20h]
  SecondaryStat::VIEWELEM *v4691; // [esp+69CCh] [ebp-1DE4h]
  SecondaryStat::VIEWELEM *v4692; // [esp+69D0h] [ebp-1DE0h]
  CFlag<480> v4693; // [esp+69D4h] [ebp-1DDCh]
  SecondaryStat::VIEWELEM *v4694; // [esp+6A10h] [ebp-1DA0h]
  SecondaryStat::VIEWELEM *v4695; // [esp+6A14h] [ebp-1D9Ch]
  CFlag<480> v4696; // [esp+6A18h] [ebp-1D98h]
  SecondaryStat::VIEWELEM *v4697; // [esp+6A54h] [ebp-1D5Ch]
  SecondaryStat::VIEWELEM *v4698; // [esp+6A58h] [ebp-1D58h]
  CFlag<480> v4699; // [esp+6A5Ch] [ebp-1D54h]
  SecondaryStat::VIEWELEM *v4700; // [esp+6A98h] [ebp-1D18h]
  SecondaryStat::VIEWELEM *v4701; // [esp+6A9Ch] [ebp-1D14h]
  CFlag<480> v4702; // [esp+6AA0h] [ebp-1D10h]
  SecondaryStat::VIEWELEM *v4703; // [esp+6ADCh] [ebp-1CD4h]
  SecondaryStat::VIEWELEM *v4704; // [esp+6AE0h] [ebp-1CD0h]
  CFlag<480> v4705; // [esp+6AE4h] [ebp-1CCCh]
  SecondaryStat::VIEWELEM *v4706; // [esp+6B20h] [ebp-1C90h]
  SecondaryStat::VIEWELEM *v4707; // [esp+6B24h] [ebp-1C8Ch]
  CFlag<480> v4708; // [esp+6B28h] [ebp-1C88h]
  SecondaryStat::VIEWELEM *v4709; // [esp+6B64h] [ebp-1C4Ch]
  SecondaryStat::VIEWELEM *v4710; // [esp+6B68h] [ebp-1C48h]
  CFlag<480> v4711; // [esp+6B6Ch] [ebp-1C44h]
  SecondaryStat::VIEWELEM *v4712; // [esp+6BA8h] [ebp-1C08h]
  SecondaryStat::VIEWELEM *v4713; // [esp+6BACh] [ebp-1C04h]
  CFlag<480> v4714; // [esp+6BB0h] [ebp-1C00h]
  SecondaryStat::VIEWELEM *v4715; // [esp+6BECh] [ebp-1BC4h]
  SecondaryStat::VIEWELEM *v4716; // [esp+6BF0h] [ebp-1BC0h]
  CFlag<480> v4717; // [esp+6BF4h] [ebp-1BBCh]
  SecondaryStat::VIEWELEM *v4718; // [esp+6C30h] [ebp-1B80h]
  SecondaryStat::VIEWELEM *v4719; // [esp+6C34h] [ebp-1B7Ch]
  CFlag<480> v4720; // [esp+6C38h] [ebp-1B78h]
  SecondaryStat::VIEWELEM *v4721; // [esp+6C74h] [ebp-1B3Ch]
  SecondaryStat::VIEWELEM *v4722; // [esp+6C78h] [ebp-1B38h]
  CFlag<480> v4723; // [esp+6C7Ch] [ebp-1B34h]
  SecondaryStat::VIEWELEM *v4724; // [esp+6CB8h] [ebp-1AF8h]
  SecondaryStat::VIEWELEM *v4725; // [esp+6CBCh] [ebp-1AF4h]
  CFlag<480> v4726; // [esp+6CC0h] [ebp-1AF0h]
  SecondaryStat::VIEWELEM *v4727; // [esp+6CFCh] [ebp-1AB4h]
  SecondaryStat::VIEWELEM *v4728; // [esp+6D00h] [ebp-1AB0h]
  CFlag<480> v4729; // [esp+6D04h] [ebp-1AACh]
  SecondaryStat::VIEWELEM *v4730; // [esp+6D40h] [ebp-1A70h]
  SecondaryStat::VIEWELEM *v4731; // [esp+6D44h] [ebp-1A6Ch]
  CFlag<480> v4732; // [esp+6D48h] [ebp-1A68h]
  SecondaryStat::VIEWELEM *v4733; // [esp+6D84h] [ebp-1A2Ch]
  SecondaryStat::VIEWELEM *v4734; // [esp+6D88h] [ebp-1A28h]
  CFlag<480> v4735; // [esp+6D8Ch] [ebp-1A24h]
  SecondaryStat::VIEWELEM *v4736; // [esp+6DC8h] [ebp-19E8h]
  SecondaryStat::VIEWELEM *v4737; // [esp+6DCCh] [ebp-19E4h]
  CFlag<480> v4738; // [esp+6DD0h] [ebp-19E0h]
  SecondaryStat::VIEWELEM *v4739; // [esp+6E0Ch] [ebp-19A4h]
  SecondaryStat::VIEWELEM *v4740; // [esp+6E10h] [ebp-19A0h]
  CFlag<480> v4741; // [esp+6E14h] [ebp-199Ch]
  SecondaryStat::VIEWELEM *v4742; // [esp+6E50h] [ebp-1960h]
  SecondaryStat::VIEWELEM *v4743; // [esp+6E54h] [ebp-195Ch]
  CFlag<480> v4744; // [esp+6E58h] [ebp-1958h]
  SecondaryStat::VIEWELEM *v4745; // [esp+6E94h] [ebp-191Ch]
  SecondaryStat::VIEWELEM *v4746; // [esp+6E98h] [ebp-1918h]
  CFlag<480> v4747; // [esp+6E9Ch] [ebp-1914h]
  SecondaryStat::VIEWELEM *v4748; // [esp+6ED8h] [ebp-18D8h]
  SecondaryStat::VIEWELEM *v4749; // [esp+6EDCh] [ebp-18D4h]
  CFlag<480> v4750; // [esp+6EE0h] [ebp-18D0h]
  SecondaryStat::VIEWELEM *v4751; // [esp+6F1Ch] [ebp-1894h]
  SecondaryStat::VIEWELEM *v4752; // [esp+6F20h] [ebp-1890h]
  CFlag<480> v4753; // [esp+6F24h] [ebp-188Ch]
  SecondaryStat::VIEWELEM *v4754; // [esp+6F60h] [ebp-1850h]
  SecondaryStat::VIEWELEM *v4755; // [esp+6F64h] [ebp-184Ch]
  CFlag<480> v4756; // [esp+6F68h] [ebp-1848h]
  SecondaryStat::VIEWELEM *v4757; // [esp+6FA4h] [ebp-180Ch]
  SecondaryStat::VIEWELEM *v4758; // [esp+6FA8h] [ebp-1808h]
  CFlag<480> v4759; // [esp+6FACh] [ebp-1804h]
  SecondaryStat::VIEWELEM *v4760; // [esp+6FE8h] [ebp-17C8h]
  SecondaryStat::VIEWELEM *v4761; // [esp+6FECh] [ebp-17C4h]
  CFlag<480> v4762; // [esp+6FF0h] [ebp-17C0h]
  SecondaryStat::VIEWELEM *v4763; // [esp+702Ch] [ebp-1784h]
  SecondaryStat::VIEWELEM *v4764; // [esp+7030h] [ebp-1780h]
  CFlag<480> v4765; // [esp+7034h] [ebp-177Ch]
  SecondaryStat::VIEWELEM *v4766; // [esp+7070h] [ebp-1740h]
  SecondaryStat::VIEWELEM *v4767; // [esp+7074h] [ebp-173Ch]
  CFlag<480> v4768; // [esp+7078h] [ebp-1738h]
  SecondaryStat::VIEWELEM *v4769; // [esp+70B4h] [ebp-16FCh]
  SecondaryStat::VIEWELEM *v4770; // [esp+70B8h] [ebp-16F8h]
  CFlag<480> v4771; // [esp+70BCh] [ebp-16F4h]
  SecondaryStat::VIEWELEM *v4772; // [esp+70F8h] [ebp-16B8h]
  SecondaryStat::VIEWELEM *v4773; // [esp+70FCh] [ebp-16B4h]
  CFlag<480> v4774; // [esp+7100h] [ebp-16B0h]
  SecondaryStat::VIEWELEM *v4775; // [esp+713Ch] [ebp-1674h]
  SecondaryStat::VIEWELEM *v4776; // [esp+7140h] [ebp-1670h]
  CFlag<480> v4777; // [esp+7144h] [ebp-166Ch]
  SecondaryStat::VIEWELEM *v4778; // [esp+7180h] [ebp-1630h]
  SecondaryStat::VIEWELEM *v4779; // [esp+7184h] [ebp-162Ch]
  CFlag<480> v4780; // [esp+7188h] [ebp-1628h]
  SecondaryStat::VIEWELEM *v4781; // [esp+71C4h] [ebp-15ECh]
  SecondaryStat::VIEWELEM *v4782; // [esp+71C8h] [ebp-15E8h]
  CFlag<480> v4783; // [esp+71CCh] [ebp-15E4h]
  SecondaryStat::VIEWELEM *v4784; // [esp+7208h] [ebp-15A8h]
  SecondaryStat::VIEWELEM *v4785; // [esp+720Ch] [ebp-15A4h]
  CFlag<480> v4786; // [esp+7210h] [ebp-15A0h]
  SecondaryStat::VIEWELEM *v4787; // [esp+724Ch] [ebp-1564h]
  SecondaryStat::VIEWELEM *v4788; // [esp+7250h] [ebp-1560h]
  CFlag<480> v4789; // [esp+7254h] [ebp-155Ch]
  SecondaryStat::VIEWELEM *v4790; // [esp+7290h] [ebp-1520h]
  SecondaryStat::VIEWELEM *v4791; // [esp+7294h] [ebp-151Ch]
  CFlag<480> v4792; // [esp+7298h] [ebp-1518h]
  SecondaryStat::VIEWELEM *v4793; // [esp+72D4h] [ebp-14DCh]
  SecondaryStat::VIEWELEM *v4794; // [esp+72D8h] [ebp-14D8h]
  CFlag<480> v4795; // [esp+72DCh] [ebp-14D4h]
  SecondaryStat::VIEWELEM *v4796; // [esp+7318h] [ebp-1498h]
  SecondaryStat::VIEWELEM *v4797; // [esp+731Ch] [ebp-1494h]
  CFlag<480> v4798; // [esp+7320h] [ebp-1490h]
  SecondaryStat::VIEWELEM *v4799; // [esp+735Ch] [ebp-1454h]
  SecondaryStat::VIEWELEM *v4800; // [esp+7360h] [ebp-1450h]
  CFlag<480> v4801; // [esp+7364h] [ebp-144Ch]
  SecondaryStat::VIEWELEM *v4802; // [esp+73A0h] [ebp-1410h]
  SecondaryStat::VIEWELEM *v4803; // [esp+73A4h] [ebp-140Ch]
  CFlag<480> v4804; // [esp+73A8h] [ebp-1408h]
  SecondaryStat::VIEWELEM *v4805; // [esp+73E4h] [ebp-13CCh]
  SecondaryStat::VIEWELEM *v4806; // [esp+73E8h] [ebp-13C8h]
  CFlag<480> v4807; // [esp+73ECh] [ebp-13C4h]
  SecondaryStat::VIEWELEM *v4808; // [esp+7428h] [ebp-1388h]
  SecondaryStat::VIEWELEM *v4809; // [esp+742Ch] [ebp-1384h]
  CFlag<480> v4810; // [esp+7430h] [ebp-1380h]
  SecondaryStat::VIEWELEM *v4811; // [esp+746Ch] [ebp-1344h]
  SecondaryStat::VIEWELEM *v4812; // [esp+7470h] [ebp-1340h]
  CFlag<480> v4813; // [esp+7474h] [ebp-133Ch]
  SecondaryStat::VIEWELEM *v4814; // [esp+74B0h] [ebp-1300h]
  SecondaryStat::VIEWELEM *v4815; // [esp+74B4h] [ebp-12FCh]
  CFlag<480> v4816; // [esp+74B8h] [ebp-12F8h]
  SecondaryStat::VIEWELEM *v4817; // [esp+74F4h] [ebp-12BCh]
  SecondaryStat::VIEWELEM *v4818; // [esp+74F8h] [ebp-12B8h]
  CFlag<480> v4819; // [esp+74FCh] [ebp-12B4h]
  SecondaryStat::VIEWELEM *v4820; // [esp+7538h] [ebp-1278h]
  SecondaryStat::VIEWELEM *v4821; // [esp+753Ch] [ebp-1274h]
  CFlag<480> v4822; // [esp+7540h] [ebp-1270h]
  SecondaryStat::VIEWELEM *v4823; // [esp+757Ch] [ebp-1234h]
  SecondaryStat::VIEWELEM *v4824; // [esp+7580h] [ebp-1230h]
  CFlag<480> v4825; // [esp+7584h] [ebp-122Ch]
  SecondaryStat::VIEWELEM *v4826; // [esp+75C0h] [ebp-11F0h]
  SecondaryStat::VIEWELEM *v4827; // [esp+75C4h] [ebp-11ECh]
  CFlag<480> v4828; // [esp+75C8h] [ebp-11E8h]
  SecondaryStat::VIEWELEM *v4829; // [esp+7604h] [ebp-11ACh]
  SecondaryStat::VIEWELEM *v4830; // [esp+7608h] [ebp-11A8h]
  CFlag<480> v4831; // [esp+760Ch] [ebp-11A4h]
  SecondaryStat::VIEWELEM *v4832; // [esp+7648h] [ebp-1168h]
  SecondaryStat::VIEWELEM *v4833; // [esp+764Ch] [ebp-1164h]
  CFlag<480> v4834; // [esp+7650h] [ebp-1160h]
  SecondaryStat::VIEWELEM *v4835; // [esp+768Ch] [ebp-1124h]
  SecondaryStat::VIEWELEM *v4836; // [esp+7690h] [ebp-1120h]
  CFlag<480> v4837; // [esp+7694h] [ebp-111Ch]
  SecondaryStat::VIEWELEM *v4838; // [esp+76D0h] [ebp-10E0h]
  SecondaryStat::VIEWELEM *v4839; // [esp+76D4h] [ebp-10DCh]
  CFlag<480> v4840; // [esp+76D8h] [ebp-10D8h]
  SecondaryStat::VIEWELEM *v4841; // [esp+7714h] [ebp-109Ch]
  SecondaryStat::VIEWELEM *v4842; // [esp+7718h] [ebp-1098h]
  CFlag<480> v4843; // [esp+771Ch] [ebp-1094h]
  SecondaryStat::VIEWELEM *v4844; // [esp+7758h] [ebp-1058h]
  SecondaryStat::VIEWELEM *v4845; // [esp+775Ch] [ebp-1054h]
  CFlag<480> v4846; // [esp+7760h] [ebp-1050h]
  SecondaryStat::VIEWELEM *v4847; // [esp+779Ch] [ebp-1014h]
  SecondaryStat::VIEWELEM *v4848; // [esp+77A0h] [ebp-1010h]
  CFlag<480> v4849; // [esp+77A4h] [ebp-100Ch]
  SecondaryStat::VIEWELEM *v4850; // [esp+77E0h] [ebp-FD0h]
  SecondaryStat::VIEWELEM *v4851; // [esp+77E4h] [ebp-FCCh]
  CFlag<480> v4852; // [esp+77E8h] [ebp-FC8h]
  SecondaryStat::VIEWELEM *v4853; // [esp+7824h] [ebp-F8Ch]
  SecondaryStat::VIEWELEM *v4854; // [esp+7828h] [ebp-F88h]
  CFlag<480> v4855; // [esp+782Ch] [ebp-F84h]
  SecondaryStat::VIEWELEM *v4856; // [esp+7868h] [ebp-F48h]
  SecondaryStat::VIEWELEM *v4857; // [esp+786Ch] [ebp-F44h]
  CFlag<480> v4858; // [esp+7870h] [ebp-F40h]
  SecondaryStat::VIEWELEM *v4859; // [esp+78ACh] [ebp-F04h]
  SecondaryStat::VIEWELEM *v4860; // [esp+78B0h] [ebp-F00h]
  CFlag<480> v4861; // [esp+78B4h] [ebp-EFCh]
  SecondaryStat::VIEWELEM *v4862; // [esp+78F0h] [ebp-EC0h]
  SecondaryStat::VIEWELEM *v4863; // [esp+78F4h] [ebp-EBCh]
  CFlag<480> v4864; // [esp+78F8h] [ebp-EB8h]
  SecondaryStat::VIEWELEM *v4865; // [esp+7934h] [ebp-E7Ch]
  SecondaryStat::VIEWELEM *v4866; // [esp+7938h] [ebp-E78h]
  CFlag<480> v4867; // [esp+793Ch] [ebp-E74h]
  SecondaryStat::VIEWELEM *v4868; // [esp+7978h] [ebp-E38h]
  SecondaryStat::VIEWELEM *v4869; // [esp+797Ch] [ebp-E34h]
  CFlag<480> v4870; // [esp+7980h] [ebp-E30h]
  SecondaryStat::VIEWELEM *v4871; // [esp+79BCh] [ebp-DF4h]
  SecondaryStat::VIEWELEM *v4872; // [esp+79C0h] [ebp-DF0h]
  CFlag<480> v4873; // [esp+79C4h] [ebp-DECh]
  SecondaryStat::VIEWELEM *v4874; // [esp+7A00h] [ebp-DB0h]
  SecondaryStat::VIEWELEM *v4875; // [esp+7A04h] [ebp-DACh]
  CFlag<480> v4876; // [esp+7A08h] [ebp-DA8h]
  SecondaryStat::VIEWELEM *v4877; // [esp+7A44h] [ebp-D6Ch]
  SecondaryStat::VIEWELEM *v4878; // [esp+7A48h] [ebp-D68h]
  CFlag<480> v4879; // [esp+7A4Ch] [ebp-D64h]
  SecondaryStat::VIEWELEM *v4880; // [esp+7A88h] [ebp-D28h]
  SecondaryStat::VIEWELEM *pT; // [esp+7A8Ch] [ebp-D24h]
  CFlag<480> resulta; // [esp+7A90h] [ebp-D20h]
  int v4883; // [esp+7ACCh] [ebp-CE4h]
  ZRef<SecondaryStat::VIEWELEM> v4884; // [esp+7AD0h] [ebp-CE0h]
  ZRef<SecondaryStat::VIEWELEM> v4885; // [esp+7AD8h] [ebp-CD8h]
  TemporaryStatBase<long> *v4886; // [esp+7AE0h] [ebp-CD0h]
  int index; // [esp+7AE4h] [ebp-CCCh]
  int v4888; // [esp+7AE8h] [ebp-CC8h]
  char v4889; // [esp+7AEFh] [ebp-CC1h]
  SecondaryStat::LarknessInfo _Val; // [esp+7AF0h] [ebp-CC0h]
  int k; // [esp+7B08h] [ebp-CA8h]
  int j; // [esp+7B0Ch] [ebp-CA4h]
  int v4893; // [esp+7B10h] [ebp-CA0h]
  ZRef<SecondaryStat::VIEWELEM> v4894; // [esp+7B14h] [ebp-C9Ch]
  unsigned int key; // [esp+7B1Ch] [ebp-C94h]
  int i; // [esp+7B20h] [ebp-C90h]
  int v4897; // [esp+7B24h] [ebp-C8Ch]
  ZRef<SecondaryStat::VIEWELEM> v4898; // [esp+7B28h] [ebp-C88h]
  ZRef<SecondaryStat::VIEWELEM> v4899; // [esp+7B30h] [ebp-C80h]
  ZRef<SecondaryStat::VIEWELEM> v4900; // [esp+7B38h] [ebp-C78h]
  ZRef<SecondaryStat::VIEWELEM> v4901; // [esp+7B40h] [ebp-C70h]
  ZRef<SecondaryStat::VIEWELEM> v4902; // [esp+7B48h] [ebp-C68h]
  ZRef<SecondaryStat::VIEWELEM> v4903; // [esp+7B50h] [ebp-C60h]
  ZRef<SecondaryStat::VIEWELEM> v4904; // [esp+7B58h] [ebp-C58h]
  ZRef<SecondaryStat::VIEWELEM> v4905; // [esp+7B60h] [ebp-C50h]
  ZRef<SecondaryStat::VIEWELEM> v4906; // [esp+7B68h] [ebp-C48h]
  ZRef<SecondaryStat::VIEWELEM> v4907; // [esp+7B70h] [ebp-C40h]
  ZRef<SecondaryStat::VIEWELEM> v4908; // [esp+7B78h] [ebp-C38h]
  ZRef<SecondaryStat::VIEWELEM> v4909; // [esp+7B80h] [ebp-C30h]
  ZRef<SecondaryStat::VIEWELEM> v4910; // [esp+7B88h] [ebp-C28h]
  ZRef<SecondaryStat::VIEWELEM> v4911; // [esp+7B90h] [ebp-C20h]
  ZRef<SecondaryStat::VIEWELEM> v4912; // [esp+7B98h] [ebp-C18h]
  ZRef<SecondaryStat::VIEWELEM> v4913; // [esp+7BA0h] [ebp-C10h]
  ZRef<SecondaryStat::VIEWELEM> v4914; // [esp+7BA8h] [ebp-C08h]
  ZRef<SecondaryStat::VIEWELEM> v4915; // [esp+7BB0h] [ebp-C00h]
  ZRef<SecondaryStat::VIEWELEM> v4916; // [esp+7BB8h] [ebp-BF8h]
  ZRef<SecondaryStat::VIEWELEM> v4917; // [esp+7BC0h] [ebp-BF0h]
  ZRef<SecondaryStat::VIEWELEM> v4918; // [esp+7BC8h] [ebp-BE8h]
  ZRef<SecondaryStat::VIEWELEM> v4919; // [esp+7BD0h] [ebp-BE0h]
  ZRef<SecondaryStat::VIEWELEM> v4920; // [esp+7BD8h] [ebp-BD8h]
  ZRef<SecondaryStat::VIEWELEM> v4921; // [esp+7BE0h] [ebp-BD0h]
  ZRef<SecondaryStat::VIEWELEM> v4922; // [esp+7BE8h] [ebp-BC8h]
  ZRef<SecondaryStat::VIEWELEM> v4923; // [esp+7BF0h] [ebp-BC0h]
  ZRef<SecondaryStat::VIEWELEM> v4924; // [esp+7BF8h] [ebp-BB8h]
  ZRef<SecondaryStat::VIEWELEM> v4925; // [esp+7C00h] [ebp-BB0h]
  ZRef<SecondaryStat::VIEWELEM> v4926; // [esp+7C08h] [ebp-BA8h]
  ZRef<SecondaryStat::VIEWELEM> v4927; // [esp+7C10h] [ebp-BA0h]
  ZRef<SecondaryStat::VIEWELEM> v4928; // [esp+7C18h] [ebp-B98h]
  ZRef<SecondaryStat::VIEWELEM> v4929; // [esp+7C20h] [ebp-B90h]
  ZRef<SecondaryStat::VIEWELEM> v4930; // [esp+7C28h] [ebp-B88h]
  ZRef<SecondaryStat::VIEWELEM> v4931; // [esp+7C30h] [ebp-B80h]
  ZRef<SecondaryStat::VIEWELEM> v4932; // [esp+7C38h] [ebp-B78h]
  ZRef<SecondaryStat::VIEWELEM> v4933; // [esp+7C40h] [ebp-B70h]
  ZRef<SecondaryStat::VIEWELEM> v4934; // [esp+7C48h] [ebp-B68h]
  ZRef<SecondaryStat::VIEWELEM> v4935; // [esp+7C50h] [ebp-B60h]
  ZRef<SecondaryStat::VIEWELEM> v4936; // [esp+7C58h] [ebp-B58h]
  ZRef<SecondaryStat::VIEWELEM> v4937; // [esp+7C60h] [ebp-B50h]
  ZRef<SecondaryStat::VIEWELEM> v4938; // [esp+7C68h] [ebp-B48h]
  ZRef<SecondaryStat::VIEWELEM> v4939; // [esp+7C70h] [ebp-B40h]
  ZRef<SecondaryStat::VIEWELEM> v4940; // [esp+7C78h] [ebp-B38h]
  ZRef<SecondaryStat::VIEWELEM> v4941; // [esp+7C80h] [ebp-B30h]
  ZRef<SecondaryStat::VIEWELEM> v4942; // [esp+7C88h] [ebp-B28h]
  ZRef<SecondaryStat::VIEWELEM> v4943; // [esp+7C90h] [ebp-B20h]
  ZRef<SecondaryStat::VIEWELEM> v4944; // [esp+7C98h] [ebp-B18h]
  ZRef<SecondaryStat::VIEWELEM> v4945; // [esp+7CA0h] [ebp-B10h]
  ZRef<SecondaryStat::VIEWELEM> v4946; // [esp+7CA8h] [ebp-B08h]
  ZRef<SecondaryStat::VIEWELEM> v4947; // [esp+7CB0h] [ebp-B00h]
  ZRef<SecondaryStat::VIEWELEM> v4948; // [esp+7CB8h] [ebp-AF8h]
  ZRef<SecondaryStat::VIEWELEM> v4949; // [esp+7CC0h] [ebp-AF0h]
  ZRef<SecondaryStat::VIEWELEM> v4950; // [esp+7CC8h] [ebp-AE8h]
  ZRef<SecondaryStat::VIEWELEM> v4951; // [esp+7CD0h] [ebp-AE0h]
  ZRef<SecondaryStat::VIEWELEM> v4952; // [esp+7CD8h] [ebp-AD8h]
  ZRef<SecondaryStat::VIEWELEM> v4953; // [esp+7CE0h] [ebp-AD0h]
  ZRef<SecondaryStat::VIEWELEM> v4954; // [esp+7CE8h] [ebp-AC8h]
  ZRef<SecondaryStat::VIEWELEM> v4955; // [esp+7CF0h] [ebp-AC0h]
  ZRef<SecondaryStat::VIEWELEM> v4956; // [esp+7CF8h] [ebp-AB8h]
  ZRef<SecondaryStat::VIEWELEM> v4957; // [esp+7D00h] [ebp-AB0h]
  ZRef<SecondaryStat::VIEWELEM> v4958; // [esp+7D08h] [ebp-AA8h]
  ZRef<SecondaryStat::VIEWELEM> v4959; // [esp+7D10h] [ebp-AA0h]
  ZRef<SecondaryStat::VIEWELEM> v4960; // [esp+7D18h] [ebp-A98h]
  ZRef<SecondaryStat::VIEWELEM> v4961; // [esp+7D20h] [ebp-A90h]
  ZRef<SecondaryStat::VIEWELEM> v4962; // [esp+7D28h] [ebp-A88h]
  ZRef<SecondaryStat::VIEWELEM> v4963; // [esp+7D30h] [ebp-A80h]
  ZRef<SecondaryStat::VIEWELEM> v4964; // [esp+7D38h] [ebp-A78h]
  ZRef<SecondaryStat::VIEWELEM> v4965; // [esp+7D40h] [ebp-A70h]
  ZRef<SecondaryStat::VIEWELEM> v4966; // [esp+7D48h] [ebp-A68h]
  ZRef<SecondaryStat::VIEWELEM> v4967; // [esp+7D50h] [ebp-A60h]
  ZRef<SecondaryStat::VIEWELEM> v4968; // [esp+7D58h] [ebp-A58h]
  ZRef<SecondaryStat::VIEWELEM> v4969; // [esp+7D60h] [ebp-A50h]
  ZRef<SecondaryStat::VIEWELEM> v4970; // [esp+7D68h] [ebp-A48h]
  ZRef<SecondaryStat::VIEWELEM> v4971; // [esp+7D70h] [ebp-A40h]
  ZRef<SecondaryStat::VIEWELEM> v4972; // [esp+7D78h] [ebp-A38h]
  ZRef<SecondaryStat::VIEWELEM> v4973; // [esp+7D80h] [ebp-A30h]
  ZRef<SecondaryStat::VIEWELEM> v4974; // [esp+7D88h] [ebp-A28h]
  ZRef<SecondaryStat::VIEWELEM> v4975; // [esp+7D90h] [ebp-A20h]
  ZRef<SecondaryStat::VIEWELEM> v4976; // [esp+7D98h] [ebp-A18h]
  ZRef<SecondaryStat::VIEWELEM> v4977; // [esp+7DA0h] [ebp-A10h]
  ZRef<SecondaryStat::VIEWELEM> v4978; // [esp+7DA8h] [ebp-A08h]
  ZRef<SecondaryStat::VIEWELEM> v4979; // [esp+7DB0h] [ebp-A00h]
  ZRef<SecondaryStat::VIEWELEM> v4980; // [esp+7DB8h] [ebp-9F8h]
  ZRef<SecondaryStat::VIEWELEM> v4981; // [esp+7DC0h] [ebp-9F0h]
  ZRef<SecondaryStat::VIEWELEM> v4982; // [esp+7DC8h] [ebp-9E8h]
  ZRef<SecondaryStat::VIEWELEM> v4983; // [esp+7DD0h] [ebp-9E0h]
  ZRef<SecondaryStat::VIEWELEM> v4984; // [esp+7DD8h] [ebp-9D8h]
  ZRef<SecondaryStat::VIEWELEM> v4985; // [esp+7DE0h] [ebp-9D0h]
  ZRef<SecondaryStat::VIEWELEM> v4986; // [esp+7DE8h] [ebp-9C8h]
  ZRef<SecondaryStat::VIEWELEM> v4987; // [esp+7DF0h] [ebp-9C0h]
  ZRef<SecondaryStat::VIEWELEM> v4988; // [esp+7DF8h] [ebp-9B8h]
  ZRef<SecondaryStat::VIEWELEM> v4989; // [esp+7E00h] [ebp-9B0h]
  ZRef<SecondaryStat::VIEWELEM> v4990; // [esp+7E08h] [ebp-9A8h]
  ZRef<SecondaryStat::VIEWELEM> v4991; // [esp+7E10h] [ebp-9A0h]
  ZRef<SecondaryStat::VIEWELEM> v4992; // [esp+7E18h] [ebp-998h]
  ZRef<SecondaryStat::VIEWELEM> v4993; // [esp+7E20h] [ebp-990h]
  ZRef<SecondaryStat::VIEWELEM> v4994; // [esp+7E28h] [ebp-988h]
  ZRef<SecondaryStat::VIEWELEM> v4995; // [esp+7E30h] [ebp-980h]
  ZRef<SecondaryStat::VIEWELEM> v4996; // [esp+7E38h] [ebp-978h]
  ZRef<SecondaryStat::VIEWELEM> v4997; // [esp+7E40h] [ebp-970h]
  ZRef<SecondaryStat::VIEWELEM> v4998; // [esp+7E48h] [ebp-968h]
  ZRef<SecondaryStat::VIEWELEM> v4999; // [esp+7E50h] [ebp-960h]
  ZRef<SecondaryStat::VIEWELEM> v5000; // [esp+7E58h] [ebp-958h]
  ZRef<SecondaryStat::VIEWELEM> v5001; // [esp+7E60h] [ebp-950h]
  ZRef<SecondaryStat::VIEWELEM> v5002; // [esp+7E68h] [ebp-948h]
  ZRef<SecondaryStat::VIEWELEM> v5003; // [esp+7E70h] [ebp-940h]
  ZRef<SecondaryStat::VIEWELEM> v5004; // [esp+7E78h] [ebp-938h]
  ZRef<SecondaryStat::VIEWELEM> v5005; // [esp+7E80h] [ebp-930h]
  ZRef<SecondaryStat::VIEWELEM> v5006; // [esp+7E88h] [ebp-928h]
  ZRef<SecondaryStat::VIEWELEM> v5007; // [esp+7E90h] [ebp-920h]
  ZRef<SecondaryStat::VIEWELEM> v5008; // [esp+7E98h] [ebp-918h]
  ZRef<SecondaryStat::VIEWELEM> v5009; // [esp+7EA0h] [ebp-910h]
  ZRef<SecondaryStat::VIEWELEM> v5010; // [esp+7EA8h] [ebp-908h]
  ZRef<SecondaryStat::VIEWELEM> v5011; // [esp+7EB0h] [ebp-900h]
  ZRef<SecondaryStat::VIEWELEM> v5012; // [esp+7EB8h] [ebp-8F8h]
  ZRef<SecondaryStat::VIEWELEM> v5013; // [esp+7EC0h] [ebp-8F0h]
  ZRef<SecondaryStat::VIEWELEM> v5014; // [esp+7EC8h] [ebp-8E8h]
  ZRef<SecondaryStat::VIEWELEM> v5015; // [esp+7ED0h] [ebp-8E0h]
  ZRef<SecondaryStat::VIEWELEM> v5016; // [esp+7ED8h] [ebp-8D8h]
  ZRef<SecondaryStat::VIEWELEM> v5017; // [esp+7EE0h] [ebp-8D0h]
  ZRef<SecondaryStat::VIEWELEM> v5018; // [esp+7EE8h] [ebp-8C8h]
  ZRef<SecondaryStat::VIEWELEM> v5019; // [esp+7EF0h] [ebp-8C0h]
  ZRef<SecondaryStat::VIEWELEM> v5020; // [esp+7EF8h] [ebp-8B8h]
  ZRef<SecondaryStat::VIEWELEM> v5021; // [esp+7F00h] [ebp-8B0h]
  ZRef<SecondaryStat::VIEWELEM> v5022; // [esp+7F08h] [ebp-8A8h]
  ZRef<SecondaryStat::VIEWELEM> v5023; // [esp+7F10h] [ebp-8A0h]
  ZRef<SecondaryStat::VIEWELEM> v5024; // [esp+7F18h] [ebp-898h]
  ZRef<SecondaryStat::VIEWELEM> v5025; // [esp+7F20h] [ebp-890h]
  ZRef<SecondaryStat::VIEWELEM> v5026; // [esp+7F28h] [ebp-888h]
  ZRef<SecondaryStat::VIEWELEM> v5027; // [esp+7F30h] [ebp-880h]
  ZRef<SecondaryStat::VIEWELEM> v5028; // [esp+7F38h] [ebp-878h]
  ZRef<SecondaryStat::VIEWELEM> v5029; // [esp+7F40h] [ebp-870h]
  ZRef<SecondaryStat::VIEWELEM> v5030; // [esp+7F48h] [ebp-868h]
  ZRef<SecondaryStat::VIEWELEM> v5031; // [esp+7F50h] [ebp-860h]
  ZRef<SecondaryStat::VIEWELEM> v5032; // [esp+7F58h] [ebp-858h]
  ZRef<SecondaryStat::VIEWELEM> v5033; // [esp+7F60h] [ebp-850h]
  ZRef<SecondaryStat::VIEWELEM> v5034; // [esp+7F68h] [ebp-848h]
  ZRef<SecondaryStat::VIEWELEM> v5035; // [esp+7F70h] [ebp-840h]
  ZRef<SecondaryStat::VIEWELEM> v5036; // [esp+7F78h] [ebp-838h]
  ZRef<SecondaryStat::VIEWELEM> v5037; // [esp+7F80h] [ebp-830h]
  ZRef<SecondaryStat::VIEWELEM> v5038; // [esp+7F88h] [ebp-828h]
  ZRef<SecondaryStat::VIEWELEM> v5039; // [esp+7F90h] [ebp-820h]
  ZRef<SecondaryStat::VIEWELEM> v5040; // [esp+7F98h] [ebp-818h]
  ZRef<SecondaryStat::VIEWELEM> v5041; // [esp+7FA0h] [ebp-810h]
  ZRef<SecondaryStat::VIEWELEM> v5042; // [esp+7FA8h] [ebp-808h]
  ZRef<SecondaryStat::VIEWELEM> v5043; // [esp+7FB0h] [ebp-800h]
  ZRef<SecondaryStat::VIEWELEM> v5044; // [esp+7FB8h] [ebp-7F8h]
  ZRef<SecondaryStat::VIEWELEM> v5045; // [esp+7FC0h] [ebp-7F0h]
  ZRef<SecondaryStat::VIEWELEM> v5046; // [esp+7FC8h] [ebp-7E8h]
  ZRef<SecondaryStat::VIEWELEM> v5047; // [esp+7FD0h] [ebp-7E0h]
  ZRef<SecondaryStat::VIEWELEM> v5048; // [esp+7FD8h] [ebp-7D8h]
  ZRef<SecondaryStat::VIEWELEM> v5049; // [esp+7FE0h] [ebp-7D0h]
  ZRef<SecondaryStat::VIEWELEM> v5050; // [esp+7FE8h] [ebp-7C8h]
  ZRef<SecondaryStat::VIEWELEM> v5051; // [esp+7FF0h] [ebp-7C0h]
  ZRef<SecondaryStat::VIEWELEM> v5052; // [esp+7FF8h] [ebp-7B8h]
  ZRef<SecondaryStat::VIEWELEM> v5053; // [esp+8000h] [ebp-7B0h]
  ZRef<SecondaryStat::VIEWELEM> v5054; // [esp+8008h] [ebp-7A8h]
  ZRef<SecondaryStat::VIEWELEM> v5055; // [esp+8010h] [ebp-7A0h]
  ZRef<SecondaryStat::VIEWELEM> v5056; // [esp+8018h] [ebp-798h]
  ZRef<SecondaryStat::VIEWELEM> v5057; // [esp+8020h] [ebp-790h]
  ZRef<SecondaryStat::VIEWELEM> v5058; // [esp+8028h] [ebp-788h]
  ZRef<SecondaryStat::VIEWELEM> v5059; // [esp+8030h] [ebp-780h]
  ZRef<SecondaryStat::VIEWELEM> v5060; // [esp+8038h] [ebp-778h]
  ZRef<SecondaryStat::VIEWELEM> v5061; // [esp+8040h] [ebp-770h]
  ZRef<SecondaryStat::VIEWELEM> v5062; // [esp+8048h] [ebp-768h]
  ZRef<SecondaryStat::VIEWELEM> v5063; // [esp+8050h] [ebp-760h]
  ZRef<SecondaryStat::VIEWELEM> v5064; // [esp+8058h] [ebp-758h]
  ZRef<SecondaryStat::VIEWELEM> v5065; // [esp+8060h] [ebp-750h]
  ZRef<SecondaryStat::VIEWELEM> v5066; // [esp+8068h] [ebp-748h]
  ZRef<SecondaryStat::VIEWELEM> v5067; // [esp+8070h] [ebp-740h]
  ZRef<SecondaryStat::VIEWELEM> v5068; // [esp+8078h] [ebp-738h]
  ZRef<SecondaryStat::VIEWELEM> v5069; // [esp+8080h] [ebp-730h]
  ZRef<SecondaryStat::VIEWELEM> v5070; // [esp+8088h] [ebp-728h]
  ZRef<SecondaryStat::VIEWELEM> v5071; // [esp+8090h] [ebp-720h]
  ZRef<SecondaryStat::VIEWELEM> v5072; // [esp+8098h] [ebp-718h]
  ZRef<SecondaryStat::VIEWELEM> v5073; // [esp+80A0h] [ebp-710h]
  ZRef<SecondaryStat::VIEWELEM> v5074; // [esp+80A8h] [ebp-708h]
  ZRef<SecondaryStat::VIEWELEM> v5075; // [esp+80B0h] [ebp-700h]
  ZRef<SecondaryStat::VIEWELEM> v5076; // [esp+80B8h] [ebp-6F8h]
  ZRef<SecondaryStat::VIEWELEM> v5077; // [esp+80C0h] [ebp-6F0h]
  ZRef<SecondaryStat::VIEWELEM> v5078; // [esp+80C8h] [ebp-6E8h]
  ZRef<SecondaryStat::VIEWELEM> v5079; // [esp+80D0h] [ebp-6E0h]
  ZRef<SecondaryStat::VIEWELEM> v5080; // [esp+80D8h] [ebp-6D8h]
  ZRef<SecondaryStat::VIEWELEM> v5081; // [esp+80E0h] [ebp-6D0h]
  ZRef<SecondaryStat::VIEWELEM> v5082; // [esp+80E8h] [ebp-6C8h]
  ZRef<SecondaryStat::VIEWELEM> v5083; // [esp+80F0h] [ebp-6C0h]
  ZRef<SecondaryStat::VIEWELEM> v5084; // [esp+80F8h] [ebp-6B8h]
  ZRef<SecondaryStat::VIEWELEM> v5085; // [esp+8100h] [ebp-6B0h]
  ZRef<SecondaryStat::VIEWELEM> v5086; // [esp+8108h] [ebp-6A8h]
  ZRef<SecondaryStat::VIEWELEM> v5087; // [esp+8110h] [ebp-6A0h]
  ZRef<SecondaryStat::VIEWELEM> v5088; // [esp+8118h] [ebp-698h]
  ZRef<SecondaryStat::VIEWELEM> v5089; // [esp+8120h] [ebp-690h]
  ZRef<SecondaryStat::VIEWELEM> v5090; // [esp+8128h] [ebp-688h]
  ZRef<SecondaryStat::VIEWELEM> v5091; // [esp+8130h] [ebp-680h]
  ZRef<SecondaryStat::VIEWELEM> v5092; // [esp+8138h] [ebp-678h]
  ZRef<SecondaryStat::VIEWELEM> v5093; // [esp+8140h] [ebp-670h]
  ZRef<SecondaryStat::VIEWELEM> v5094; // [esp+8148h] [ebp-668h]
  ZRef<SecondaryStat::VIEWELEM> v5095; // [esp+8150h] [ebp-660h]
  ZRef<SecondaryStat::VIEWELEM> v5096; // [esp+8158h] [ebp-658h]
  ZRef<SecondaryStat::VIEWELEM> v5097; // [esp+8160h] [ebp-650h]
  ZRef<SecondaryStat::VIEWELEM> v5098; // [esp+8168h] [ebp-648h]
  ZRef<SecondaryStat::VIEWELEM> v5099; // [esp+8170h] [ebp-640h]
  ZRef<SecondaryStat::VIEWELEM> v5100; // [esp+8178h] [ebp-638h]
  ZRef<SecondaryStat::VIEWELEM> v5101; // [esp+8180h] [ebp-630h]
  ZRef<SecondaryStat::VIEWELEM> v5102; // [esp+8188h] [ebp-628h]
  ZRef<SecondaryStat::VIEWELEM> v5103; // [esp+8190h] [ebp-620h]
  ZRef<SecondaryStat::VIEWELEM> v5104; // [esp+8198h] [ebp-618h]
  ZRef<SecondaryStat::VIEWELEM> v5105; // [esp+81A0h] [ebp-610h]
  ZRef<SecondaryStat::VIEWELEM> v5106; // [esp+81A8h] [ebp-608h]
  ZRef<SecondaryStat::VIEWELEM> v5107; // [esp+81B0h] [ebp-600h]
  ZRef<SecondaryStat::VIEWELEM> v5108; // [esp+81B8h] [ebp-5F8h]
  ZRef<SecondaryStat::VIEWELEM> v5109; // [esp+81C0h] [ebp-5F0h]
  ZRef<SecondaryStat::VIEWELEM> v5110; // [esp+81C8h] [ebp-5E8h]
  ZRef<SecondaryStat::VIEWELEM> v5111; // [esp+81D0h] [ebp-5E0h]
  ZRef<SecondaryStat::VIEWELEM> v5112; // [esp+81D8h] [ebp-5D8h]
  ZRef<SecondaryStat::VIEWELEM> v5113; // [esp+81E0h] [ebp-5D0h]
  ZRef<SecondaryStat::VIEWELEM> v5114; // [esp+81E8h] [ebp-5C8h]
  ZRef<SecondaryStat::VIEWELEM> v5115; // [esp+81F0h] [ebp-5C0h]
  ZRef<SecondaryStat::VIEWELEM> v5116; // [esp+81F8h] [ebp-5B8h]
  ZRef<SecondaryStat::VIEWELEM> v5117; // [esp+8200h] [ebp-5B0h]
  ZRef<SecondaryStat::VIEWELEM> v5118; // [esp+8208h] [ebp-5A8h]
  ZRef<SecondaryStat::VIEWELEM> v5119; // [esp+8210h] [ebp-5A0h]
  ZRef<SecondaryStat::VIEWELEM> v5120; // [esp+8218h] [ebp-598h]
  ZRef<SecondaryStat::VIEWELEM> v5121; // [esp+8220h] [ebp-590h]
  ZRef<SecondaryStat::VIEWELEM> v5122; // [esp+8228h] [ebp-588h]
  ZRef<SecondaryStat::VIEWELEM> v5123; // [esp+8230h] [ebp-580h]
  ZRef<SecondaryStat::VIEWELEM> v5124; // [esp+8238h] [ebp-578h]
  ZRef<SecondaryStat::VIEWELEM> v5125; // [esp+8240h] [ebp-570h]
  ZRef<SecondaryStat::VIEWELEM> v5126; // [esp+8248h] [ebp-568h]
  ZRef<SecondaryStat::VIEWELEM> v5127; // [esp+8250h] [ebp-560h]
  ZRef<SecondaryStat::VIEWELEM> v5128; // [esp+8258h] [ebp-558h]
  ZRef<SecondaryStat::VIEWELEM> v5129; // [esp+8260h] [ebp-550h]
  ZRef<SecondaryStat::VIEWELEM> v5130; // [esp+8268h] [ebp-548h]
  ZRef<SecondaryStat::VIEWELEM> v5131; // [esp+8270h] [ebp-540h]
  ZRef<SecondaryStat::VIEWELEM> v5132; // [esp+8278h] [ebp-538h]
  ZRef<SecondaryStat::VIEWELEM> v5133; // [esp+8280h] [ebp-530h]
  ZRef<SecondaryStat::VIEWELEM> v5134; // [esp+8288h] [ebp-528h]
  ZRef<SecondaryStat::VIEWELEM> v5135; // [esp+8290h] [ebp-520h]
  ZRef<SecondaryStat::VIEWELEM> v5136; // [esp+8298h] [ebp-518h]
  ZRef<SecondaryStat::VIEWELEM> v5137; // [esp+82A0h] [ebp-510h]
  ZRef<SecondaryStat::VIEWELEM> v5138; // [esp+82A8h] [ebp-508h]
  ZRef<SecondaryStat::VIEWELEM> v5139; // [esp+82B0h] [ebp-500h]
  ZRef<SecondaryStat::VIEWELEM> v5140; // [esp+82B8h] [ebp-4F8h]
  ZRef<SecondaryStat::VIEWELEM> v5141; // [esp+82C0h] [ebp-4F0h]
  ZRef<SecondaryStat::VIEWELEM> v5142; // [esp+82C8h] [ebp-4E8h]
  ZRef<SecondaryStat::VIEWELEM> v5143; // [esp+82D0h] [ebp-4E0h]
  ZRef<SecondaryStat::VIEWELEM> v5144; // [esp+82D8h] [ebp-4D8h]
  ZRef<SecondaryStat::VIEWELEM> v5145; // [esp+82E0h] [ebp-4D0h]
  ZRef<SecondaryStat::VIEWELEM> v5146; // [esp+82E8h] [ebp-4C8h]
  ZRef<SecondaryStat::VIEWELEM> v5147; // [esp+82F0h] [ebp-4C0h]
  ZRef<SecondaryStat::VIEWELEM> v5148; // [esp+82F8h] [ebp-4B8h]
  ZRef<SecondaryStat::VIEWELEM> v5149; // [esp+8300h] [ebp-4B0h]
  ZRef<SecondaryStat::VIEWELEM> v5150; // [esp+8308h] [ebp-4A8h]
  ZRef<SecondaryStat::VIEWELEM> v5151; // [esp+8310h] [ebp-4A0h]
  ZRef<SecondaryStat::VIEWELEM> v5152; // [esp+8318h] [ebp-498h]
  ZRef<SecondaryStat::VIEWELEM> v5153; // [esp+8320h] [ebp-490h]
  ZRef<SecondaryStat::VIEWELEM> v5154; // [esp+8328h] [ebp-488h]
  ZRef<SecondaryStat::VIEWELEM> v5155; // [esp+8330h] [ebp-480h]
  ZRef<SecondaryStat::VIEWELEM> v5156; // [esp+8338h] [ebp-478h]
  ZRef<SecondaryStat::VIEWELEM> v5157; // [esp+8340h] [ebp-470h]
  ZRef<SecondaryStat::VIEWELEM> v5158; // [esp+8348h] [ebp-468h]
  ZRef<SecondaryStat::VIEWELEM> v5159; // [esp+8350h] [ebp-460h]
  ZRef<SecondaryStat::VIEWELEM> v5160; // [esp+8358h] [ebp-458h]
  ZRef<SecondaryStat::VIEWELEM> v5161; // [esp+8360h] [ebp-450h]
  ZRef<SecondaryStat::VIEWELEM> v5162; // [esp+8368h] [ebp-448h]
  ZRef<SecondaryStat::VIEWELEM> v5163; // [esp+8370h] [ebp-440h]
  ZRef<SecondaryStat::VIEWELEM> v5164; // [esp+8378h] [ebp-438h]
  ZRef<SecondaryStat::VIEWELEM> v5165; // [esp+8380h] [ebp-430h]
  ZRef<SecondaryStat::VIEWELEM> v5166; // [esp+8388h] [ebp-428h]
  ZRef<SecondaryStat::VIEWELEM> v5167; // [esp+8390h] [ebp-420h]
  ZRef<SecondaryStat::VIEWELEM> v5168; // [esp+8398h] [ebp-418h]
  ZRef<SecondaryStat::VIEWELEM> v5169; // [esp+83A0h] [ebp-410h]
  ZRef<SecondaryStat::VIEWELEM> v5170; // [esp+83A8h] [ebp-408h]
  ZRef<SecondaryStat::VIEWELEM> v5171; // [esp+83B0h] [ebp-400h]
  ZRef<SecondaryStat::VIEWELEM> v5172; // [esp+83B8h] [ebp-3F8h]
  ZRef<SecondaryStat::VIEWELEM> v5173; // [esp+83C0h] [ebp-3F0h]
  ZRef<SecondaryStat::VIEWELEM> v5174; // [esp+83C8h] [ebp-3E8h]
  ZRef<SecondaryStat::VIEWELEM> v5175; // [esp+83D0h] [ebp-3E0h]
  ZRef<SecondaryStat::VIEWELEM> v5176; // [esp+83D8h] [ebp-3D8h]
  ZRef<SecondaryStat::VIEWELEM> v5177; // [esp+83E0h] [ebp-3D0h]
  ZRef<SecondaryStat::VIEWELEM> v5178; // [esp+83E8h] [ebp-3C8h]
  ZRef<SecondaryStat::VIEWELEM> v5179; // [esp+83F0h] [ebp-3C0h]
  ZRef<SecondaryStat::VIEWELEM> v5180; // [esp+83F8h] [ebp-3B8h]
  ZRef<SecondaryStat::VIEWELEM> v5181; // [esp+8400h] [ebp-3B0h]
  ZRef<SecondaryStat::VIEWELEM> v5182; // [esp+8408h] [ebp-3A8h]
  ZRef<SecondaryStat::VIEWELEM> v5183; // [esp+8410h] [ebp-3A0h]
  ZRef<SecondaryStat::VIEWELEM> v5184; // [esp+8418h] [ebp-398h]
  ZRef<SecondaryStat::VIEWELEM> v5185; // [esp+8420h] [ebp-390h]
  ZRef<SecondaryStat::VIEWELEM> v5186; // [esp+8428h] [ebp-388h]
  ZRef<SecondaryStat::VIEWELEM> v5187; // [esp+8430h] [ebp-380h]
  ZRef<SecondaryStat::VIEWELEM> v5188; // [esp+8438h] [ebp-378h]
  ZRef<SecondaryStat::VIEWELEM> v5189; // [esp+8440h] [ebp-370h]
  ZRef<SecondaryStat::VIEWELEM> v5190; // [esp+8448h] [ebp-368h]
  ZRef<SecondaryStat::VIEWELEM> v5191; // [esp+8450h] [ebp-360h]
  ZRef<SecondaryStat::VIEWELEM> v5192; // [esp+8458h] [ebp-358h]
  ZRef<SecondaryStat::VIEWELEM> v5193; // [esp+8460h] [ebp-350h]
  ZRef<SecondaryStat::VIEWELEM> v5194; // [esp+8468h] [ebp-348h]
  ZRef<SecondaryStat::VIEWELEM> v5195; // [esp+8470h] [ebp-340h]
  ZRef<SecondaryStat::VIEWELEM> v5196; // [esp+8478h] [ebp-338h]
  ZRef<SecondaryStat::VIEWELEM> v5197; // [esp+8480h] [ebp-330h]
  ZRef<SecondaryStat::VIEWELEM> v5198; // [esp+8488h] [ebp-328h]
  ZRef<SecondaryStat::VIEWELEM> v5199; // [esp+8490h] [ebp-320h]
  ZRef<SecondaryStat::VIEWELEM> v5200; // [esp+8498h] [ebp-318h]
  ZRef<SecondaryStat::VIEWELEM> v5201; // [esp+84A0h] [ebp-310h]
  ZRef<SecondaryStat::VIEWELEM> v5202; // [esp+84A8h] [ebp-308h]
  ZRef<SecondaryStat::VIEWELEM> v5203; // [esp+84B0h] [ebp-300h]
  ZRef<SecondaryStat::VIEWELEM> v5204; // [esp+84B8h] [ebp-2F8h]
  ZRef<SecondaryStat::VIEWELEM> v5205; // [esp+84C0h] [ebp-2F0h]
  ZRef<SecondaryStat::VIEWELEM> v5206; // [esp+84C8h] [ebp-2E8h]
  ZRef<SecondaryStat::VIEWELEM> v5207; // [esp+84D0h] [ebp-2E0h]
  ZRef<SecondaryStat::VIEWELEM> v5208; // [esp+84D8h] [ebp-2D8h]
  ZRef<SecondaryStat::VIEWELEM> v5209; // [esp+84E0h] [ebp-2D0h]
  ZRef<SecondaryStat::VIEWELEM> v5210; // [esp+84E8h] [ebp-2C8h]
  ZRef<SecondaryStat::VIEWELEM> v5211; // [esp+84F0h] [ebp-2C0h]
  ZRef<SecondaryStat::VIEWELEM> v5212; // [esp+84F8h] [ebp-2B8h]
  ZRef<SecondaryStat::VIEWELEM> v5213; // [esp+8500h] [ebp-2B0h]
  ZRef<SecondaryStat::VIEWELEM> v5214; // [esp+8508h] [ebp-2A8h]
  ZRef<SecondaryStat::VIEWELEM> v5215; // [esp+8510h] [ebp-2A0h]
  ZRef<SecondaryStat::VIEWELEM> v5216; // [esp+8518h] [ebp-298h]
  ZRef<SecondaryStat::VIEWELEM> v5217; // [esp+8520h] [ebp-290h]
  ZRef<SecondaryStat::VIEWELEM> v5218; // [esp+8528h] [ebp-288h]
  ZRef<SecondaryStat::VIEWELEM> v5219; // [esp+8530h] [ebp-280h]
  ZRef<SecondaryStat::VIEWELEM> v5220; // [esp+8538h] [ebp-278h]
  ZRef<SecondaryStat::VIEWELEM> v5221; // [esp+8540h] [ebp-270h]
  ZRef<SecondaryStat::VIEWELEM> v5222; // [esp+8548h] [ebp-268h]
  ZRef<SecondaryStat::VIEWELEM> v5223; // [esp+8550h] [ebp-260h]
  ZRef<SecondaryStat::VIEWELEM> v5224; // [esp+8558h] [ebp-258h]
  ZRef<SecondaryStat::VIEWELEM> v5225; // [esp+8560h] [ebp-250h]
  ZRef<SecondaryStat::VIEWELEM> v5226; // [esp+8568h] [ebp-248h]
  ZRef<SecondaryStat::VIEWELEM> v5227; // [esp+8570h] [ebp-240h]
  ZRef<SecondaryStat::VIEWELEM> v5228; // [esp+8578h] [ebp-238h]
  ZRef<SecondaryStat::VIEWELEM> v5229; // [esp+8580h] [ebp-230h]
  ZRef<SecondaryStat::VIEWELEM> v5230; // [esp+8588h] [ebp-228h]
  ZRef<SecondaryStat::VIEWELEM> v5231; // [esp+8590h] [ebp-220h]
  ZRef<SecondaryStat::VIEWELEM> v5232; // [esp+8598h] [ebp-218h]
  ZRef<SecondaryStat::VIEWELEM> v5233; // [esp+85A0h] [ebp-210h]
  ZRef<SecondaryStat::VIEWELEM> v5234; // [esp+85A8h] [ebp-208h]
  ZRef<SecondaryStat::VIEWELEM> v5235; // [esp+85B0h] [ebp-200h]
  ZRef<SecondaryStat::VIEWELEM> v5236; // [esp+85B8h] [ebp-1F8h]
  ZRef<SecondaryStat::VIEWELEM> v5237; // [esp+85C0h] [ebp-1F0h]
  ZRef<SecondaryStat::VIEWELEM> v5238; // [esp+85C8h] [ebp-1E8h]
  ZRef<SecondaryStat::VIEWELEM> v5239; // [esp+85D0h] [ebp-1E0h]
  ZRef<SecondaryStat::VIEWELEM> v5240; // [esp+85D8h] [ebp-1D8h]
  ZRef<SecondaryStat::VIEWELEM> v5241; // [esp+85E0h] [ebp-1D0h]
  ZRef<SecondaryStat::VIEWELEM> v5242; // [esp+85E8h] [ebp-1C8h]
  ZRef<SecondaryStat::VIEWELEM> v5243; // [esp+85F0h] [ebp-1C0h]
  ZRef<SecondaryStat::VIEWELEM> v5244; // [esp+85F8h] [ebp-1B8h]
  ZRef<SecondaryStat::VIEWELEM> v5245; // [esp+8600h] [ebp-1B0h]
  ZRef<SecondaryStat::VIEWELEM> v5246; // [esp+8608h] [ebp-1A8h]
  ZRef<SecondaryStat::VIEWELEM> v5247; // [esp+8610h] [ebp-1A0h]
  ZRef<SecondaryStat::VIEWELEM> v5248; // [esp+8618h] [ebp-198h]
  ZRef<SecondaryStat::VIEWELEM> v5249; // [esp+8620h] [ebp-190h]
  ZRef<SecondaryStat::VIEWELEM> v5250; // [esp+8628h] [ebp-188h]
  ZRef<SecondaryStat::VIEWELEM> v5251; // [esp+8630h] [ebp-180h]
  ZRef<SecondaryStat::VIEWELEM> v5252; // [esp+8638h] [ebp-178h]
  ZRef<SecondaryStat::VIEWELEM> v5253; // [esp+8640h] [ebp-170h]
  ZRef<SecondaryStat::VIEWELEM> v5254; // [esp+8648h] [ebp-168h]
  ZRef<SecondaryStat::VIEWELEM> v5255; // [esp+8650h] [ebp-160h]
  ZRef<SecondaryStat::VIEWELEM> v5256; // [esp+8658h] [ebp-158h]
  ZRef<SecondaryStat::VIEWELEM> v5257; // [esp+8660h] [ebp-150h]
  ZRef<SecondaryStat::VIEWELEM> v5258; // [esp+8668h] [ebp-148h]
  ZRef<SecondaryStat::VIEWELEM> v5259; // [esp+8670h] [ebp-140h]
  ZRef<SecondaryStat::VIEWELEM> v5260; // [esp+8678h] [ebp-138h]
  ZRef<SecondaryStat::VIEWELEM> v5261; // [esp+8680h] [ebp-130h]
  ZRef<SecondaryStat::VIEWELEM> v5262; // [esp+8688h] [ebp-128h]
  ZRef<SecondaryStat::VIEWELEM> v5263; // [esp+8690h] [ebp-120h]
  ZRef<SecondaryStat::VIEWELEM> v5264; // [esp+8698h] [ebp-118h]
  ZRef<SecondaryStat::VIEWELEM> v5265; // [esp+86A0h] [ebp-110h]
  ZRef<SecondaryStat::VIEWELEM> v5266; // [esp+86A8h] [ebp-108h]
  ZRef<SecondaryStat::VIEWELEM> v5267; // [esp+86B0h] [ebp-100h]
  ZRef<SecondaryStat::VIEWELEM> v5268; // [esp+86B8h] [ebp-F8h]
  ZRef<SecondaryStat::VIEWELEM> v5269; // [esp+86C0h] [ebp-F0h]
  ZRef<SecondaryStat::VIEWELEM> v5270; // [esp+86C8h] [ebp-E8h]
  ZRef<SecondaryStat::VIEWELEM> v5271; // [esp+86D0h] [ebp-E0h]
  ZRef<SecondaryStat::VIEWELEM> v5272; // [esp+86D8h] [ebp-D8h]
  ZRef<SecondaryStat::VIEWELEM> v5273; // [esp+86E0h] [ebp-D0h]
  ZRef<SecondaryStat::VIEWELEM> v5274; // [esp+86E8h] [ebp-C8h]
  ZRef<SecondaryStat::VIEWELEM> v5275; // [esp+86F0h] [ebp-C0h]
  ZRef<SecondaryStat::VIEWELEM> v5276; // [esp+86F8h] [ebp-B8h]
  ZRef<SecondaryStat::VIEWELEM> v5277; // [esp+8700h] [ebp-B0h]
  ZRef<SecondaryStat::VIEWELEM> v5278; // [esp+8708h] [ebp-A8h]
  ZRef<SecondaryStat::VIEWELEM> v5279; // [esp+8710h] [ebp-A0h]
  ZRef<SecondaryStat::VIEWELEM> v5280; // [esp+8718h] [ebp-98h]
  ZRef<SecondaryStat::VIEWELEM> v5281; // [esp+8720h] [ebp-90h]
  ZRef<SecondaryStat::VIEWELEM> v5282; // [esp+8728h] [ebp-88h]
  ZRef<SecondaryStat::VIEWELEM> v5283; // [esp+8730h] [ebp-80h]
  ZRef<SecondaryStat::VIEWELEM> v5284; // [esp+8738h] [ebp-78h]
  ZRef<SecondaryStat::VIEWELEM> v5285; // [esp+8740h] [ebp-70h]
  ZRef<SecondaryStat::VIEWELEM> v5286; // [esp+8748h] [ebp-68h]
  ZRef<SecondaryStat::VIEWELEM> value; // [esp+8750h] [ebp-60h]
  int tCurTime; // [esp+8758h] [ebp-58h]
  int v5289; // [esp+875Ch] [ebp-54h]
  CFlag<480> p; // [esp+8760h] [ebp-50h]
  int t; // [esp+879Ch] [ebp-14h]
  int b; // [esp+87A0h] [ebp-10h]
  int v5293; // [esp+87ACh] [ebp-4h]

  v3649 = this;
  CFlag<480>::CFlag<480>(&p);
  CInPacket::DecodeBuffer(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee, &p, 60u);
  t = 0;
  b = 0;
  tCurTime = timeGetTime();
  v4 = CFlag<480>::operator&(&p, &resulta, &CTS_STR);
  if ( CFlag<480>::operator bool(v4) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v5 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSTR_(v3649, v5);
    }
    else
    {
      v6 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSTR_(v3649, v6);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSTR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSTR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&value);
    v5293 = 0;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &value) )
    {
      v4880 = operator new(0x50u);
      if ( v4880 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4880);
        v3648 = v7;
      }
      else
      {
        v3648 = 0;
      }
      pT = v3648;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&value, v3648);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &value);
    }
    v8 = b;
    v9 = ZRef<SecondaryStat::VIEWELEM>::operator->(&value);
    v10 = zmax<long>(v9->tDuration, v8);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&value)->tDuration = v10;
    v11 = ZRef<SecondaryStat::VIEWELEM>::operator->(&value);
    CFlag<480>::operator=|(&v11->uFlag, &CTS_STR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&value);
  }
  v12 = CFlag<480>::operator&(&p, &v4879, &CTS_INT);
  if ( CFlag<480>::operator bool(v12) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v13 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nINT_(v3649, v13);
    }
    else
    {
      v14 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nINT_(v3649, v14);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rINT_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tINT_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5286);
    v5293 = 1;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5286) )
    {
      v4877 = operator new(0x50u);
      if ( v4877 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4877);
        v3647 = v15;
      }
      else
      {
        v3647 = 0;
      }
      v4878 = v3647;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5286, v3647);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5286);
    }
    v16 = b;
    v17 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5286);
    v18 = zmax<long>(v17->tDuration, v16);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5286)->tDuration = v18;
    v19 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5286);
    CFlag<480>::operator=|(&v19->uFlag, &CTS_INT);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5286);
  }
  v20 = CFlag<480>::operator&(&p, &v4876, &CTS_DEX);
  if ( CFlag<480>::operator bool(v20) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v21 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDEX_(v3649, v21);
    }
    else
    {
      v22 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDEX_(v3649, v22);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDEX_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDEX_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5285);
    v5293 = 2;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5285) )
    {
      v4874 = operator new(0x50u);
      if ( v4874 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4874);
        v3646 = v23;
      }
      else
      {
        v3646 = 0;
      }
      v4875 = v3646;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5285, v3646);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5285);
    }
    v24 = b;
    v25 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5285);
    v26 = zmax<long>(v25->tDuration, v24);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5285)->tDuration = v26;
    v27 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5285);
    CFlag<480>::operator=|(&v27->uFlag, &CTS_DEX);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5285);
  }
  v28 = CFlag<480>::operator&(&p, &v4873, &CTS_LUK);
  if ( CFlag<480>::operator bool(v28) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v29 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLUK_(v3649, v29);
    }
    else
    {
      v30 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLUK_(v3649, v30);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rLUK_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tLUK_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5284);
    v5293 = 3;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5284) )
    {
      v4871 = operator new(0x50u);
      if ( v4871 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4871);
        v3645 = v31;
      }
      else
      {
        v3645 = 0;
      }
      v4872 = v3645;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5284, v3645);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5284);
    }
    v32 = b;
    v33 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5284);
    v34 = zmax<long>(v33->tDuration, v32);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5284)->tDuration = v34;
    v35 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5284);
    CFlag<480>::operator=|(&v35->uFlag, &CTS_LUK);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5284);
  }
  v36 = CFlag<480>::operator&(&p, &v4870, &CTS_PAD);
  if ( CFlag<480>::operator bool(v36) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v37 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPAD_(v3649, v37);
    }
    else
    {
      v38 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPAD_(v3649, v38);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPAD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPAD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5283);
    v5293 = 4;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5283) )
    {
      v4868 = operator new(0x50u);
      if ( v4868 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4868);
        v3644 = v39;
      }
      else
      {
        v3644 = 0;
      }
      v4869 = v3644;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5283, v3644);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5283);
    }
    v40 = b;
    v41 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5283);
    v42 = zmax<long>(v41->tDuration, v40);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5283)->tDuration = v42;
    v43 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5283);
    CFlag<480>::operator=|(&v43->uFlag, &CTS_PAD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5283);
  }
  v44 = CFlag<480>::operator&(&p, &v4867, &CTS_PDD);
  if ( CFlag<480>::operator bool(v44) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v45 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPDD_(v3649, v45);
    }
    else
    {
      v46 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPDD_(v3649, v46);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPDD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPDD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5282);
    v5293 = 5;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5282) )
    {
      v4865 = operator new(0x50u);
      if ( v4865 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4865);
        v3643 = v47;
      }
      else
      {
        v3643 = 0;
      }
      v4866 = v3643;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5282, v3643);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5282);
    }
    v48 = b;
    v49 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5282);
    v50 = zmax<long>(v49->tDuration, v48);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5282)->tDuration = v50;
    v51 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5282);
    CFlag<480>::operator=|(&v51->uFlag, &CTS_PDD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5282);
  }
  v52 = CFlag<480>::operator&(&p, &v4864, &CTS_MAD);
  if ( CFlag<480>::operator bool(v52) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v53 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMAD_(v3649, v53);
    }
    else
    {
      v54 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMAD_(v3649, v54);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMAD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMAD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5281);
    v5293 = 6;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5281) )
    {
      v4862 = operator new(0x50u);
      if ( v4862 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4862);
        v3642 = v55;
      }
      else
      {
        v3642 = 0;
      }
      v4863 = v3642;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5281, v3642);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5281);
    }
    v56 = b;
    v57 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5281);
    v58 = zmax<long>(v57->tDuration, v56);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5281)->tDuration = v58;
    v59 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5281);
    CFlag<480>::operator=|(&v59->uFlag, &CTS_MAD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5281);
  }
  v60 = CFlag<480>::operator&(&p, &v4861, &CTS_MDD);
  if ( CFlag<480>::operator bool(v60) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v61 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMDD_(v3649, v61);
    }
    else
    {
      v62 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMDD_(v3649, v62);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMDD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMDD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5280);
    v5293 = 7;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5280) )
    {
      v4859 = operator new(0x50u);
      if ( v4859 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4859);
        v3641 = v63;
      }
      else
      {
        v3641 = 0;
      }
      v4860 = v3641;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5280, v3641);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5280);
    }
    v64 = b;
    v65 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5280);
    v66 = zmax<long>(v65->tDuration, v64);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5280)->tDuration = v66;
    v67 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5280);
    CFlag<480>::operator=|(&v67->uFlag, &CTS_MDD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5280);
  }
  v68 = CFlag<480>::operator&(&p, &v4858, &CTS_ACC);
  if ( CFlag<480>::operator bool(v68) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v69 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nACC_(v3649, v69);
    }
    else
    {
      v70 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nACC_(v3649, v70);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rACC_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tACC_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5279);
    v5293 = 8;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5279) )
    {
      v4856 = operator new(0x50u);
      if ( v4856 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4856);
        v3640 = v71;
      }
      else
      {
        v3640 = 0;
      }
      v4857 = v3640;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5279, v3640);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5279);
    }
    v72 = b;
    v73 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5279);
    v74 = zmax<long>(v73->tDuration, v72);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5279)->tDuration = v74;
    v75 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5279);
    CFlag<480>::operator=|(&v75->uFlag, &CTS_ACC);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5279);
  }
  v76 = CFlag<480>::operator&(&p, &v4855, &CTS_EVA);
  if ( CFlag<480>::operator bool(v76) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v77 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEVA_(v3649, v77);
    }
    else
    {
      v78 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEVA_(v3649, v78);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEVA_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEVA_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5278);
    v5293 = 9;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5278) )
    {
      v4853 = operator new(0x50u);
      if ( v4853 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4853);
        v3639 = v79;
      }
      else
      {
        v3639 = 0;
      }
      v4854 = v3639;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5278, v3639);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5278);
    }
    v80 = b;
    v81 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5278);
    v82 = zmax<long>(v81->tDuration, v80);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5278)->tDuration = v82;
    v83 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5278);
    CFlag<480>::operator=|(&v83->uFlag, &CTS_EVA);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5278);
  }
  v84 = CFlag<480>::operator&(&p, &v4852, &CTS_EVAR);
  if ( CFlag<480>::operator bool(v84) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v85 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEVAR_(v3649, v85);
    }
    else
    {
      v86 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEVAR_(v3649, v86);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEVAR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEVAR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5277);
    v5293 = 10;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5277) )
    {
      v4850 = operator new(0x50u);
      if ( v4850 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4850);
        v3638 = v87;
      }
      else
      {
        v3638 = 0;
      }
      v4851 = v3638;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5277, v3638);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5277);
    }
    v88 = b;
    v89 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5277);
    v90 = zmax<long>(v89->tDuration, v88);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5277)->tDuration = v90;
    v91 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5277);
    CFlag<480>::operator=|(&v91->uFlag, &CTS_EVAR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5277);
  }
  v92 = CFlag<480>::operator&(&p, &v4849, &CTS_Craft);
  if ( CFlag<480>::operator bool(v92) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v93 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCraft_(v3649, v93);
    }
    else
    {
      v94 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCraft_(v3649, v94);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCraft_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCraft_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5276);
    v5293 = 11;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5276) )
    {
      v4847 = operator new(0x50u);
      if ( v4847 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4847);
        v3637 = v95;
      }
      else
      {
        v3637 = 0;
      }
      v4848 = v3637;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5276, v3637);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5276);
    }
    v96 = b;
    v97 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5276);
    v98 = zmax<long>(v97->tDuration, v96);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5276)->tDuration = v98;
    v99 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5276);
    CFlag<480>::operator=|(&v99->uFlag, &CTS_Craft);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5276);
  }
  v100 = CFlag<480>::operator&(&p, &v4846, &CTS_Speed);
  if ( CFlag<480>::operator bool(v100) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v101 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSpeed_(v3649, v101);
    }
    else
    {
      v102 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSpeed_(v3649, v102);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSpeed_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSpeed_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5275);
    v5293 = 12;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5275) )
    {
      v4844 = operator new(0x50u);
      if ( v4844 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4844);
        v3636 = v103;
      }
      else
      {
        v3636 = 0;
      }
      v4845 = v3636;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5275, v3636);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5275);
    }
    v104 = b;
    v105 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5275);
    v106 = zmax<long>(v105->tDuration, v104);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5275)->tDuration = v106;
    v107 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5275);
    CFlag<480>::operator=|(&v107->uFlag, &CTS_Speed);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5275);
  }
  v108 = CFlag<480>::operator&(&p, &v4843, &CTS_Jump);
  if ( CFlag<480>::operator bool(v108) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v109 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nJump_(v3649, v109);
    }
    else
    {
      v110 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nJump_(v3649, v110);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rJump_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tJump_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5274);
    v5293 = 13;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5274) )
    {
      v4841 = operator new(0x50u);
      if ( v4841 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4841);
        v3635 = v111;
      }
      else
      {
        v3635 = 0;
      }
      v4842 = v3635;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5274, v3635);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5274);
    }
    v112 = b;
    v113 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5274);
    v114 = zmax<long>(v113->tDuration, v112);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5274)->tDuration = v114;
    v115 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5274);
    CFlag<480>::operator=|(&v115->uFlag, &CTS_Jump);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5274);
  }
  v116 = CFlag<480>::operator&(&p, &v4840, &CTS_EMHP);
  if ( CFlag<480>::operator bool(v116) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v117 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEMHP_(v3649, v117);
    }
    else
    {
      v118 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEMHP_(v3649, v118);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEMHP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEMHP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5273);
    v5293 = 14;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5273) )
    {
      v4838 = operator new(0x50u);
      if ( v4838 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4838);
        v3634 = v119;
      }
      else
      {
        v3634 = 0;
      }
      v4839 = v3634;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5273, v3634);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5273);
    }
    v120 = b;
    v121 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5273);
    v122 = zmax<long>(v121->tDuration, v120);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5273)->tDuration = v122;
    v123 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5273);
    CFlag<480>::operator=|(&v123->uFlag, &CTS_EMHP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5273);
  }
  v124 = CFlag<480>::operator&(&p, &v4837, &CTS_EMMP);
  if ( CFlag<480>::operator bool(v124) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v125 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEMMP_(v3649, v125);
    }
    else
    {
      v126 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEMMP_(v3649, v126);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEMMP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEMMP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5272);
    v5293 = 15;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5272) )
    {
      v4835 = operator new(0x50u);
      if ( v4835 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4835);
        v3633 = v127;
      }
      else
      {
        v3633 = 0;
      }
      v4836 = v3633;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5272, v3633);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5272);
    }
    v128 = b;
    v129 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5272);
    v130 = zmax<long>(v129->tDuration, v128);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5272)->tDuration = v130;
    v131 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5272);
    CFlag<480>::operator=|(&v131->uFlag, &CTS_EMMP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5272);
  }
  v132 = CFlag<480>::operator&(&p, &v4834, &CTS_EPAD);
  if ( CFlag<480>::operator bool(v132) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v133 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEPAD_(v3649, v133);
    }
    else
    {
      v134 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEPAD_(v3649, v134);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEPAD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEPAD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5271);
    v5293 = 16;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5271) )
    {
      v4832 = operator new(0x50u);
      if ( v4832 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4832);
        v3632 = v135;
      }
      else
      {
        v3632 = 0;
      }
      v4833 = v3632;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5271, v3632);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5271);
    }
    v136 = b;
    v137 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5271);
    v138 = zmax<long>(v137->tDuration, v136);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5271)->tDuration = v138;
    v139 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5271);
    CFlag<480>::operator=|(&v139->uFlag, &CTS_EPAD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5271);
  }
  v140 = CFlag<480>::operator&(&p, &v4831, &CTS_EMAD);
  if ( CFlag<480>::operator bool(v140) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v141 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEMAD_(v3649, v141);
    }
    else
    {
      v142 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEMAD_(v3649, v142);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEMAD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEMAD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5270);
    v5293 = 17;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5270) )
    {
      v4829 = operator new(0x50u);
      if ( v4829 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4829);
        v3631 = v143;
      }
      else
      {
        v3631 = 0;
      }
      v4830 = v3631;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5270, v3631);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5270);
    }
    v144 = b;
    v145 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5270);
    v146 = zmax<long>(v145->tDuration, v144);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5270)->tDuration = v146;
    v147 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5270);
    CFlag<480>::operator=|(&v147->uFlag, &CTS_EMAD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5270);
  }
  v148 = CFlag<480>::operator&(&p, &v4828, &CTS_EPDD);
  if ( CFlag<480>::operator bool(v148) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v149 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEPDD_(v3649, v149);
    }
    else
    {
      v150 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEPDD_(v3649, v150);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEPDD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEPDD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5269);
    v5293 = 18;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5269) )
    {
      v4826 = operator new(0x50u);
      if ( v4826 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4826);
        v3630 = v151;
      }
      else
      {
        v3630 = 0;
      }
      v4827 = v3630;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5269, v3630);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5269);
    }
    v152 = b;
    v153 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5269);
    v154 = zmax<long>(v153->tDuration, v152);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5269)->tDuration = v154;
    v155 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5269);
    CFlag<480>::operator=|(&v155->uFlag, &CTS_EPDD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5269);
  }
  v156 = CFlag<480>::operator&(&p, &v4825, &CTS_EMDD);
  if ( CFlag<480>::operator bool(v156) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v157 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEMDD_(v3649, v157);
    }
    else
    {
      v158 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEMDD_(v3649, v158);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEMDD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEMDD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5268);
    v5293 = 19;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5268) )
    {
      v4823 = operator new(0x50u);
      if ( v4823 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4823);
        v3629 = v159;
      }
      else
      {
        v3629 = 0;
      }
      v4824 = v3629;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5268, v3629);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5268);
    }
    v160 = b;
    v161 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5268);
    v162 = zmax<long>(v161->tDuration, v160);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5268)->tDuration = v162;
    v163 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5268);
    CFlag<480>::operator=|(&v163->uFlag, &CTS_EMDD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5268);
  }
  v164 = CFlag<480>::operator&(&p, &v4822, &CTS_MagicGuard);
  if ( CFlag<480>::operator bool(v164) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v165 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagicGuard_(v3649, v165);
    }
    else
    {
      v166 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagicGuard_(v3649, v166);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMagicGuard_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMagicGuard_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5267);
    v5293 = 20;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5267) )
    {
      v4820 = operator new(0x50u);
      if ( v4820 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4820);
        v3628 = v167;
      }
      else
      {
        v3628 = 0;
      }
      v4821 = v3628;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5267, v3628);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5267);
    }
    v168 = b;
    v169 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5267);
    v170 = zmax<long>(v169->tDuration, v168);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5267)->tDuration = v170;
    v171 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5267);
    CFlag<480>::operator=|(&v171->uFlag, &CTS_MagicGuard);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5267);
  }
  v172 = CFlag<480>::operator&(&p, &v4819, &CTS_DarkSight);
  if ( CFlag<480>::operator bool(v172) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v173 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarkSight_(v3649, v173);
    }
    else
    {
      v174 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarkSight_(v3649, v174);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDarkSight_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDarkSight_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5266);
    v5293 = 21;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5266) )
    {
      v4817 = operator new(0x50u);
      if ( v4817 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4817);
        v3627 = v175;
      }
      else
      {
        v3627 = 0;
      }
      v4818 = v3627;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5266, v3627);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5266);
    }
    v176 = b;
    v177 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5266);
    v178 = zmax<long>(v177->tDuration, v176);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5266)->tDuration = v178;
    v179 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5266);
    CFlag<480>::operator=|(&v179->uFlag, &CTS_DarkSight);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5266);
  }
  v180 = CFlag<480>::operator&(&p, &v4816, &CTS_Booster);
  if ( CFlag<480>::operator bool(v180) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v181 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBooster_(v3649, v181);
    }
    else
    {
      v182 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBooster_(v3649, v182);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBooster_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBooster_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5265);
    v5293 = 22;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5265) )
    {
      v4814 = operator new(0x50u);
      if ( v4814 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4814);
        v3626 = v183;
      }
      else
      {
        v3626 = 0;
      }
      v4815 = v3626;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5265, v3626);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5265);
    }
    v184 = b;
    v185 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5265);
    v186 = zmax<long>(v185->tDuration, v184);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5265)->tDuration = v186;
    v187 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5265);
    CFlag<480>::operator=|(&v187->uFlag, &CTS_Booster);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5265);
  }
  v188 = CFlag<480>::operator&(&p, &v4813, &CTS_PowerGuard);
  if ( CFlag<480>::operator bool(v188) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v189 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPowerGuard_(v3649, v189);
    }
    else
    {
      v190 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPowerGuard_(v3649, v190);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPowerGuard_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPowerGuard_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5264);
    v5293 = 23;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5264) )
    {
      v4811 = operator new(0x50u);
      if ( v4811 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4811);
        v3625 = v191;
      }
      else
      {
        v3625 = 0;
      }
      v4812 = v3625;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5264, v3625);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5264);
    }
    v192 = b;
    v193 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5264);
    v194 = zmax<long>(v193->tDuration, v192);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5264)->tDuration = v194;
    v195 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5264);
    CFlag<480>::operator=|(&v195->uFlag, &CTS_PowerGuard);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5264);
  }
  v196 = CFlag<480>::operator&(&p, &v4810, &CTS_Guard);
  if ( CFlag<480>::operator bool(v196) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v197 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGuard_(v3649, v197);
    }
    else
    {
      v198 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGuard_(v3649, v198);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rGuard_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tGuard_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5263);
    v5293 = 24;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5263) )
    {
      v4808 = operator new(0x50u);
      if ( v4808 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4808);
        v3624 = v199;
      }
      else
      {
        v3624 = 0;
      }
      v4809 = v3624;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5263, v3624);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5263);
    }
    v200 = b;
    v201 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5263);
    v202 = zmax<long>(v201->tDuration, v200);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5263)->tDuration = v202;
    v203 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5263);
    CFlag<480>::operator=|(&v203->uFlag, &CTS_Guard);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5263);
  }
  v204 = CFlag<480>::operator&(&p, &v4807, &CTS_MaxHP);
  if ( CFlag<480>::operator bool(v204) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v205 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMaxHP_(v3649, v205);
    }
    else
    {
      v206 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMaxHP_(v3649, v206);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMaxHP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMaxHP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5262);
    v5293 = 25;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5262) )
    {
      v4805 = operator new(0x50u);
      if ( v4805 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4805);
        v3623 = v207;
      }
      else
      {
        v3623 = 0;
      }
      v4806 = v3623;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5262, v3623);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5262);
    }
    v208 = b;
    v209 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5262);
    v210 = zmax<long>(v209->tDuration, v208);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5262)->tDuration = v210;
    v211 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5262);
    CFlag<480>::operator=|(&v211->uFlag, &CTS_MaxHP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5262);
  }
  v212 = CFlag<480>::operator&(&p, &v4804, &CTS_MaxMP);
  if ( CFlag<480>::operator bool(v212) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v213 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMaxMP_(v3649, v213);
    }
    else
    {
      v214 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMaxMP_(v3649, v214);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMaxMP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMaxMP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5261);
    v5293 = 26;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5261) )
    {
      v4802 = operator new(0x50u);
      if ( v4802 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4802);
        v3622 = v215;
      }
      else
      {
        v3622 = 0;
      }
      v4803 = v3622;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5261, v3622);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5261);
    }
    v216 = b;
    v217 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5261);
    v218 = zmax<long>(v217->tDuration, v216);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5261)->tDuration = v218;
    v219 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5261);
    CFlag<480>::operator=|(&v219->uFlag, &CTS_MaxMP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5261);
  }
  v220 = CFlag<480>::operator&(&p, &v4801, &CTS_Invincible);
  if ( CFlag<480>::operator bool(v220) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v221 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInvincible_(v3649, v221);
    }
    else
    {
      v222 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInvincible_(v3649, v222);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rInvincible_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tInvincible_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5260);
    v5293 = 27;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5260) )
    {
      v4799 = operator new(0x50u);
      if ( v4799 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4799);
        v3621 = v223;
      }
      else
      {
        v3621 = 0;
      }
      v4800 = v3621;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5260, v3621);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5260);
    }
    v224 = b;
    v225 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5260);
    v226 = zmax<long>(v225->tDuration, v224);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5260)->tDuration = v226;
    v227 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5260);
    CFlag<480>::operator=|(&v227->uFlag, &CTS_Invincible);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5260);
  }
  v228 = CFlag<480>::operator&(&p, &v4798, &CTS_SoulArrow);
  if ( CFlag<480>::operator bool(v228) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v229 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulArrow_(v3649, v229);
    }
    else
    {
      v230 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulArrow_(v3649, v230);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulArrow_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSoulArrow_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5259);
    v5293 = 28;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5259) )
    {
      v4796 = operator new(0x50u);
      if ( v4796 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4796);
        v3620 = v231;
      }
      else
      {
        v3620 = 0;
      }
      v4797 = v3620;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5259, v3620);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5259);
    }
    v232 = b;
    v233 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5259);
    v234 = zmax<long>(v233->tDuration, v232);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5259)->tDuration = v234;
    v235 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5259);
    CFlag<480>::operator=|(&v235->uFlag, &CTS_SoulArrow);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5259);
  }
  v236 = CFlag<480>::operator&(&p, &v4795, &CTS_Stun);
  if ( CFlag<480>::operator bool(v236) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v237 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStun_(v3649, v237);
    }
    else
    {
      v238 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStun_(v3649, v238);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStun_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStun_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5258);
    v5293 = 29;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5258) )
    {
      v4793 = operator new(0x50u);
      if ( v4793 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4793);
        v3619 = v239;
      }
      else
      {
        v3619 = 0;
      }
      v4794 = v3619;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5258, v3619);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5258);
    }
    v240 = b;
    v241 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5258);
    v242 = zmax<long>(v241->tDuration, v240);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5258)->tDuration = v242;
    v243 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5258);
    CFlag<480>::operator=|(&v243->uFlag, &CTS_Stun);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5258);
  }
  v244 = CFlag<480>::operator&(&p, &v4792, &CTS_Shock);
  if ( CFlag<480>::operator bool(v244) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v245 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShock_(v3649, v245);
    }
    else
    {
      v246 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShock_(v3649, v246);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rShock_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tShock_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5257);
    v5293 = 30;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5257) )
    {
      v4790 = operator new(0x50u);
      if ( v4790 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4790);
        v3618 = v247;
      }
      else
      {
        v3618 = 0;
      }
      v4791 = v3618;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5257, v3618);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5257);
    }
    v248 = b;
    v249 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5257);
    v250 = zmax<long>(v249->tDuration, v248);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5257)->tDuration = v250;
    v251 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5257);
    CFlag<480>::operator=|(&v251->uFlag, &CTS_Shock);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5257);
  }
  v252 = CFlag<480>::operator&(&p, &v4789, &CTS_Poison);
  if ( CFlag<480>::operator bool(v252) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v253 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPoison_(v3649, v253);
    }
    else
    {
      v254 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPoison_(v3649, v254);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPoison_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPoison_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5256);
    v5293 = 31;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5256) )
    {
      v4787 = operator new(0x50u);
      if ( v4787 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4787);
        v3617 = v255;
      }
      else
      {
        v3617 = 0;
      }
      v4788 = v3617;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5256, v3617);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5256);
    }
    v256 = b;
    v257 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5256);
    v258 = zmax<long>(v257->tDuration, v256);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5256)->tDuration = v258;
    v259 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5256);
    CFlag<480>::operator=|(&v259->uFlag, &CTS_Poison);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5256);
  }
  v260 = CFlag<480>::operator&(&p, &v4786, &CTS_Seal);
  if ( CFlag<480>::operator bool(v260) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v261 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSeal_(v3649, v261);
    }
    else
    {
      v262 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSeal_(v3649, v262);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSeal_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSeal_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5255);
    v5293 = 32;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5255) )
    {
      v4784 = operator new(0x50u);
      if ( v4784 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4784);
        v3616 = v263;
      }
      else
      {
        v3616 = 0;
      }
      v4785 = v3616;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5255, v3616);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5255);
    }
    v264 = b;
    v265 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5255);
    v266 = zmax<long>(v265->tDuration, v264);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5255)->tDuration = v266;
    v267 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5255);
    CFlag<480>::operator=|(&v267->uFlag, &CTS_Seal);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5255);
  }
  v268 = CFlag<480>::operator&(&p, &v4783, &CTS_Darkness);
  if ( CFlag<480>::operator bool(v268) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v269 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarkness_(v3649, v269);
    }
    else
    {
      v270 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarkness_(v3649, v270);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDarkness_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDarkness_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5254);
    v5293 = 33;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5254) )
    {
      v4781 = operator new(0x50u);
      if ( v4781 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4781);
        v3615 = v271;
      }
      else
      {
        v3615 = 0;
      }
      v4782 = v3615;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5254, v3615);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5254);
    }
    v272 = b;
    v273 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5254);
    v274 = zmax<long>(v273->tDuration, v272);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5254)->tDuration = v274;
    v275 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5254);
    CFlag<480>::operator=|(&v275->uFlag, &CTS_Darkness);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5254);
  }
  v276 = CFlag<480>::operator&(&p, &v4780, &CTS_ComboCounter);
  if ( CFlag<480>::operator bool(v276) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v277 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboCounter_(v3649, v277);
    }
    else
    {
      v278 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboCounter_(v3649, v278);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rComboCounter_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tComboCounter_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5253);
    v5293 = 34;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5253) )
    {
      v4778 = operator new(0x50u);
      if ( v4778 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4778);
        v3614 = v279;
      }
      else
      {
        v3614 = 0;
      }
      v4779 = v3614;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5253, v3614);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5253);
    }
    v280 = b;
    v281 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5253);
    v282 = zmax<long>(v281->tDuration, v280);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5253)->tDuration = v282;
    v283 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5253);
    CFlag<480>::operator=|(&v283->uFlag, &CTS_ComboCounter);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5253);
  }
  v284 = CFlag<480>::operator&(&p, &v4777, &CTS_WeaponCharge);
  if ( CFlag<480>::operator bool(v284) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v285 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWeaponCharge_(v3649, v285);
    }
    else
    {
      v286 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWeaponCharge_(v3649, v286);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rWeaponCharge_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tWeaponCharge_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5252);
    v5293 = 35;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5252) )
    {
      v4775 = operator new(0x50u);
      if ( v4775 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4775);
        v3613 = v287;
      }
      else
      {
        v3613 = 0;
      }
      v4776 = v3613;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5252, v3613);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5252);
    }
    v288 = b;
    v289 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5252);
    v290 = zmax<long>(v289->tDuration, v288);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5252)->tDuration = v290;
    v291 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5252);
    CFlag<480>::operator=|(&v291->uFlag, &CTS_WeaponCharge);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5252);
  }
  v292 = CFlag<480>::operator&(&p, &v4774, &CTS_ElementalCharge);
  if ( CFlag<480>::operator bool(v292) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v293 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nElementalCharge_(v3649, v293);
    }
    else
    {
      v294 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nElementalCharge_(v3649, v294);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rElementalCharge_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tElementalCharge_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5251);
    v5293 = 36;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5251) )
    {
      v4772 = operator new(0x50u);
      if ( v4772 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4772);
        v3612 = v295;
      }
      else
      {
        v3612 = 0;
      }
      v4773 = v3612;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5251, v3612);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5251);
    }
    v296 = b;
    v297 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5251);
    v298 = zmax<long>(v297->tDuration, v296);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5251)->tDuration = v298;
    v299 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5251);
    CFlag<480>::operator=|(&v299->uFlag, &CTS_ElementalCharge);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5251);
  }
  v300 = CFlag<480>::operator&(&p, &v4771, &CTS_HolySymbol);
  if ( CFlag<480>::operator bool(v300) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v301 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHolySymbol_(v3649, v301);
    }
    else
    {
      v302 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHolySymbol_(v3649, v302);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHolySymbol_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHolySymbol_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5250);
    v5293 = 37;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5250) )
    {
      v4769 = operator new(0x50u);
      if ( v4769 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4769);
        v3611 = v303;
      }
      else
      {
        v3611 = 0;
      }
      v4770 = v3611;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5250, v3611);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5250);
    }
    v304 = b;
    v305 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5250);
    v306 = zmax<long>(v305->tDuration, v304);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5250)->tDuration = v306;
    v307 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5250);
    CFlag<480>::operator=|(&v307->uFlag, &CTS_HolySymbol);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5250);
  }
  v308 = CFlag<480>::operator&(&p, &v4768, &CTS_MesoUp);
  if ( CFlag<480>::operator bool(v308) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v309 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMesoUp_(v3649, v309);
    }
    else
    {
      v310 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMesoUp_(v3649, v310);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMesoUp_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMesoUp_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5249);
    v5293 = 38;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5249) )
    {
      v4766 = operator new(0x50u);
      if ( v4766 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4766);
        v3610 = v311;
      }
      else
      {
        v3610 = 0;
      }
      v4767 = v3610;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5249, v3610);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5249);
    }
    v312 = b;
    v313 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5249);
    v314 = zmax<long>(v313->tDuration, v312);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5249)->tDuration = v314;
    v315 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5249);
    CFlag<480>::operator=|(&v315->uFlag, &CTS_MesoUp);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5249);
  }
  v316 = CFlag<480>::operator&(&p, &v4765, &CTS_ShadowPartner);
  if ( CFlag<480>::operator bool(v316) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v317 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShadowPartner_(v3649, v317);
    }
    else
    {
      v318 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShadowPartner_(v3649, v318);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rShadowPartner_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tShadowPartner_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5248);
    v5293 = 39;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5248) )
    {
      v4763 = operator new(0x50u);
      if ( v4763 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4763);
        v3609 = v319;
      }
      else
      {
        v3609 = 0;
      }
      v4764 = v3609;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5248, v3609);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5248);
    }
    v320 = b;
    v321 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5248);
    v322 = zmax<long>(v321->tDuration, v320);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5248)->tDuration = v322;
    v323 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5248);
    CFlag<480>::operator=|(&v323->uFlag, &CTS_ShadowPartner);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5248);
  }
  v324 = CFlag<480>::operator&(&p, &v4762, &CTS_PickPocket);
  if ( CFlag<480>::operator bool(v324) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v325 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPickPocket_(v3649, v325);
    }
    else
    {
      v326 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPickPocket_(v3649, v326);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPickPocket_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPickPocket_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5247);
    v5293 = 40;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5247) )
    {
      v4760 = operator new(0x50u);
      if ( v4760 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4760);
        v3608 = v327;
      }
      else
      {
        v3608 = 0;
      }
      v4761 = v3608;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5247, v3608);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5247);
    }
    v328 = b;
    v329 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5247);
    v330 = zmax<long>(v329->tDuration, v328);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5247)->tDuration = v330;
    v331 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5247);
    CFlag<480>::operator=|(&v331->uFlag, &CTS_PickPocket);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5247);
  }
  v332 = CFlag<480>::operator&(&p, &v4759, &CTS_MesoGuard);
  if ( CFlag<480>::operator bool(v332) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v333 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMesoGuard_(v3649, v333);
    }
    else
    {
      v334 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMesoGuard_(v3649, v334);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMesoGuard_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMesoGuard_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5246);
    v5293 = 41;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5246) )
    {
      v4757 = operator new(0x50u);
      if ( v4757 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4757);
        v3607 = v335;
      }
      else
      {
        v3607 = 0;
      }
      v4758 = v3607;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5246, v3607);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5246);
    }
    v336 = b;
    v337 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5246);
    v338 = zmax<long>(v337->tDuration, v336);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5246)->tDuration = v338;
    v339 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5246);
    CFlag<480>::operator=|(&v339->uFlag, &CTS_MesoGuard);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5246);
  }
  v340 = CFlag<480>::operator&(&p, &v4756, &CTS_Thaw);
  if ( CFlag<480>::operator bool(v340) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v341 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nThaw_(v3649, v341);
    }
    else
    {
      v342 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nThaw_(v3649, v342);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rThaw_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tThaw_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5245);
    v5293 = 42;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5245) )
    {
      v4754 = operator new(0x50u);
      if ( v4754 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4754);
        v3606 = v343;
      }
      else
      {
        v3606 = 0;
      }
      v4755 = v3606;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5245, v3606);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5245);
    }
    v344 = b;
    v345 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5245);
    v346 = zmax<long>(v345->tDuration, v344);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5245)->tDuration = v346;
    v347 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5245);
    CFlag<480>::operator=|(&v347->uFlag, &CTS_Thaw);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5245);
  }
  v348 = CFlag<480>::operator&(&p, &v4753, &CTS_Weakness);
  if ( CFlag<480>::operator bool(v348) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v349 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWeakness_(v3649, v349);
    }
    else
    {
      v350 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWeakness_(v3649, v350);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rWeakness_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tWeakness_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5244);
    v5293 = 43;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5244) )
    {
      v4751 = operator new(0x50u);
      if ( v4751 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4751);
        v3605 = v351;
      }
      else
      {
        v3605 = 0;
      }
      v4752 = v3605;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5244, v3605);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5244);
    }
    v352 = b;
    v353 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5244);
    v354 = zmax<long>(v353->tDuration, v352);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5244)->tDuration = v354;
    v355 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5244);
    CFlag<480>::operator=|(&v355->uFlag, &CTS_Weakness);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5244);
  }
  v356 = CFlag<480>::operator&(&p, &v4750, &CTS_WeaknessMdamage);
  if ( CFlag<480>::operator bool(v356) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v357 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWeaknessMdamage_(v3649, v357);
    }
    else
    {
      v358 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWeaknessMdamage_(v3649, v358);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rWeaknessMdamage_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tWeaknessMdamage_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5243);
    v5293 = 44;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5243) )
    {
      v4748 = operator new(0x50u);
      if ( v4748 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4748);
        v3604 = v359;
      }
      else
      {
        v3604 = 0;
      }
      v4749 = v3604;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5243, v3604);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5243);
    }
    v360 = b;
    v361 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5243);
    v362 = zmax<long>(v361->tDuration, v360);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5243)->tDuration = v362;
    v363 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5243);
    CFlag<480>::operator=|(&v363->uFlag, &CTS_WeaknessMdamage);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5243);
  }
  v364 = CFlag<480>::operator&(&p, &v4747, &CTS_Curse);
  if ( CFlag<480>::operator bool(v364) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v365 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCurse_(v3649, v365);
    }
    else
    {
      v366 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCurse_(v3649, v366);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCurse_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCurse_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5242);
    v5293 = 45;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5242) )
    {
      v4745 = operator new(0x50u);
      if ( v4745 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4745);
        v3603 = v367;
      }
      else
      {
        v3603 = 0;
      }
      v4746 = v3603;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5242, v3603);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5242);
    }
    v368 = b;
    v369 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5242);
    v370 = zmax<long>(v369->tDuration, v368);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5242)->tDuration = v370;
    v371 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5242);
    CFlag<480>::operator=|(&v371->uFlag, &CTS_Curse);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5242);
  }
  v372 = CFlag<480>::operator&(&p, &v4744, &CTS_Slow);
  if ( CFlag<480>::operator bool(v372) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v373 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSlow_(v3649, v373);
    }
    else
    {
      v374 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSlow_(v3649, v374);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSlow_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSlow_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5241);
    v5293 = 46;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5241) )
    {
      v4742 = operator new(0x50u);
      if ( v4742 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4742);
        v3602 = v375;
      }
      else
      {
        v3602 = 0;
      }
      v4743 = v3602;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5241, v3602);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5241);
    }
    v376 = b;
    v377 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5241);
    v378 = zmax<long>(v377->tDuration, v376);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5241)->tDuration = v378;
    v379 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5241);
    CFlag<480>::operator=|(&v379->uFlag, &CTS_Slow);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5241);
  }
  v380 = CFlag<480>::operator&(&p, &v4741, &CTS_TimeBomb);
  if ( CFlag<480>::operator bool(v380) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v381 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTimeBomb_(v3649, v381);
    }
    else
    {
      v382 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTimeBomb_(v3649, v382);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTimeBomb_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTimeBomb_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5240);
    v5293 = 47;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5240) )
    {
      v4739 = operator new(0x50u);
      if ( v4739 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4739);
        v3601 = v383;
      }
      else
      {
        v3601 = 0;
      }
      v4740 = v3601;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5240, v3601);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5240);
    }
    v384 = b;
    v385 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5240);
    v386 = zmax<long>(v385->tDuration, v384);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5240)->tDuration = v386;
    v387 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5240);
    CFlag<480>::operator=|(&v387->uFlag, &CTS_TimeBomb);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5240);
  }
  v388 = CFlag<480>::operator&(&p, &v4738, &CTS_BuffLimit);
  if ( CFlag<480>::operator bool(v388) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v389 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBuffLimit_(v3649, v389);
    }
    else
    {
      v390 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBuffLimit_(v3649, v390);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBuffLimit_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBuffLimit_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5239);
    v5293 = 48;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5239) )
    {
      v4736 = operator new(0x50u);
      if ( v4736 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4736);
        v3600 = v391;
      }
      else
      {
        v3600 = 0;
      }
      v4737 = v3600;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5239, v3600);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5239);
    }
    v392 = b;
    v393 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5239);
    v394 = zmax<long>(v393->tDuration, v392);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5239)->tDuration = v394;
    v395 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5239);
    CFlag<480>::operator=|(&v395->uFlag, &CTS_BuffLimit);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5239);
  }
  v396 = CFlag<480>::operator&(&p, &v4735, &CTS_Team);
  if ( CFlag<480>::operator bool(v396) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v397 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTeam_(v3649, v397);
    }
    else
    {
      v398 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTeam_(v3649, v398);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTeam_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTeam_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5238);
    v5293 = 49;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5238) )
    {
      v4733 = operator new(0x50u);
      if ( v4733 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4733);
        v3599 = v399;
      }
      else
      {
        v3599 = 0;
      }
      v4734 = v3599;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5238, v3599);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5238);
    }
    v400 = b;
    v401 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5238);
    v402 = zmax<long>(v401->tDuration, v400);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5238)->tDuration = v402;
    v403 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5238);
    CFlag<480>::operator=|(&v403->uFlag, &CTS_Team);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5238);
  }
  v404 = CFlag<480>::operator&(&p, &v4732, &CTS_DisOrder);
  if ( CFlag<480>::operator bool(v404) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v405 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDisOrder_(v3649, v405);
    }
    else
    {
      v406 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDisOrder_(v3649, v406);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDisOrder_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDisOrder_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5237);
    v5293 = 50;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5237) )
    {
      v4730 = operator new(0x50u);
      if ( v4730 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4730);
        v3598 = v407;
      }
      else
      {
        v3598 = 0;
      }
      v4731 = v3598;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5237, v3598);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5237);
    }
    v408 = b;
    v409 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5237);
    v410 = zmax<long>(v409->tDuration, v408);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5237)->tDuration = v410;
    v411 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5237);
    CFlag<480>::operator=|(&v411->uFlag, &CTS_DisOrder);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5237);
  }
  v412 = CFlag<480>::operator&(&p, &v4729, &CTS_Thread);
  if ( CFlag<480>::operator bool(v412) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v413 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nThread_(v3649, v413);
    }
    else
    {
      v414 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nThread_(v3649, v414);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rThread_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tThread_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5236);
    v5293 = 51;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5236) )
    {
      v4727 = operator new(0x50u);
      if ( v4727 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4727);
        v3597 = v415;
      }
      else
      {
        v3597 = 0;
      }
      v4728 = v3597;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5236, v3597);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5236);
    }
    v416 = b;
    v417 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5236);
    v418 = zmax<long>(v417->tDuration, v416);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5236)->tDuration = v418;
    v419 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5236);
    CFlag<480>::operator=|(&v419->uFlag, &CTS_Thread);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5236);
  }
  v420 = CFlag<480>::operator&(&p, &v4726, &CTS_Morph);
  if ( CFlag<480>::operator bool(v420) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v421 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMorph_(v3649, v421);
    }
    else
    {
      v422 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMorph_(v3649, v422);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMorph_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMorph_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5235);
    v5293 = 52;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5235) )
    {
      v4724 = operator new(0x50u);
      if ( v4724 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4724);
        v3596 = v423;
      }
      else
      {
        v3596 = 0;
      }
      v4725 = v3596;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5235, v3596);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5235);
    }
    v424 = b;
    v425 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5235);
    v426 = zmax<long>(v425->tDuration, v424);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5235)->tDuration = v426;
    v427 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5235);
    CFlag<480>::operator=|(&v427->uFlag, &CTS_Morph);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5235);
  }
  v428 = CFlag<480>::operator&(&p, &v4723, &CTS_Ghost);
  if ( CFlag<480>::operator bool(v428) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v429 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGhost_(v3649, v429);
    }
    else
    {
      v430 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGhost_(v3649, v430);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rGhost_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tGhost_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5234);
    v5293 = 53;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5234) )
    {
      v4721 = operator new(0x50u);
      if ( v4721 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4721);
        v3595 = v431;
      }
      else
      {
        v3595 = 0;
      }
      v4722 = v3595;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5234, v3595);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5234);
    }
    v432 = b;
    v433 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5234);
    v434 = zmax<long>(v433->tDuration, v432);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5234)->tDuration = v434;
    v435 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5234);
    CFlag<480>::operator=|(&v435->uFlag, &CTS_Ghost);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5234);
  }
  v436 = CFlag<480>::operator&(&p, &v4720, &CTS_Regen);
  if ( CFlag<480>::operator bool(v436) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v437 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRegen_(v3649, v437);
    }
    else
    {
      v438 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRegen_(v3649, v438);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRegen_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRegen_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5233);
    v5293 = 54;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5233) )
    {
      v4718 = operator new(0x50u);
      if ( v4718 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4718);
        v3594 = v439;
      }
      else
      {
        v3594 = 0;
      }
      v4719 = v3594;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5233, v3594);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5233);
    }
    v440 = b;
    v441 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5233);
    v442 = zmax<long>(v441->tDuration, v440);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5233)->tDuration = v442;
    v443 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5233);
    CFlag<480>::operator=|(&v443->uFlag, &CTS_Regen);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5233);
  }
  v444 = CFlag<480>::operator&(&p, &v4717, &CTS_BasicStatUp);
  if ( CFlag<480>::operator bool(v444) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v445 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBasicStatUp_(v3649, v445);
    }
    else
    {
      v446 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBasicStatUp_(v3649, v446);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBasicStatUp_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBasicStatUp_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5232);
    v5293 = 55;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5232) )
    {
      v4715 = operator new(0x50u);
      if ( v4715 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4715);
        v3593 = v447;
      }
      else
      {
        v3593 = 0;
      }
      v4716 = v3593;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5232, v3593);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5232);
    }
    v448 = b;
    v449 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5232);
    v450 = zmax<long>(v449->tDuration, v448);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5232)->tDuration = v450;
    v451 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5232);
    CFlag<480>::operator=|(&v451->uFlag, &CTS_BasicStatUp);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5232);
  }
  v452 = CFlag<480>::operator&(&p, &v4714, &CTS_Stance);
  if ( CFlag<480>::operator bool(v452) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v453 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStance_(v3649, v453);
    }
    else
    {
      v454 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStance_(v3649, v454);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStance_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStance_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5231);
    v5293 = 56;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5231) )
    {
      v4712 = operator new(0x50u);
      if ( v4712 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4712);
        v3592 = v455;
      }
      else
      {
        v3592 = 0;
      }
      v4713 = v3592;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5231, v3592);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5231);
    }
    v456 = b;
    v457 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5231);
    v458 = zmax<long>(v457->tDuration, v456);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5231)->tDuration = v458;
    v459 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5231);
    CFlag<480>::operator=|(&v459->uFlag, &CTS_Stance);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5231);
  }
  v460 = CFlag<480>::operator&(&p, &v4711, &CTS_SharpEyes);
  if ( CFlag<480>::operator bool(v460) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v461 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSharpEyes_(v3649, v461);
    }
    else
    {
      v462 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSharpEyes_(v3649, v462);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSharpEyes_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSharpEyes_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5230);
    v5293 = 57;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5230) )
    {
      v4709 = operator new(0x50u);
      if ( v4709 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4709);
        v3591 = v463;
      }
      else
      {
        v3591 = 0;
      }
      v4710 = v3591;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5230, v3591);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5230);
    }
    v464 = b;
    v465 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5230);
    v466 = zmax<long>(v465->tDuration, v464);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5230)->tDuration = v466;
    v467 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5230);
    CFlag<480>::operator=|(&v467->uFlag, &CTS_SharpEyes);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5230);
  }
  v468 = CFlag<480>::operator&(&p, &v4708, &CTS_ManaReflection);
  if ( CFlag<480>::operator bool(v468) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v469 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nManaReflection_(v3649, v469);
    }
    else
    {
      v470 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nManaReflection_(v3649, v470);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rManaReflection_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tManaReflection_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5229);
    v5293 = 58;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5229) )
    {
      v4706 = operator new(0x50u);
      if ( v4706 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4706);
        v3590 = v471;
      }
      else
      {
        v3590 = 0;
      }
      v4707 = v3590;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5229, v3590);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5229);
    }
    v472 = b;
    v473 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5229);
    v474 = zmax<long>(v473->tDuration, v472);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5229)->tDuration = v474;
    v475 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5229);
    CFlag<480>::operator=|(&v475->uFlag, &CTS_ManaReflection);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5229);
  }
  v476 = CFlag<480>::operator&(&p, &v4705, &CTS_Attract);
  if ( CFlag<480>::operator bool(v476) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v477 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAttract_(v3649, v477);
    }
    else
    {
      v478 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAttract_(v3649, v478);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAttract_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAttract_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5228);
    v5293 = 59;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5228) )
    {
      v4703 = operator new(0x50u);
      if ( v4703 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4703);
        v3589 = v479;
      }
      else
      {
        v3589 = 0;
      }
      v4704 = v3589;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5228, v3589);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5228);
    }
    v480 = b;
    v481 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5228);
    v482 = zmax<long>(v481->tDuration, v480);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5228)->tDuration = v482;
    v483 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5228);
    CFlag<480>::operator=|(&v483->uFlag, &CTS_Attract);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5228);
  }
  v484 = CFlag<480>::operator&(&p, &v4702, &CTS_Magnet);
  if ( CFlag<480>::operator bool(v484) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v485 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagnet_(v3649, v485);
    }
    else
    {
      v486 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagnet_(v3649, v486);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMagnet_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMagnet_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5227);
    v5293 = 60;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5227) )
    {
      v4700 = operator new(0x50u);
      if ( v4700 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4700);
        v3588 = v487;
      }
      else
      {
        v3588 = 0;
      }
      v4701 = v3588;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5227, v3588);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5227);
    }
    v488 = b;
    v489 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5227);
    v490 = zmax<long>(v489->tDuration, v488);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5227)->tDuration = v490;
    v491 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5227);
    CFlag<480>::operator=|(&v491->uFlag, &CTS_Magnet);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5227);
  }
  v492 = CFlag<480>::operator&(&p, &v4699, &CTS_MagnetArea);
  if ( CFlag<480>::operator bool(v492) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v493 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagnetArea_(v3649, v493);
    }
    else
    {
      v494 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagnetArea_(v3649, v494);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMagnetArea_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMagnetArea_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5226);
    v5293 = 61;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5226) )
    {
      v4697 = operator new(0x50u);
      if ( v4697 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4697);
        v3587 = v495;
      }
      else
      {
        v3587 = 0;
      }
      v4698 = v3587;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5226, v3587);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5226);
    }
    v496 = b;
    v497 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5226);
    v498 = zmax<long>(v497->tDuration, v496);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5226)->tDuration = v498;
    v499 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5226);
    CFlag<480>::operator=|(&v499->uFlag, &CTS_MagnetArea);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5226);
  }
  v500 = CFlag<480>::operator&(&p, &v4696, &CTS_NoBulletConsume);
  if ( CFlag<480>::operator bool(v500) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v501 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNoBulletConsume_(v3649, v501);
    }
    else
    {
      v502 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNoBulletConsume_(v3649, v502);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNoBulletConsume_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNoBulletConsume_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5225);
    v5293 = 62;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5225) )
    {
      v4694 = operator new(0x50u);
      if ( v4694 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4694);
        v3586 = v503;
      }
      else
      {
        v3586 = 0;
      }
      v4695 = v3586;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5225, v3586);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5225);
    }
    v504 = b;
    v505 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5225);
    v506 = zmax<long>(v505->tDuration, v504);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5225)->tDuration = v506;
    v507 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5225);
    CFlag<480>::operator=|(&v507->uFlag, &CTS_NoBulletConsume);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5225);
  }
  v508 = CFlag<480>::operator&(&p, &v4693, &CTS_StackBuff);
  if ( CFlag<480>::operator bool(v508) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v509 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStackBuff_(v3649, v509);
    }
    else
    {
      v510 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStackBuff_(v3649, v510);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStackBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStackBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5224);
    v5293 = 63;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5224) )
    {
      v4691 = operator new(0x50u);
      if ( v4691 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4691);
        v3585 = v511;
      }
      else
      {
        v3585 = 0;
      }
      v4692 = v3585;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5224, v3585);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5224);
    }
    v512 = b;
    v513 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5224);
    v514 = zmax<long>(v513->tDuration, v512);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5224)->tDuration = v514;
    v515 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5224);
    CFlag<480>::operator=|(&v515->uFlag, &CTS_StackBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5224);
  }
  v516 = CFlag<480>::operator&(&p, &v4690, &CTS_Trinity);
  if ( CFlag<480>::operator bool(v516) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v517 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTrinity_(v3649, v517);
    }
    else
    {
      v518 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTrinity_(v3649, v518);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTrinity_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTrinity_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5223);
    v5293 = 64;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5223) )
    {
      v4688 = operator new(0x50u);
      if ( v4688 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4688);
        v3584 = v519;
      }
      else
      {
        v3584 = 0;
      }
      v4689 = v3584;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5223, v3584);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5223);
    }
    v520 = b;
    v521 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5223);
    v522 = zmax<long>(v521->tDuration, v520);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5223)->tDuration = v522;
    v523 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5223);
    CFlag<480>::operator=|(&v523->uFlag, &CTS_Trinity);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5223);
  }
  v524 = CFlag<480>::operator&(&p, &v4687, &CTS_Infinity);
  if ( CFlag<480>::operator bool(v524) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v525 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInfinity_(v3649, v525);
    }
    else
    {
      v526 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInfinity_(v3649, v526);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rInfinity_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tInfinity_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5222);
    v5293 = 65;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5222) )
    {
      v4685 = operator new(0x50u);
      if ( v4685 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4685);
        v3583 = v527;
      }
      else
      {
        v3583 = 0;
      }
      v4686 = v3583;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5222, v3583);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5222);
    }
    v528 = b;
    v529 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5222);
    v530 = zmax<long>(v529->tDuration, v528);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5222)->tDuration = v530;
    v531 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5222);
    CFlag<480>::operator=|(&v531->uFlag, &CTS_Infinity);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5222);
  }
  v532 = CFlag<480>::operator&(&p, &v4684, &CTS_AdvancedBless);
  if ( CFlag<480>::operator bool(v532) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v533 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAdvancedBless_(v3649, v533);
    }
    else
    {
      v534 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAdvancedBless_(v3649, v534);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAdvancedBless_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAdvancedBless_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5221);
    v5293 = 66;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5221) )
    {
      v4682 = operator new(0x50u);
      if ( v4682 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4682);
        v3582 = v535;
      }
      else
      {
        v3582 = 0;
      }
      v4683 = v3582;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5221, v3582);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5221);
    }
    v536 = b;
    v537 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5221);
    v538 = zmax<long>(v537->tDuration, v536);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5221)->tDuration = v538;
    v539 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5221);
    CFlag<480>::operator=|(&v539->uFlag, &CTS_AdvancedBless);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5221);
  }
  v540 = CFlag<480>::operator&(&p, &v4681, &CTS_IllusionStep);
  if ( CFlag<480>::operator bool(v540) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v541 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIllusionStep_(v3649, v541);
    }
    else
    {
      v542 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIllusionStep_(v3649, v542);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIllusionStep_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIllusionStep_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5220);
    v5293 = 67;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5220) )
    {
      v4679 = operator new(0x50u);
      if ( v4679 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4679);
        v3581 = v543;
      }
      else
      {
        v3581 = 0;
      }
      v4680 = v3581;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5220, v3581);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5220);
    }
    v544 = b;
    v545 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5220);
    v546 = zmax<long>(v545->tDuration, v544);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5220)->tDuration = v546;
    v547 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5220);
    CFlag<480>::operator=|(&v547->uFlag, &CTS_IllusionStep);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5220);
  }
  v548 = CFlag<480>::operator&(&p, &v4678, &CTS_Blind);
  if ( CFlag<480>::operator bool(v548) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v549 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlind_(v3649, v549);
    }
    else
    {
      v550 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlind_(v3649, v550);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBlind_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBlind_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5219);
    v5293 = 68;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5219) )
    {
      v4676 = operator new(0x50u);
      if ( v4676 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4676);
        v3580 = v551;
      }
      else
      {
        v3580 = 0;
      }
      v4677 = v3580;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5219, v3580);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5219);
    }
    v552 = b;
    v553 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5219);
    v554 = zmax<long>(v553->tDuration, v552);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5219)->tDuration = v554;
    v555 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5219);
    CFlag<480>::operator=|(&v555->uFlag, &CTS_Blind);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5219);
  }
  v556 = CFlag<480>::operator&(&p, &v4675, &CTS_Concentration);
  if ( CFlag<480>::operator bool(v556) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v557 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nConcentration_(v3649, v557);
    }
    else
    {
      v558 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nConcentration_(v3649, v558);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rConcentration_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tConcentration_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5218);
    v5293 = 69;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5218) )
    {
      v4673 = operator new(0x50u);
      if ( v4673 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4673);
        v3579 = v559;
      }
      else
      {
        v3579 = 0;
      }
      v4674 = v3579;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5218, v3579);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5218);
    }
    v560 = b;
    v561 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5218);
    v562 = zmax<long>(v561->tDuration, v560);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5218)->tDuration = v562;
    v563 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5218);
    CFlag<480>::operator=|(&v563->uFlag, &CTS_Concentration);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5218);
  }
  v564 = CFlag<480>::operator&(&p, &v4672, &CTS_BanMap);
  if ( CFlag<480>::operator bool(v564) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v565 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBanMap_(v3649, v565);
    }
    else
    {
      v566 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBanMap_(v3649, v566);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBanMap_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBanMap_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5217);
    v5293 = 70;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5217) )
    {
      v4670 = operator new(0x50u);
      if ( v4670 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4670);
        v3578 = v567;
      }
      else
      {
        v3578 = 0;
      }
      v4671 = v3578;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5217, v3578);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5217);
    }
    v568 = b;
    v569 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5217);
    v570 = zmax<long>(v569->tDuration, v568);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5217)->tDuration = v570;
    v571 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5217);
    CFlag<480>::operator=|(&v571->uFlag, &CTS_BanMap);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5217);
  }
  v572 = CFlag<480>::operator&(&p, &v4669, &CTS_MaxLevelBuff);
  if ( CFlag<480>::operator bool(v572) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v573 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMaxLevelBuff_(v3649, v573);
    }
    else
    {
      v574 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMaxLevelBuff_(v3649, v574);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMaxLevelBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMaxLevelBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5216);
    v5293 = 71;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5216) )
    {
      v4667 = operator new(0x50u);
      if ( v4667 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4667);
        v3577 = v575;
      }
      else
      {
        v3577 = 0;
      }
      v4668 = v3577;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5216, v3577);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5216);
    }
    v576 = b;
    v577 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5216);
    v578 = zmax<long>(v577->tDuration, v576);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5216)->tDuration = v578;
    v579 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5216);
    CFlag<480>::operator=|(&v579->uFlag, &CTS_MaxLevelBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5216);
  }
  v580 = CFlag<480>::operator&(&p, &v4666, &CTS_Barrier);
  if ( CFlag<480>::operator bool(v580) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v581 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBarrier_(v3649, v581);
    }
    else
    {
      v582 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBarrier_(v3649, v582);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBarrier_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBarrier_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5215);
    v5293 = 72;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5215) )
    {
      v4664 = operator new(0x50u);
      if ( v4664 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4664);
        v3576 = v583;
      }
      else
      {
        v3576 = 0;
      }
      v4665 = v3576;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5215, v3576);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5215);
    }
    v584 = b;
    v585 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5215);
    v586 = zmax<long>(v585->tDuration, v584);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5215)->tDuration = v586;
    v587 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5215);
    CFlag<480>::operator=|(&v587->uFlag, &CTS_Barrier);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5215);
  }
  v588 = CFlag<480>::operator&(&p, &v4663, &CTS_DojangShield);
  if ( CFlag<480>::operator bool(v588) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v589 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDojangShield_(v3649, v589);
    }
    else
    {
      v590 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDojangShield_(v3649, v590);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDojangShield_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDojangShield_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5214);
    v5293 = 73;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5214) )
    {
      v4661 = operator new(0x50u);
      if ( v4661 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4661);
        v3575 = v591;
      }
      else
      {
        v3575 = 0;
      }
      v4662 = v3575;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5214, v3575);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5214);
    }
    v592 = b;
    v593 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5214);
    v594 = zmax<long>(v593->tDuration, v592);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5214)->tDuration = v594;
    v595 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5214);
    CFlag<480>::operator=|(&v595->uFlag, &CTS_DojangShield);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5214);
  }
  v596 = CFlag<480>::operator&(&p, &v4660, &CTS_ReverseInput);
  if ( CFlag<480>::operator bool(v596) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v597 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReverseInput_(v3649, v597);
    }
    else
    {
      v598 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReverseInput_(v3649, v598);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rReverseInput_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tReverseInput_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5213);
    v5293 = 74;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5213) )
    {
      v4658 = operator new(0x50u);
      if ( v4658 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4658);
        v3574 = v599;
      }
      else
      {
        v3574 = 0;
      }
      v4659 = v3574;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5213, v3574);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5213);
    }
    v600 = b;
    v601 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5213);
    v602 = zmax<long>(v601->tDuration, v600);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5213)->tDuration = v602;
    v603 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5213);
    CFlag<480>::operator=|(&v603->uFlag, &CTS_ReverseInput);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5213);
  }
  v604 = CFlag<480>::operator&(&p, &v4657, &CTS_MesoUpByItem);
  if ( CFlag<480>::operator bool(v604) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v605 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMesoUpByItem_(v3649, v605);
    }
    else
    {
      v606 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMesoUpByItem_(v3649, v606);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMesoUpByItem_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMesoUpByItem_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5212);
    v5293 = 75;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5212) )
    {
      v4655 = operator new(0x50u);
      if ( v4655 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4655);
        v3573 = v607;
      }
      else
      {
        v3573 = 0;
      }
      v4656 = v3573;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5212, v3573);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5212);
    }
    v608 = b;
    v609 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5212);
    v610 = zmax<long>(v609->tDuration, v608);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5212)->tDuration = v610;
    v611 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5212);
    CFlag<480>::operator=|(&v611->uFlag, &CTS_MesoUpByItem);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5212);
  }
  v612 = CFlag<480>::operator&(&p, &v4654, &CTS_ItemUpByItem);
  if ( CFlag<480>::operator bool(v612) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v613 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nItemUpByItem_(v3649, v613);
    }
    else
    {
      v614 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nItemUpByItem_(v3649, v614);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rItemUpByItem_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tItemUpByItem_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5211);
    v5293 = 76;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5211) )
    {
      v4652 = operator new(0x50u);
      if ( v4652 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4652);
        v3572 = v615;
      }
      else
      {
        v3572 = 0;
      }
      v4653 = v3572;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5211, v3572);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5211);
    }
    v616 = b;
    v617 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5211);
    v618 = zmax<long>(v617->tDuration, v616);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5211)->tDuration = v618;
    v619 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5211);
    CFlag<480>::operator=|(&v619->uFlag, &CTS_ItemUpByItem);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5211);
  }
  v620 = CFlag<480>::operator&(&p, &v4651, &CTS_RespectPImmune);
  if ( CFlag<480>::operator bool(v620) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v621 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRespectPImmune_(v3649, v621);
    }
    else
    {
      v622 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRespectPImmune_(v3649, v622);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRespectPImmune_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRespectPImmune_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5210);
    v5293 = 77;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5210) )
    {
      v4649 = operator new(0x50u);
      if ( v4649 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4649);
        v3571 = v623;
      }
      else
      {
        v3571 = 0;
      }
      v4650 = v3571;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5210, v3571);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5210);
    }
    v624 = b;
    v625 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5210);
    v626 = zmax<long>(v625->tDuration, v624);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5210)->tDuration = v626;
    v627 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5210);
    CFlag<480>::operator=|(&v627->uFlag, &CTS_RespectPImmune);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5210);
  }
  v628 = CFlag<480>::operator&(&p, &v4648, &CTS_RespectMImmune);
  if ( CFlag<480>::operator bool(v628) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v629 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRespectMImmune_(v3649, v629);
    }
    else
    {
      v630 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRespectMImmune_(v3649, v630);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRespectMImmune_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRespectMImmune_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5209);
    v5293 = 78;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5209) )
    {
      v4646 = operator new(0x50u);
      if ( v4646 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4646);
        v3570 = v631;
      }
      else
      {
        v3570 = 0;
      }
      v4647 = v3570;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5209, v3570);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5209);
    }
    v632 = b;
    v633 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5209);
    v634 = zmax<long>(v633->tDuration, v632);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5209)->tDuration = v634;
    v635 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5209);
    CFlag<480>::operator=|(&v635->uFlag, &CTS_RespectMImmune);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5209);
  }
  v636 = CFlag<480>::operator&(&p, &v4645, &CTS_DefenseAtt);
  if ( CFlag<480>::operator bool(v636) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v637 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDefenseAtt_(v3649, v637);
    }
    else
    {
      v638 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDefenseAtt_(v3649, v638);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDefenseAtt_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDefenseAtt_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5208);
    v5293 = 79;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5208) )
    {
      v4643 = operator new(0x50u);
      if ( v4643 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4643);
        v3569 = v639;
      }
      else
      {
        v3569 = 0;
      }
      v4644 = v3569;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5208, v3569);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5208);
    }
    v640 = b;
    v641 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5208);
    v642 = zmax<long>(v641->tDuration, v640);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5208)->tDuration = v642;
    v643 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5208);
    CFlag<480>::operator=|(&v643->uFlag, &CTS_DefenseAtt);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5208);
  }
  v644 = CFlag<480>::operator&(&p, &v4642, &CTS_DefenseState);
  if ( CFlag<480>::operator bool(v644) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v645 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDefenseState_(v3649, v645);
    }
    else
    {
      v646 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDefenseState_(v3649, v646);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDefenseState_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDefenseState_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5207);
    v5293 = 80;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5207) )
    {
      v4640 = operator new(0x50u);
      if ( v4640 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4640);
        v3568 = v647;
      }
      else
      {
        v3568 = 0;
      }
      v4641 = v3568;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5207, v3568);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5207);
    }
    v648 = b;
    v649 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5207);
    v650 = zmax<long>(v649->tDuration, v648);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5207)->tDuration = v650;
    v651 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5207);
    CFlag<480>::operator=|(&v651->uFlag, &CTS_DefenseState);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5207);
  }
  v652 = CFlag<480>::operator&(&p, &v4639, &CTS_DojangBerserk);
  if ( CFlag<480>::operator bool(v652) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v653 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDojangBerserk_(v3649, v653);
    }
    else
    {
      v654 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDojangBerserk_(v3649, v654);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDojangBerserk_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDojangBerserk_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5206);
    v5293 = 81;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5206) )
    {
      v4637 = operator new(0x50u);
      if ( v4637 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4637);
        v3567 = v655;
      }
      else
      {
        v3567 = 0;
      }
      v4638 = v3567;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5206, v3567);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5206);
    }
    v656 = b;
    v657 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5206);
    v658 = zmax<long>(v657->tDuration, v656);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5206)->tDuration = v658;
    v659 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5206);
    CFlag<480>::operator=|(&v659->uFlag, &CTS_DojangBerserk);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5206);
  }
  v660 = CFlag<480>::operator&(&p, &v4636, &CTS_DojangInvincible);
  if ( CFlag<480>::operator bool(v660) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v661 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDojangInvincible_(v3649, v661);
    }
    else
    {
      v662 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDojangInvincible_(v3649, v662);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDojangInvincible_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDojangInvincible_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5205);
    v5293 = 82;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5205) )
    {
      v4634 = operator new(0x50u);
      if ( v4634 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4634);
        v3566 = v663;
      }
      else
      {
        v3566 = 0;
      }
      v4635 = v3566;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5205, v3566);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5205);
    }
    v664 = b;
    v665 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5205);
    v666 = zmax<long>(v665->tDuration, v664);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5205)->tDuration = v666;
    v667 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5205);
    CFlag<480>::operator=|(&v667->uFlag, &CTS_DojangInvincible);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5205);
  }
  v668 = CFlag<480>::operator&(&p, &v4633, &CTS_SoulMasterFinal);
  if ( CFlag<480>::operator bool(v668) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v669 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulMasterFinal_(v3649, v669);
    }
    else
    {
      v670 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulMasterFinal_(v3649, v670);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulMasterFinal_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSoulMasterFinal_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5204);
    v5293 = 83;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5204) )
    {
      v4631 = operator new(0x50u);
      if ( v4631 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4631);
        v3565 = v671;
      }
      else
      {
        v3565 = 0;
      }
      v4632 = v3565;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5204, v3565);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5204);
    }
    v672 = b;
    v673 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5204);
    v674 = zmax<long>(v673->tDuration, v672);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5204)->tDuration = v674;
    v675 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5204);
    CFlag<480>::operator=|(&v675->uFlag, &CTS_SoulMasterFinal);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5204);
  }
  v676 = CFlag<480>::operator&(&p, &v4630, &CTS_WindBreakerFinal);
  if ( CFlag<480>::operator bool(v676) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v677 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWindBreakerFinal_(v3649, v677);
    }
    else
    {
      v678 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWindBreakerFinal_(v3649, v678);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rWindBreakerFinal_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tWindBreakerFinal_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5203);
    v5293 = 84;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5203) )
    {
      v4628 = operator new(0x50u);
      if ( v4628 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4628);
        v3564 = v679;
      }
      else
      {
        v3564 = 0;
      }
      v4629 = v3564;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5203, v3564);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5203);
    }
    v680 = b;
    v681 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5203);
    v682 = zmax<long>(v681->tDuration, v680);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5203)->tDuration = v682;
    v683 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5203);
    CFlag<480>::operator=|(&v683->uFlag, &CTS_WindBreakerFinal);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5203);
  }
  v684 = CFlag<480>::operator&(&p, &v4627, &CTS_ElementalReset);
  if ( CFlag<480>::operator bool(v684) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v685 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nElementalReset_(v3649, v685);
    }
    else
    {
      v686 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nElementalReset_(v3649, v686);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rElementalReset_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tElementalReset_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5202);
    v5293 = 85;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5202) )
    {
      v4625 = operator new(0x50u);
      if ( v4625 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4625);
        v3563 = v687;
      }
      else
      {
        v3563 = 0;
      }
      v4626 = v3563;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5202, v3563);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5202);
    }
    v688 = b;
    v689 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5202);
    v690 = zmax<long>(v689->tDuration, v688);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5202)->tDuration = v690;
    v691 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5202);
    CFlag<480>::operator=|(&v691->uFlag, &CTS_ElementalReset);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5202);
  }
  v692 = CFlag<480>::operator&(&p, &v4624, &CTS_HideAttack);
  if ( CFlag<480>::operator bool(v692) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v693 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHideAttack_(v3649, v693);
    }
    else
    {
      v694 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHideAttack_(v3649, v694);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHideAttack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHideAttack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5201);
    v5293 = 86;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5201) )
    {
      v4622 = operator new(0x50u);
      if ( v4622 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4622);
        v3562 = v695;
      }
      else
      {
        v3562 = 0;
      }
      v4623 = v3562;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5201, v3562);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5201);
    }
    v696 = b;
    v697 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5201);
    v698 = zmax<long>(v697->tDuration, v696);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5201)->tDuration = v698;
    v699 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5201);
    CFlag<480>::operator=|(&v699->uFlag, &CTS_HideAttack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5201);
  }
  v700 = CFlag<480>::operator&(&p, &v4621, &CTS_EventRate);
  if ( CFlag<480>::operator bool(v700) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v701 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEventRate_(v3649, v701);
    }
    else
    {
      v702 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEventRate_(v3649, v702);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEventRate_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEventRate_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5200);
    v5293 = 87;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5200) )
    {
      v4619 = operator new(0x50u);
      if ( v4619 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4619);
        v3561 = v703;
      }
      else
      {
        v3561 = 0;
      }
      v4620 = v3561;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5200, v3561);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5200);
    }
    v704 = b;
    v705 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5200);
    v706 = zmax<long>(v705->tDuration, v704);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5200)->tDuration = v706;
    v707 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5200);
    CFlag<480>::operator=|(&v707->uFlag, &CTS_EventRate);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5200);
  }
  v708 = CFlag<480>::operator&(&p, &v4618, &CTS_ComboAbilityBuff);
  if ( CFlag<480>::operator bool(v708) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v709 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboAbilityBuff_(v3649, v709);
    }
    else
    {
      v710 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboAbilityBuff_(v3649, v710);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rComboAbilityBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tComboAbilityBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5199);
    v5293 = 88;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5199) )
    {
      v4616 = operator new(0x50u);
      if ( v4616 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4616);
        v3560 = v711;
      }
      else
      {
        v3560 = 0;
      }
      v4617 = v3560;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5199, v3560);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5199);
    }
    v712 = b;
    v713 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5199);
    v714 = zmax<long>(v713->tDuration, v712);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5199)->tDuration = v714;
    v715 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5199);
    CFlag<480>::operator=|(&v715->uFlag, &CTS_ComboAbilityBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5199);
  }
  v716 = CFlag<480>::operator&(&p, &v4615, &CTS_ComboDrain);
  if ( CFlag<480>::operator bool(v716) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v717 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboDrain_(v3649, v717);
    }
    else
    {
      v718 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboDrain_(v3649, v718);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rComboDrain_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tComboDrain_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5198);
    v5293 = 89;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5198) )
    {
      v4613 = operator new(0x50u);
      if ( v4613 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4613);
        v3559 = v719;
      }
      else
      {
        v3559 = 0;
      }
      v4614 = v3559;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5198, v3559);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5198);
    }
    v720 = b;
    v721 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5198);
    v722 = zmax<long>(v721->tDuration, v720);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5198)->tDuration = v722;
    v723 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5198);
    CFlag<480>::operator=|(&v723->uFlag, &CTS_ComboDrain);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5198);
  }
  v724 = CFlag<480>::operator&(&p, &v4612, &CTS_ComboBarrier);
  if ( CFlag<480>::operator bool(v724) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v725 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboBarrier_(v3649, v725);
    }
    else
    {
      v726 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboBarrier_(v3649, v726);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rComboBarrier_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tComboBarrier_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5197);
    v5293 = 90;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5197) )
    {
      v4610 = operator new(0x50u);
      if ( v4610 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4610);
        v3558 = v727;
      }
      else
      {
        v3558 = 0;
      }
      v4611 = v3558;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5197, v3558);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5197);
    }
    v728 = b;
    v729 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5197);
    v730 = zmax<long>(v729->tDuration, v728);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5197)->tDuration = v730;
    v731 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5197);
    CFlag<480>::operator=|(&v731->uFlag, &CTS_ComboBarrier);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5197);
  }
  v732 = CFlag<480>::operator&(&p, &v4609, &CTS_PartyBarrier);
  if ( CFlag<480>::operator bool(v732) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v733 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPartyBarrier_(v3649, v733);
    }
    else
    {
      v734 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPartyBarrier_(v3649, v734);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPartyBarrier_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPartyBarrier_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5196);
    v5293 = 91;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5196) )
    {
      v4607 = operator new(0x50u);
      if ( v4607 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4607);
        v3557 = v735;
      }
      else
      {
        v3557 = 0;
      }
      v4608 = v3557;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5196, v3557);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5196);
    }
    v736 = b;
    v737 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5196);
    v738 = zmax<long>(v737->tDuration, v736);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5196)->tDuration = v738;
    v739 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5196);
    CFlag<480>::operator=|(&v739->uFlag, &CTS_PartyBarrier);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5196);
  }
  v740 = CFlag<480>::operator&(&p, &v4606, &CTS_BodyPressure);
  if ( CFlag<480>::operator bool(v740) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v741 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBodyPressure_(v3649, v741);
    }
    else
    {
      v742 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBodyPressure_(v3649, v742);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBodyPressure_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBodyPressure_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5195);
    v5293 = 92;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5195) )
    {
      v4604 = operator new(0x50u);
      if ( v4604 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4604);
        v3556 = v743;
      }
      else
      {
        v3556 = 0;
      }
      v4605 = v3556;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5195, v3556);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5195);
    }
    v744 = b;
    v745 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5195);
    v746 = zmax<long>(v745->tDuration, v744);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5195)->tDuration = v746;
    v747 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5195);
    CFlag<480>::operator=|(&v747->uFlag, &CTS_BodyPressure);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5195);
  }
  v748 = CFlag<480>::operator&(&p, &v4603, &CTS_RepeatEffect);
  if ( CFlag<480>::operator bool(v748) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v749 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRepeatEffect_(v3649, v749);
    }
    else
    {
      v750 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRepeatEffect_(v3649, v750);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRepeatEffect_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRepeatEffect_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5194);
    v5293 = 93;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5194) )
    {
      v4601 = operator new(0x50u);
      if ( v4601 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4601);
        v3555 = v751;
      }
      else
      {
        v3555 = 0;
      }
      v4602 = v3555;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5194, v3555);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5194);
    }
    v752 = b;
    v753 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5194);
    v754 = zmax<long>(v753->tDuration, v752);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5194)->tDuration = v754;
    v755 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5194);
    CFlag<480>::operator=|(&v755->uFlag, &CTS_RepeatEffect);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5194);
  }
  v756 = CFlag<480>::operator&(&p, &v4600, &CTS_ExpBuffRate);
  if ( CFlag<480>::operator bool(v756) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v757 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExpBuffRate_(v3649, v757);
    }
    else
    {
      v758 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExpBuffRate_(v3649, v758);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rExpBuffRate_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tExpBuffRate_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5193);
    v5293 = 94;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5193) )
    {
      v4598 = operator new(0x50u);
      if ( v4598 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4598);
        v3554 = v759;
      }
      else
      {
        v3554 = 0;
      }
      v4599 = v3554;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5193, v3554);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5193);
    }
    v760 = b;
    v761 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5193);
    v762 = zmax<long>(v761->tDuration, v760);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5193)->tDuration = v762;
    v763 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5193);
    CFlag<480>::operator=|(&v763->uFlag, &CTS_ExpBuffRate);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5193);
  }
  v764 = CFlag<480>::operator&(&p, &v4597, &CTS_StopPortion);
  if ( CFlag<480>::operator bool(v764) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v765 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStopPortion_(v3649, v765);
    }
    else
    {
      v766 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStopPortion_(v3649, v766);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStopPortion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStopPortion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5192);
    v5293 = 95;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5192) )
    {
      v4595 = operator new(0x50u);
      if ( v4595 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4595);
        v3553 = v767;
      }
      else
      {
        v3553 = 0;
      }
      v4596 = v3553;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5192, v3553);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5192);
    }
    v768 = b;
    v769 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5192);
    v770 = zmax<long>(v769->tDuration, v768);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5192)->tDuration = v770;
    v771 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5192);
    CFlag<480>::operator=|(&v771->uFlag, &CTS_StopPortion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5192);
  }
  v772 = CFlag<480>::operator&(&p, &v4594, &CTS_StopMotion);
  if ( CFlag<480>::operator bool(v772) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v773 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStopMotion_(v3649, v773);
    }
    else
    {
      v774 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStopMotion_(v3649, v774);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStopMotion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStopMotion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5191);
    v5293 = 96;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5191) )
    {
      v4592 = operator new(0x50u);
      if ( v4592 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4592);
        v3552 = v775;
      }
      else
      {
        v3552 = 0;
      }
      v4593 = v3552;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5191, v3552);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5191);
    }
    v776 = b;
    v777 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5191);
    v778 = zmax<long>(v777->tDuration, v776);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5191)->tDuration = v778;
    v779 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5191);
    CFlag<480>::operator=|(&v779->uFlag, &CTS_StopMotion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5191);
  }
  v780 = CFlag<480>::operator&(&p, &v4591, &CTS_Fear);
  if ( CFlag<480>::operator bool(v780) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v781 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFear_(v3649, v781);
    }
    else
    {
      v782 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFear_(v3649, v782);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFear_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFear_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5190);
    v5293 = 97;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5190) )
    {
      v4589 = operator new(0x50u);
      if ( v4589 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4589);
        v3551 = v783;
      }
      else
      {
        v3551 = 0;
      }
      v4590 = v3551;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5190, v3551);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5190);
    }
    v784 = b;
    v785 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5190);
    v786 = zmax<long>(v785->tDuration, v784);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5190)->tDuration = v786;
    v787 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5190);
    CFlag<480>::operator=|(&v787->uFlag, &CTS_Fear);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5190);
  }
  v788 = CFlag<480>::operator&(&p, &v4588, &CTS_MagicShield);
  if ( CFlag<480>::operator bool(v788) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v789 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagicShield_(v3649, v789);
    }
    else
    {
      v790 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagicShield_(v3649, v790);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMagicShield_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMagicShield_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5189);
    v5293 = 98;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5189) )
    {
      v4586 = operator new(0x50u);
      if ( v4586 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4586);
        v3550 = v791;
      }
      else
      {
        v3550 = 0;
      }
      v4587 = v3550;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5189, v3550);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5189);
    }
    v792 = b;
    v793 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5189);
    v794 = zmax<long>(v793->tDuration, v792);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5189)->tDuration = v794;
    v795 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5189);
    CFlag<480>::operator=|(&v795->uFlag, &CTS_MagicShield);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5189);
  }
  v796 = CFlag<480>::operator&(&p, &v4585, &CTS_MagicResistance);
  if ( CFlag<480>::operator bool(v796) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v797 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagicResistance_(v3649, v797);
    }
    else
    {
      v798 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMagicResistance_(v3649, v798);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMagicResistance_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMagicResistance_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5188);
    v5293 = 99;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5188) )
    {
      v4583 = operator new(0x50u);
      if ( v4583 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4583);
        v3549 = v799;
      }
      else
      {
        v3549 = 0;
      }
      v4584 = v3549;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5188, v3549);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5188);
    }
    v800 = b;
    v801 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5188);
    v802 = zmax<long>(v801->tDuration, v800);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5188)->tDuration = v802;
    v803 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5188);
    CFlag<480>::operator=|(&v803->uFlag, &CTS_MagicResistance);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5188);
  }
  v804 = CFlag<480>::operator&(&p, &v4582, &CTS_SoulStone);
  if ( CFlag<480>::operator bool(v804) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v805 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulStone_(v3649, v805);
    }
    else
    {
      v806 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulStone_(v3649, v806);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulStone_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSoulStone_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5187);
    v5293 = 100;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5187) )
    {
      v4580 = operator new(0x50u);
      if ( v4580 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4580);
        v3548 = v807;
      }
      else
      {
        v3548 = 0;
      }
      v4581 = v3548;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5187, v3548);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5187);
    }
    v808 = b;
    v809 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5187);
    v810 = zmax<long>(v809->tDuration, v808);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5187)->tDuration = v810;
    v811 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5187);
    CFlag<480>::operator=|(&v811->uFlag, &CTS_SoulStone);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5187);
  }
  v812 = CFlag<480>::operator&(&p, &v4579, &CTS_Flying);
  if ( CFlag<480>::operator bool(v812) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v813 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFlying_(v3649, v813);
    }
    else
    {
      v814 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFlying_(v3649, v814);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFlying_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFlying_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5186);
    v5293 = 101;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5186) )
    {
      v4577 = operator new(0x50u);
      if ( v4577 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4577);
        v3547 = v815;
      }
      else
      {
        v3547 = 0;
      }
      v4578 = v3547;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5186, v3547);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5186);
    }
    v816 = b;
    v817 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5186);
    v818 = zmax<long>(v817->tDuration, v816);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5186)->tDuration = v818;
    v819 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5186);
    CFlag<480>::operator=|(&v819->uFlag, &CTS_Flying);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5186);
  }
  v820 = CFlag<480>::operator&(&p, &v4576, &CTS_NewFlying);
  if ( CFlag<480>::operator bool(v820) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v821 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNewFlying_(v3649, v821);
    }
    else
    {
      v822 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNewFlying_(v3649, v822);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNewFlying_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNewFlying_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5185);
    v5293 = 102;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5185) )
    {
      v4574 = operator new(0x50u);
      if ( v4574 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4574);
        v3546 = v823;
      }
      else
      {
        v3546 = 0;
      }
      v4575 = v3546;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5185, v3546);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5185);
    }
    v824 = b;
    v825 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5185);
    v826 = zmax<long>(v825->tDuration, v824);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5185)->tDuration = v826;
    v827 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5185);
    CFlag<480>::operator=|(&v827->uFlag, &CTS_NewFlying);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5185);
  }
  v828 = CFlag<480>::operator&(&p, &v4573, &CTS_NaviFlying);
  if ( CFlag<480>::operator bool(v828) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v829 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNaviFlying_(v3649, v829);
    }
    else
    {
      v830 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNaviFlying_(v3649, v830);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNaviFlying_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNaviFlying_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5184);
    v5293 = 103;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5184) )
    {
      v4571 = operator new(0x50u);
      if ( v4571 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4571);
        v3545 = v831;
      }
      else
      {
        v3545 = 0;
      }
      v4572 = v3545;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5184, v3545);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5184);
    }
    v832 = b;
    v833 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5184);
    v834 = zmax<long>(v833->tDuration, v832);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5184)->tDuration = v834;
    v835 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5184);
    CFlag<480>::operator=|(&v835->uFlag, &CTS_NaviFlying);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5184);
  }
  v836 = CFlag<480>::operator&(&p, &v4570, &CTS_Frozen);
  if ( CFlag<480>::operator bool(v836) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v837 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFrozen_(v3649, v837);
    }
    else
    {
      v838 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFrozen_(v3649, v838);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFrozen_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFrozen_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5183);
    v5293 = 104;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5183) )
    {
      v4568 = operator new(0x50u);
      if ( v4568 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4568);
        v3544 = v839;
      }
      else
      {
        v3544 = 0;
      }
      v4569 = v3544;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5183, v3544);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5183);
    }
    v840 = b;
    v841 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5183);
    v842 = zmax<long>(v841->tDuration, v840);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5183)->tDuration = v842;
    v843 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5183);
    CFlag<480>::operator=|(&v843->uFlag, &CTS_Frozen);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5183);
  }
  v844 = CFlag<480>::operator&(&p, &v4567, &CTS_Frozen2);
  if ( CFlag<480>::operator bool(v844) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v845 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFrozen2_(v3649, v845);
    }
    else
    {
      v846 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFrozen2_(v3649, v846);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFrozen2_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFrozen2_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5182);
    v5293 = 105;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5182) )
    {
      v4565 = operator new(0x50u);
      if ( v4565 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4565);
        v3543 = v847;
      }
      else
      {
        v3543 = 0;
      }
      v4566 = v3543;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5182, v3543);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5182);
    }
    v848 = b;
    v849 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5182);
    v850 = zmax<long>(v849->tDuration, v848);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5182)->tDuration = v850;
    v851 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5182);
    CFlag<480>::operator=|(&v851->uFlag, &CTS_Frozen2);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5182);
  }
  v852 = CFlag<480>::operator&(&p, &v4564, &CTS_Web);
  if ( CFlag<480>::operator bool(v852) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v853 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWeb_(v3649, v853);
    }
    else
    {
      v854 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWeb_(v3649, v854);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rWeb_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tWeb_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5181);
    v5293 = 106;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5181) )
    {
      v4562 = operator new(0x50u);
      if ( v4562 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4562);
        v3542 = v855;
      }
      else
      {
        v3542 = 0;
      }
      v4563 = v3542;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5181, v3542);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5181);
    }
    v856 = b;
    v857 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5181);
    v858 = zmax<long>(v857->tDuration, v856);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5181)->tDuration = v858;
    v859 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5181);
    CFlag<480>::operator=|(&v859->uFlag, &CTS_Web);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5181);
  }
  v860 = CFlag<480>::operator&(&p, &v4561, &CTS_Enrage);
  if ( CFlag<480>::operator bool(v860) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v861 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEnrage_(v3649, v861);
    }
    else
    {
      v862 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEnrage_(v3649, v862);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEnrage_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEnrage_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5180);
    v5293 = 107;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5180) )
    {
      v4559 = operator new(0x50u);
      if ( v4559 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4559);
        v3541 = v863;
      }
      else
      {
        v3541 = 0;
      }
      v4560 = v3541;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5180, v3541);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5180);
    }
    v864 = b;
    v865 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5180);
    v866 = zmax<long>(v865->tDuration, v864);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5180)->tDuration = v866;
    v867 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5180);
    CFlag<480>::operator=|(&v867->uFlag, &CTS_Enrage);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5180);
  }
  v868 = CFlag<480>::operator&(&p, &v4558, &CTS_NotDamaged);
  if ( CFlag<480>::operator bool(v868) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v869 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNotDamaged_(v3649, v869);
    }
    else
    {
      v870 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNotDamaged_(v3649, v870);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNotDamaged_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNotDamaged_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5179);
    v5293 = 108;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5179) )
    {
      v4556 = operator new(0x50u);
      if ( v4556 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4556);
        v3540 = v871;
      }
      else
      {
        v3540 = 0;
      }
      v4557 = v3540;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5179, v3540);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5179);
    }
    v872 = b;
    v873 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5179);
    v874 = zmax<long>(v873->tDuration, v872);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5179)->tDuration = v874;
    v875 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5179);
    CFlag<480>::operator=|(&v875->uFlag, &CTS_NotDamaged);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5179);
  }
  v876 = CFlag<480>::operator&(&p, &v4555, &CTS_FinalCut);
  if ( CFlag<480>::operator bool(v876) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v877 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFinalCut_(v3649, v877);
    }
    else
    {
      v878 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFinalCut_(v3649, v878);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFinalCut_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFinalCut_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5178);
    v5293 = 109;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5178) )
    {
      v4553 = operator new(0x50u);
      if ( v4553 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4553);
        v3539 = v879;
      }
      else
      {
        v3539 = 0;
      }
      v4554 = v3539;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5178, v3539);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5178);
    }
    v880 = b;
    v881 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5178);
    v882 = zmax<long>(v881->tDuration, v880);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5178)->tDuration = v882;
    v883 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5178);
    CFlag<480>::operator=|(&v883->uFlag, &CTS_FinalCut);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5178);
  }
  v884 = CFlag<480>::operator&(&p, &v4552, &CTS_HowlingAttackDamage);
  if ( CFlag<480>::operator bool(v884) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v885 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingAttackDamage_(v3649, v885);
    }
    else
    {
      v886 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingAttackDamage_(v3649, v886);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHowlingAttackDamage_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHowlingAttackDamage_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5177);
    v5293 = 110;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5177) )
    {
      v4550 = operator new(0x50u);
      if ( v4550 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4550);
        v3538 = v887;
      }
      else
      {
        v3538 = 0;
      }
      v4551 = v3538;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5177, v3538);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5177);
    }
    v888 = b;
    v889 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5177);
    v890 = zmax<long>(v889->tDuration, v888);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5177)->tDuration = v890;
    v891 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5177);
    CFlag<480>::operator=|(&v891->uFlag, &CTS_HowlingAttackDamage);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5177);
  }
  v892 = CFlag<480>::operator&(&p, &v4549, &CTS_BeastFormDamageUp);
  if ( CFlag<480>::operator bool(v892) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v893 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBeastFormDamageUp_(v3649, v893);
    }
    else
    {
      v894 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBeastFormDamageUp_(v3649, v894);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBeastFormDamageUp_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBeastFormDamageUp_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5176);
    v5293 = 111;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5176) )
    {
      v4547 = operator new(0x50u);
      if ( v4547 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4547);
        v3537 = v895;
      }
      else
      {
        v3537 = 0;
      }
      v4548 = v3537;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5176, v3537);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5176);
    }
    v896 = b;
    v897 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5176);
    v898 = zmax<long>(v897->tDuration, v896);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5176)->tDuration = v898;
    v899 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5176);
    CFlag<480>::operator=|(&v899->uFlag, &CTS_BeastFormDamageUp);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5176);
  }
  v900 = CFlag<480>::operator&(&p, &v4546, &CTS_Dance);
  if ( CFlag<480>::operator bool(v900) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v901 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDance_(v3649, v901);
    }
    else
    {
      v902 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDance_(v3649, v902);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDance_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDance_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5175);
    v5293 = 112;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5175) )
    {
      v4544 = operator new(0x50u);
      if ( v4544 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4544);
        v3536 = v903;
      }
      else
      {
        v3536 = 0;
      }
      v4545 = v3536;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5175, v3536);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5175);
    }
    v904 = b;
    v905 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5175);
    v906 = zmax<long>(v905->tDuration, v904);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5175)->tDuration = v906;
    v907 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5175);
    CFlag<480>::operator=|(&v907->uFlag, &CTS_Dance);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5175);
  }
  v908 = CFlag<480>::operator&(&p, &v4543, &CTS_Cyclone);
  if ( CFlag<480>::operator bool(v908) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v909 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCyclone_(v3649, v909);
    }
    else
    {
      v910 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCyclone_(v3649, v910);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCyclone_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCyclone_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5174);
    v5293 = 113;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5174) )
    {
      v4541 = operator new(0x50u);
      if ( v4541 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4541);
        v3535 = v911;
      }
      else
      {
        v3535 = 0;
      }
      v4542 = v3535;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5174, v3535);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5174);
    }
    v912 = b;
    v913 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5174);
    v914 = zmax<long>(v913->tDuration, v912);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5174)->tDuration = v914;
    v915 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5174);
    CFlag<480>::operator=|(&v915->uFlag, &CTS_Cyclone);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5174);
  }
  v916 = CFlag<480>::operator&(&p, &v4540, &CTS_OnCapsule);
  if ( CFlag<480>::operator bool(v916) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v917 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nOnCapsule_(v3649, v917);
    }
    else
    {
      v918 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nOnCapsule_(v3649, v918);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rOnCapsule_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tOnCapsule_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5173);
    v5293 = 114;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5173) )
    {
      v4538 = operator new(0x50u);
      if ( v4538 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4538);
        v3534 = v919;
      }
      else
      {
        v3534 = 0;
      }
      v4539 = v3534;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5173, v3534);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5173);
    }
    v920 = b;
    v921 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5173);
    v922 = zmax<long>(v921->tDuration, v920);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5173)->tDuration = v922;
    v923 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5173);
    CFlag<480>::operator=|(&v923->uFlag, &CTS_OnCapsule);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5173);
  }
  v924 = CFlag<480>::operator&(&p, &v4537, &CTS_HowlingCritical);
  if ( CFlag<480>::operator bool(v924) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v925 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingCritical_(v3649, v925);
    }
    else
    {
      v926 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingCritical_(v3649, v926);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHowlingCritical_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHowlingCritical_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5172);
    v5293 = 115;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5172) )
    {
      v4535 = operator new(0x50u);
      if ( v4535 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4535);
        v3533 = v927;
      }
      else
      {
        v3533 = 0;
      }
      v4536 = v3533;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5172, v3533);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5172);
    }
    v928 = b;
    v929 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5172);
    v930 = zmax<long>(v929->tDuration, v928);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5172)->tDuration = v930;
    v931 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5172);
    CFlag<480>::operator=|(&v931->uFlag, &CTS_HowlingCritical);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5172);
  }
  v932 = CFlag<480>::operator&(&p, &v4534, &CTS_HowlingMaxMP);
  if ( CFlag<480>::operator bool(v932) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v933 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingMaxMP_(v3649, v933);
    }
    else
    {
      v934 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingMaxMP_(v3649, v934);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHowlingMaxMP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHowlingMaxMP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5171);
    v5293 = 116;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5171) )
    {
      v4532 = operator new(0x50u);
      if ( v4532 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4532);
        v3532 = v935;
      }
      else
      {
        v3532 = 0;
      }
      v4533 = v3532;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5171, v3532);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5171);
    }
    v936 = b;
    v937 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5171);
    v938 = zmax<long>(v937->tDuration, v936);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5171)->tDuration = v938;
    v939 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5171);
    CFlag<480>::operator=|(&v939->uFlag, &CTS_HowlingMaxMP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5171);
  }
  v940 = CFlag<480>::operator&(&p, &v4531, &CTS_HowlingDefence);
  if ( CFlag<480>::operator bool(v940) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v941 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingDefence_(v3649, v941);
    }
    else
    {
      v942 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingDefence_(v3649, v942);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHowlingDefence_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHowlingDefence_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5170);
    v5293 = 117;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5170) )
    {
      v4529 = operator new(0x50u);
      if ( v4529 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4529);
        v3531 = v943;
      }
      else
      {
        v3531 = 0;
      }
      v4530 = v3531;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5170, v3531);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5170);
    }
    v944 = b;
    v945 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5170);
    v946 = zmax<long>(v945->tDuration, v944);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5170)->tDuration = v946;
    v947 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5170);
    CFlag<480>::operator=|(&v947->uFlag, &CTS_HowlingDefence);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5170);
  }
  v948 = CFlag<480>::operator&(&p, &v4528, &CTS_HowlingEvasion);
  if ( CFlag<480>::operator bool(v948) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v949 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingEvasion_(v3649, v949);
    }
    else
    {
      v950 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHowlingEvasion_(v3649, v950);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHowlingEvasion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHowlingEvasion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5169);
    v5293 = 118;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5169) )
    {
      v4526 = operator new(0x50u);
      if ( v4526 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4526);
        v3530 = v951;
      }
      else
      {
        v3530 = 0;
      }
      v4527 = v3530;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5169, v3530);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5169);
    }
    v952 = b;
    v953 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5169);
    v954 = zmax<long>(v953->tDuration, v952);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5169)->tDuration = v954;
    v955 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5169);
    CFlag<480>::operator=|(&v955->uFlag, &CTS_HowlingEvasion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5169);
  }
  v956 = CFlag<480>::operator&(&p, &v4525, &CTS_Conversion);
  if ( CFlag<480>::operator bool(v956) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v957 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nConversion_(v3649, v957);
    }
    else
    {
      v958 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nConversion_(v3649, v958);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rConversion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tConversion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5168);
    v5293 = 119;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5168) )
    {
      v4523 = operator new(0x50u);
      if ( v4523 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4523);
        v3529 = v959;
      }
      else
      {
        v3529 = 0;
      }
      v4524 = v3529;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5168, v3529);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5168);
    }
    v960 = b;
    v961 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5168);
    v962 = zmax<long>(v961->tDuration, v960);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5168)->tDuration = v962;
    v963 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5168);
    CFlag<480>::operator=|(&v963->uFlag, &CTS_Conversion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5168);
  }
  v964 = CFlag<480>::operator&(&p, &v4522, &CTS_Revive);
  if ( CFlag<480>::operator bool(v964) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v965 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRevive_(v3649, v965);
    }
    else
    {
      v966 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRevive_(v3649, v966);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRevive_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRevive_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5167);
    v5293 = 120;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5167) )
    {
      v4520 = operator new(0x50u);
      if ( v4520 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4520);
        v3528 = v967;
      }
      else
      {
        v3528 = 0;
      }
      v4521 = v3528;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5167, v3528);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5167);
    }
    v968 = b;
    v969 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5167);
    v970 = zmax<long>(v969->tDuration, v968);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5167)->tDuration = v970;
    v971 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5167);
    CFlag<480>::operator=|(&v971->uFlag, &CTS_Revive);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5167);
  }
  v972 = CFlag<480>::operator&(&p, &v4519, &CTS_PinkbeanMinibeenMove);
  if ( CFlag<480>::operator bool(v972) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v973 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPinkbeanMinibeenMove_(v3649, v973);
    }
    else
    {
      v974 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPinkbeanMinibeenMove_(v3649, v974);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPinkbeanMinibeenMove_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPinkbeanMinibeenMove_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5166);
    v5293 = 121;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5166) )
    {
      v4517 = operator new(0x50u);
      if ( v4517 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4517);
        v3527 = v975;
      }
      else
      {
        v3527 = 0;
      }
      v4518 = v3527;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5166, v3527);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5166);
    }
    v976 = b;
    v977 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5166);
    v978 = zmax<long>(v977->tDuration, v976);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5166)->tDuration = v978;
    v979 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5166);
    CFlag<480>::operator=|(&v979->uFlag, &CTS_PinkbeanMinibeenMove);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5166);
  }
  v980 = CFlag<480>::operator&(&p, &v4516, &CTS_Sneak);
  if ( CFlag<480>::operator bool(v980) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v981 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSneak_(v3649, v981);
    }
    else
    {
      v982 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSneak_(v3649, v982);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSneak_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSneak_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5165);
    v5293 = 122;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5165) )
    {
      v4514 = operator new(0x50u);
      if ( v4514 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4514);
        v3526 = v983;
      }
      else
      {
        v3526 = 0;
      }
      v4515 = v3526;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5165, v3526);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5165);
    }
    v984 = b;
    v985 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5165);
    v986 = zmax<long>(v985->tDuration, v984);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5165)->tDuration = v986;
    v987 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5165);
    CFlag<480>::operator=|(&v987->uFlag, &CTS_Sneak);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5165);
  }
  v988 = CFlag<480>::operator&(&p, &v4513, &CTS_Mechanic);
  if ( CFlag<480>::operator bool(v988) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v989 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMechanic_(v3649, v989);
    }
    else
    {
      v990 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMechanic_(v3649, v990);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMechanic_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMechanic_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5164);
    v5293 = 123;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5164) )
    {
      v4511 = operator new(0x50u);
      if ( v4511 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4511);
        v3525 = v991;
      }
      else
      {
        v3525 = 0;
      }
      v4512 = v3525;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5164, v3525);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5164);
    }
    v992 = b;
    v993 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5164);
    v994 = zmax<long>(v993->tDuration, v992);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5164)->tDuration = v994;
    v995 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5164);
    CFlag<480>::operator=|(&v995->uFlag, &CTS_Mechanic);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5164);
  }
  v996 = CFlag<480>::operator&(&p, &v4510, &CTS_DrawBack);
  if ( CFlag<480>::operator bool(v996) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v997 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDrawBack_(v3649, v997);
    }
    else
    {
      v998 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDrawBack_(v3649, v998);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDrawBack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDrawBack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5163);
    v5293 = 124;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5163) )
    {
      v4508 = operator new(0x50u);
      if ( v4508 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4508);
        v3524 = v999;
      }
      else
      {
        v3524 = 0;
      }
      v4509 = v3524;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5163, v3524);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5163);
    }
    v1000 = b;
    v1001 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5163);
    v1002 = zmax<long>(v1001->tDuration, v1000);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5163)->tDuration = v1002;
    v1003 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5163);
    CFlag<480>::operator=|(&v1003->uFlag, &CTS_DrawBack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5163);
  }
  v1004 = CFlag<480>::operator&(&p, &v4507, &CTS_BeastFormMaxHP);
  if ( CFlag<480>::operator bool(v1004) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1005 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBeastFormMaxHP_(v3649, v1005);
    }
    else
    {
      v1006 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBeastFormMaxHP_(v3649, v1006);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBeastFormMaxHP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBeastFormMaxHP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5162);
    v5293 = 125;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5162) )
    {
      v4505 = operator new(0x50u);
      if ( v4505 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4505);
        v3523 = v1007;
      }
      else
      {
        v3523 = 0;
      }
      v4506 = v3523;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5162, v3523);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5162);
    }
    v1008 = b;
    v1009 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5162);
    v1010 = zmax<long>(v1009->tDuration, v1008);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5162)->tDuration = v1010;
    v1011 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5162);
    CFlag<480>::operator=|(&v1011->uFlag, &CTS_BeastFormMaxHP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5162);
  }
  v1012 = CFlag<480>::operator&(&p, &v4504, &CTS_Dice);
  if ( CFlag<480>::operator bool(v1012) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1013 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDice_(v3649, v1013);
    }
    else
    {
      v1014 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDice_(v3649, v1014);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDice_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDice_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5161);
    v5293 = 126;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5161) )
    {
      v4502 = operator new(0x50u);
      if ( v4502 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4502);
        v3522 = v1015;
      }
      else
      {
        v3522 = 0;
      }
      v4503 = v3522;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5161, v3522);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5161);
    }
    v1016 = b;
    v1017 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5161);
    v1018 = zmax<long>(v1017->tDuration, v1016);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5161)->tDuration = v1018;
    v1019 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5161);
    CFlag<480>::operator=|(&v1019->uFlag, &CTS_Dice);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5161);
  }
  v1020 = CFlag<480>::operator&(&p, &v4501, &CTS_BlessingArmor);
  if ( CFlag<480>::operator bool(v1020) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1021 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlessingArmor_(v3649, v1021);
    }
    else
    {
      v1022 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlessingArmor_(v3649, v1022);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBlessingArmor_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBlessingArmor_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5160);
    v5293 = 127;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5160) )
    {
      v4499 = operator new(0x50u);
      if ( v4499 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4499);
        v3521 = v1023;
      }
      else
      {
        v3521 = 0;
      }
      v4500 = v3521;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5160, v3521);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5160);
    }
    v1024 = b;
    v1025 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5160);
    v1026 = zmax<long>(v1025->tDuration, v1024);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5160)->tDuration = v1026;
    v1027 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5160);
    CFlag<480>::operator=|(&v1027->uFlag, &CTS_BlessingArmor);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5160);
  }
  v1028 = CFlag<480>::operator&(&p, &v4498, &CTS_BlessingArmorIncPAD);
  if ( CFlag<480>::operator bool(v1028) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1029 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlessingArmorIncPAD_(v3649, v1029);
    }
    else
    {
      v1030 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlessingArmorIncPAD_(v3649, v1030);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBlessingArmorIncPAD_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBlessingArmorIncPAD_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5159);
    v5293 = 128;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5159) )
    {
      v4496 = operator new(0x50u);
      if ( v4496 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4496);
        v3520 = v1031;
      }
      else
      {
        v3520 = 0;
      }
      v4497 = v3520;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5159, v3520);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5159);
    }
    v1032 = b;
    v1033 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5159);
    v1034 = zmax<long>(v1033->tDuration, v1032);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5159)->tDuration = v1034;
    v1035 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5159);
    CFlag<480>::operator=|(&v1035->uFlag, &CTS_BlessingArmorIncPAD);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5159);
  }
  v1036 = CFlag<480>::operator&(&p, &v4495, &CTS_DamR);
  if ( CFlag<480>::operator bool(v1036) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1037 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDamR_(v3649, v1037);
    }
    else
    {
      v1038 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDamR_(v3649, v1038);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDamR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDamR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5158);
    v5293 = 129;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5158) )
    {
      v4493 = operator new(0x50u);
      if ( v4493 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4493);
        v3519 = v1039;
      }
      else
      {
        v3519 = 0;
      }
      v4494 = v3519;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5158, v3519);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5158);
    }
    v1040 = b;
    v1041 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5158);
    v1042 = zmax<long>(v1041->tDuration, v1040);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5158)->tDuration = v1042;
    v1043 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5158);
    CFlag<480>::operator=|(&v1043->uFlag, &CTS_DamR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5158);
  }
  v1044 = CFlag<480>::operator&(&p, &v4492, &CTS_TeleportMasteryOn);
  if ( CFlag<480>::operator bool(v1044) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1045 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTeleportMasteryOn_(v3649, v1045);
    }
    else
    {
      v1046 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTeleportMasteryOn_(v3649, v1046);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTeleportMasteryOn_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTeleportMasteryOn_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5157);
    v5293 = 130;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5157) )
    {
      v4490 = operator new(0x50u);
      if ( v4490 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4490);
        v3518 = v1047;
      }
      else
      {
        v3518 = 0;
      }
      v4491 = v3518;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5157, v3518);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5157);
    }
    v1048 = b;
    v1049 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5157);
    v1050 = zmax<long>(v1049->tDuration, v1048);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5157)->tDuration = v1050;
    v1051 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5157);
    CFlag<480>::operator=|(&v1051->uFlag, &CTS_TeleportMasteryOn);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5157);
  }
  v1052 = CFlag<480>::operator&(&p, &v4489, &CTS_CombatOrders);
  if ( CFlag<480>::operator bool(v1052) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1053 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCombatOrders_(v3649, v1053);
    }
    else
    {
      v1054 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCombatOrders_(v3649, v1054);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCombatOrders_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCombatOrders_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5156);
    v5293 = 131;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5156) )
    {
      v4487 = operator new(0x50u);
      if ( v4487 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4487);
        v3517 = v1055;
      }
      else
      {
        v3517 = 0;
      }
      v4488 = v3517;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5156, v3517);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5156);
    }
    v1056 = b;
    v1057 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5156);
    v1058 = zmax<long>(v1057->tDuration, v1056);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5156)->tDuration = v1058;
    v1059 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5156);
    CFlag<480>::operator=|(&v1059->uFlag, &CTS_CombatOrders);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5156);
  }
  v1060 = CFlag<480>::operator&(&p, &v4486, &CTS_Beholder);
  if ( CFlag<480>::operator bool(v1060) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1061 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBeholder_(v3649, v1061);
    }
    else
    {
      v1062 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBeholder_(v3649, v1062);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBeholder_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBeholder_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5155);
    v5293 = 132;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5155) )
    {
      v4484 = operator new(0x50u);
      if ( v4484 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4484);
        v3516 = v1063;
      }
      else
      {
        v3516 = 0;
      }
      v4485 = v3516;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5155, v3516);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5155);
    }
    v1064 = b;
    v1065 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5155);
    v1066 = zmax<long>(v1065->tDuration, v1064);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5155)->tDuration = v1066;
    v1067 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5155);
    CFlag<480>::operator=|(&v1067->uFlag, &CTS_Beholder);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5155);
  }
  v1068 = CFlag<480>::operator&(&p, &v4483, &CTS_DispelItemOption);
  if ( CFlag<480>::operator bool(v1068) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1069 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDispelItemOption_(v3649, v1069);
    }
    else
    {
      v1070 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDispelItemOption_(v3649, v1070);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDispelItemOption_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDispelItemOption_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5154);
    v5293 = 133;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5154) )
    {
      v4481 = operator new(0x50u);
      if ( v4481 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4481);
        v3515 = v1071;
      }
      else
      {
        v3515 = 0;
      }
      v4482 = v3515;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5154, v3515);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5154);
    }
    v1072 = b;
    v1073 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5154);
    v1074 = zmax<long>(v1073->tDuration, v1072);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5154)->tDuration = v1074;
    v1075 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5154);
    CFlag<480>::operator=|(&v1075->uFlag, &CTS_DispelItemOption);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5154);
  }
  v1076 = CFlag<480>::operator&(&p, &v4480, &CTS_DispelItemOptionByField);
  if ( CFlag<480>::operator bool(v1076) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1077 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDispelItemOptionByField_(v3649, v1077);
    }
    else
    {
      v1078 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDispelItemOptionByField_(v3649, v1078);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDispelItemOptionByField_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDispelItemOptionByField_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5153);
    v5293 = 134;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5153) )
    {
      v4478 = operator new(0x50u);
      if ( v4478 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4478);
        v3514 = v1079;
      }
      else
      {
        v3514 = 0;
      }
      v4479 = v3514;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5153, v3514);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5153);
    }
    v1080 = b;
    v1081 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5153);
    v1082 = zmax<long>(v1081->tDuration, v1080);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5153)->tDuration = v1082;
    v1083 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5153);
    CFlag<480>::operator=|(&v1083->uFlag, &CTS_DispelItemOptionByField);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5153);
  }
  v1084 = CFlag<480>::operator&(&p, &v4477, &CTS_Inflation);
  if ( CFlag<480>::operator bool(v1084) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1085 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInflation_(v3649, v1085);
    }
    else
    {
      v1086 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInflation_(v3649, v1086);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rInflation_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tInflation_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5152);
    v5293 = 135;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5152) )
    {
      v4475 = operator new(0x50u);
      if ( v4475 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4475);
        v3513 = v1087;
      }
      else
      {
        v3513 = 0;
      }
      v4476 = v3513;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5152, v3513);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5152);
    }
    v1088 = b;
    v1089 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5152);
    v1090 = zmax<long>(v1089->tDuration, v1088);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5152)->tDuration = v1090;
    v1091 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5152);
    CFlag<480>::operator=|(&v1091->uFlag, &CTS_Inflation);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5152);
  }
  v1092 = CFlag<480>::operator&(&p, &v4474, &CTS_OnixDivineProtection);
  if ( CFlag<480>::operator bool(v1092) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1093 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nOnixDivineProtection_(v3649, v1093);
    }
    else
    {
      v1094 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nOnixDivineProtection_(v3649, v1094);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rOnixDivineProtection_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tOnixDivineProtection_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5151);
    v5293 = 136;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5151) )
    {
      v4472 = operator new(0x50u);
      if ( v4472 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4472);
        v3512 = v1095;
      }
      else
      {
        v3512 = 0;
      }
      v4473 = v3512;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5151, v3512);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5151);
    }
    v1096 = b;
    v1097 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5151);
    v1098 = zmax<long>(v1097->tDuration, v1096);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5151)->tDuration = v1098;
    v1099 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5151);
    CFlag<480>::operator=|(&v1099->uFlag, &CTS_OnixDivineProtection);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5151);
  }
  v1100 = CFlag<480>::operator&(&p, &v4471, &CTS_Bless);
  if ( CFlag<480>::operator bool(v1100) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1101 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBless_(v3649, v1101);
    }
    else
    {
      v1102 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBless_(v3649, v1102);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBless_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBless_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5150);
    v5293 = 137;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5150) )
    {
      v4469 = operator new(0x50u);
      if ( v4469 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4469);
        v3511 = v1103;
      }
      else
      {
        v3511 = 0;
      }
      v4470 = v3511;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5150, v3511);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5150);
    }
    v1104 = b;
    v1105 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5150);
    v1106 = zmax<long>(v1105->tDuration, v1104);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5150)->tDuration = v1106;
    v1107 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5150);
    CFlag<480>::operator=|(&v1107->uFlag, &CTS_Bless);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5150);
  }
  v1108 = CFlag<480>::operator&(&p, &v4468, &CTS_Explosion);
  if ( CFlag<480>::operator bool(v1108) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1109 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExplosion_(v3649, v1109);
    }
    else
    {
      v1110 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExplosion_(v3649, v1110);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rExplosion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tExplosion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5149);
    v5293 = 138;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5149) )
    {
      v4466 = operator new(0x50u);
      if ( v4466 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4466);
        v3510 = v1111;
      }
      else
      {
        v3510 = 0;
      }
      v4467 = v3510;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5149, v3510);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5149);
    }
    v1112 = b;
    v1113 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5149);
    v1114 = zmax<long>(v1113->tDuration, v1112);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5149)->tDuration = v1114;
    v1115 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5149);
    CFlag<480>::operator=|(&v1115->uFlag, &CTS_Explosion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5149);
  }
  v1116 = CFlag<480>::operator&(&p, &v4465, &CTS_DarkTornado);
  if ( CFlag<480>::operator bool(v1116) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1117 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarkTornado_(v3649, v1117);
    }
    else
    {
      v1118 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarkTornado_(v3649, v1118);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDarkTornado_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDarkTornado_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5148);
    v5293 = 139;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5148) )
    {
      v4463 = operator new(0x50u);
      if ( v4463 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4463);
        v3509 = v1119;
      }
      else
      {
        v3509 = 0;
      }
      v4464 = v3509;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5148, v3509);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5148);
    }
    v1120 = b;
    v1121 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5148);
    v1122 = zmax<long>(v1121->tDuration, v1120);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5148)->tDuration = v1122;
    v1123 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5148);
    CFlag<480>::operator=|(&v1123->uFlag, &CTS_DarkTornado);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5148);
  }
  v1124 = CFlag<480>::operator&(&p, &v4462, &CTS_IncMaxHP);
  if ( CFlag<480>::operator bool(v1124) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1125 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncMaxHP_(v3649, v1125);
    }
    else
    {
      v1126 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncMaxHP_(v3649, v1126);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncMaxHP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncMaxHP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5147);
    v5293 = 140;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5147) )
    {
      v4460 = operator new(0x50u);
      if ( v4460 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4460);
        v3508 = v1127;
      }
      else
      {
        v3508 = 0;
      }
      v4461 = v3508;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5147, v3508);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5147);
    }
    v1128 = b;
    v1129 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5147);
    v1130 = zmax<long>(v1129->tDuration, v1128);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5147)->tDuration = v1130;
    v1131 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5147);
    CFlag<480>::operator=|(&v1131->uFlag, &CTS_IncMaxHP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5147);
  }
  v1132 = CFlag<480>::operator&(&p, &v4459, &CTS_IncMaxMP);
  if ( CFlag<480>::operator bool(v1132) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1133 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncMaxMP_(v3649, v1133);
    }
    else
    {
      v1134 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncMaxMP_(v3649, v1134);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncMaxMP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncMaxMP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5146);
    v5293 = 141;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5146) )
    {
      v4457 = operator new(0x50u);
      if ( v4457 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4457);
        v3507 = v1135;
      }
      else
      {
        v3507 = 0;
      }
      v4458 = v3507;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5146, v3507);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5146);
    }
    v1136 = b;
    v1137 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5146);
    v1138 = zmax<long>(v1137->tDuration, v1136);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5146)->tDuration = v1138;
    v1139 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5146);
    CFlag<480>::operator=|(&v1139->uFlag, &CTS_IncMaxMP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5146);
  }
  v1140 = CFlag<480>::operator&(&p, &v4456, &CTS_PVPDamage);
  if ( CFlag<480>::operator bool(v1140) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1141 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPVPDamage_(v3649, v1141);
    }
    else
    {
      v1142 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPVPDamage_(v3649, v1142);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPVPDamage_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPVPDamage_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5145);
    v5293 = 142;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5145) )
    {
      v4454 = operator new(0x50u);
      if ( v4454 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4454);
        v3506 = v1143;
      }
      else
      {
        v3506 = 0;
      }
      v4455 = v3506;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5145, v3506);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5145);
    }
    v1144 = b;
    v1145 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5145);
    v1146 = zmax<long>(v1145->tDuration, v1144);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5145)->tDuration = v1146;
    v1147 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5145);
    CFlag<480>::operator=|(&v1147->uFlag, &CTS_PVPDamage);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5145);
  }
  v1148 = CFlag<480>::operator&(&p, &v4453, &CTS_PVPDamageSkill);
  if ( CFlag<480>::operator bool(v1148) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1149 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPVPDamageSkill_(v3649, v1149);
    }
    else
    {
      v1150 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPVPDamageSkill_(v3649, v1150);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPVPDamageSkill_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPVPDamageSkill_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5144);
    v5293 = 143;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5144) )
    {
      v4451 = operator new(0x50u);
      if ( v4451 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4451);
        v3505 = v1151;
      }
      else
      {
        v3505 = 0;
      }
      v4452 = v3505;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5144, v3505);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5144);
    }
    v1152 = b;
    v1153 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5144);
    v1154 = zmax<long>(v1153->tDuration, v1152);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5144)->tDuration = v1154;
    v1155 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5144);
    CFlag<480>::operator=|(&v1155->uFlag, &CTS_PVPDamageSkill);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5144);
  }
  v1156 = CFlag<480>::operator&(&p, &v4450, &CTS_PvPScoreBonus);
  if ( CFlag<480>::operator bool(v1156) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1157 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPvPScoreBonus_(v3649, v1157);
    }
    else
    {
      v1158 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPvPScoreBonus_(v3649, v1158);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPvPScoreBonus_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPvPScoreBonus_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5143);
    v5293 = 144;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5143) )
    {
      v4448 = operator new(0x50u);
      if ( v4448 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4448);
        v3504 = v1159;
      }
      else
      {
        v3504 = 0;
      }
      v4449 = v3504;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5143, v3504);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5143);
    }
    v1160 = b;
    v1161 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5143);
    v1162 = zmax<long>(v1161->tDuration, v1160);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5143)->tDuration = v1162;
    v1163 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5143);
    CFlag<480>::operator=|(&v1163->uFlag, &CTS_PvPScoreBonus);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5143);
  }
  v1164 = CFlag<480>::operator&(&p, &v4447, &CTS_PvPInvincible);
  if ( CFlag<480>::operator bool(v1164) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1165 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPvPInvincible_(v3649, v1165);
    }
    else
    {
      v1166 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPvPInvincible_(v3649, v1166);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPvPInvincible_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPvPInvincible_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5142);
    v5293 = 145;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5142) )
    {
      v4445 = operator new(0x50u);
      if ( v4445 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4445);
        v3503 = v1167;
      }
      else
      {
        v3503 = 0;
      }
      v4446 = v3503;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5142, v3503);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5142);
    }
    v1168 = b;
    v1169 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5142);
    v1170 = zmax<long>(v1169->tDuration, v1168);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5142)->tDuration = v1170;
    v1171 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5142);
    CFlag<480>::operator=|(&v1171->uFlag, &CTS_PvPInvincible);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5142);
  }
  v1172 = CFlag<480>::operator&(&p, &v4444, &CTS_PvPRaceEffect);
  if ( CFlag<480>::operator bool(v1172) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1173 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPvPRaceEffect_(v3649, v1173);
    }
    else
    {
      v1174 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPvPRaceEffect_(v3649, v1174);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPvPRaceEffect_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPvPRaceEffect_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5141);
    v5293 = 146;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5141) )
    {
      v4442 = operator new(0x50u);
      if ( v4442 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4442);
        v3502 = v1175;
      }
      else
      {
        v3502 = 0;
      }
      v4443 = v3502;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5141, v3502);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5141);
    }
    v1176 = b;
    v1177 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5141);
    v1178 = zmax<long>(v1177->tDuration, v1176);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5141)->tDuration = v1178;
    v1179 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5141);
    CFlag<480>::operator=|(&v1179->uFlag, &CTS_PvPRaceEffect);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5141);
  }
  v1180 = CFlag<480>::operator&(&p, &v4441, &CTS_IceKnight);
  if ( CFlag<480>::operator bool(v1180) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1181 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIceKnight_(v3649, v1181);
    }
    else
    {
      v1182 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIceKnight_(v3649, v1182);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIceKnight_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIceKnight_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5140);
    v5293 = 147;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5140) )
    {
      v4439 = operator new(0x50u);
      if ( v4439 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4439);
        v3501 = v1183;
      }
      else
      {
        v3501 = 0;
      }
      v4440 = v3501;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5140, v3501);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5140);
    }
    v1184 = b;
    v1185 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5140);
    v1186 = zmax<long>(v1185->tDuration, v1184);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5140)->tDuration = v1186;
    v1187 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5140);
    CFlag<480>::operator=|(&v1187->uFlag, &CTS_IceKnight);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5140);
  }
  v1188 = CFlag<480>::operator&(&p, &v4438, &CTS_HolyMagicShell);
  if ( CFlag<480>::operator bool(v1188) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1189 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHolyMagicShell_(v3649, v1189);
    }
    else
    {
      v1190 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHolyMagicShell_(v3649, v1190);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHolyMagicShell_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHolyMagicShell_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5139);
    v5293 = 148;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5139) )
    {
      v4436 = operator new(0x50u);
      if ( v4436 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4436);
        v3500 = v1191;
      }
      else
      {
        v3500 = 0;
      }
      v4437 = v3500;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5139, v3500);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5139);
    }
    v1192 = b;
    v1193 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5139);
    v1194 = zmax<long>(v1193->tDuration, v1192);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5139)->tDuration = v1194;
    v1195 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5139);
    CFlag<480>::operator=|(&v1195->uFlag, &CTS_HolyMagicShell);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5139);
  }
  v1196 = CFlag<480>::operator&(&p, &v4435, &CTS_InfinityForce);
  if ( CFlag<480>::operator bool(v1196) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1197 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInfinityForce_(v3649, v1197);
    }
    else
    {
      v1198 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInfinityForce_(v3649, v1198);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rInfinityForce_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tInfinityForce_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5138);
    v5293 = 149;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5138) )
    {
      v4433 = operator new(0x50u);
      if ( v4433 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4433);
        v3499 = v1199;
      }
      else
      {
        v3499 = 0;
      }
      v4434 = v3499;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5138, v3499);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5138);
    }
    v1200 = b;
    v1201 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5138);
    v1202 = zmax<long>(v1201->tDuration, v1200);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5138)->tDuration = v1202;
    v1203 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5138);
    CFlag<480>::operator=|(&v1203->uFlag, &CTS_InfinityForce);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5138);
  }
  v1204 = CFlag<480>::operator&(&p, &v4432, &CTS_AmplifyDamage);
  if ( CFlag<480>::operator bool(v1204) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1205 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAmplifyDamage_(v3649, v1205);
    }
    else
    {
      v1206 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAmplifyDamage_(v3649, v1206);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAmplifyDamage_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAmplifyDamage_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5137);
    v5293 = 150;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5137) )
    {
      v4430 = operator new(0x50u);
      if ( v4430 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4430);
        v3498 = v1207;
      }
      else
      {
        v3498 = 0;
      }
      v4431 = v3498;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5137, v3498);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5137);
    }
    v1208 = b;
    v1209 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5137);
    v1210 = zmax<long>(v1209->tDuration, v1208);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5137)->tDuration = v1210;
    v1211 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5137);
    CFlag<480>::operator=|(&v1211->uFlag, &CTS_AmplifyDamage);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5137);
  }
  v1212 = CFlag<480>::operator&(&p, &v4429, &CTS_KeyDownTimeIgnore);
  if ( CFlag<480>::operator bool(v1212) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1213 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKeyDownTimeIgnore_(v3649, v1213);
    }
    else
    {
      v1214 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKeyDownTimeIgnore_(v3649, v1214);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKeyDownTimeIgnore_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKeyDownTimeIgnore_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5136);
    v5293 = 151;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5136) )
    {
      v4427 = operator new(0x50u);
      if ( v4427 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4427);
        v3497 = v1215;
      }
      else
      {
        v3497 = 0;
      }
      v4428 = v3497;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5136, v3497);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5136);
    }
    v1216 = b;
    v1217 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5136);
    v1218 = zmax<long>(v1217->tDuration, v1216);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5136)->tDuration = v1218;
    v1219 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5136);
    CFlag<480>::operator=|(&v1219->uFlag, &CTS_KeyDownTimeIgnore);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5136);
  }
  v1220 = CFlag<480>::operator&(&p, &v4426, &CTS_MasterMagicOn);
  if ( CFlag<480>::operator bool(v1220) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1221 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMasterMagicOn_(v3649, v1221);
    }
    else
    {
      v1222 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMasterMagicOn_(v3649, v1222);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMasterMagicOn_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMasterMagicOn_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5135);
    v5293 = 152;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5135) )
    {
      v4424 = operator new(0x50u);
      if ( v4424 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4424);
        v3496 = v1223;
      }
      else
      {
        v3496 = 0;
      }
      v4425 = v3496;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5135, v3496);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5135);
    }
    v1224 = b;
    v1225 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5135);
    v1226 = zmax<long>(v1225->tDuration, v1224);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5135)->tDuration = v1226;
    v1227 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5135);
    CFlag<480>::operator=|(&v1227->uFlag, &CTS_MasterMagicOn);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5135);
  }
  v1228 = CFlag<480>::operator&(&p, &v4423, &CTS_AsrR);
  if ( CFlag<480>::operator bool(v1228) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1229 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAsrR_(v3649, v1229);
    }
    else
    {
      v1230 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAsrR_(v3649, v1230);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAsrR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAsrR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5134);
    v5293 = 153;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5134) )
    {
      v4421 = operator new(0x50u);
      if ( v4421 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4421);
        v3495 = v1231;
      }
      else
      {
        v3495 = 0;
      }
      v4422 = v3495;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5134, v3495);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5134);
    }
    v1232 = b;
    v1233 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5134);
    v1234 = zmax<long>(v1233->tDuration, v1232);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5134)->tDuration = v1234;
    v1235 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5134);
    CFlag<480>::operator=|(&v1235->uFlag, &CTS_AsrR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5134);
  }
  v1236 = CFlag<480>::operator&(&p, &v4420, &CTS_AsrRByItem);
  if ( CFlag<480>::operator bool(v1236) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1237 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAsrRByItem_(v3649, v1237);
    }
    else
    {
      v1238 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAsrRByItem_(v3649, v1238);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAsrRByItem_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAsrRByItem_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5133);
    v5293 = 154;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5133) )
    {
      v4418 = operator new(0x50u);
      if ( v4418 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4418);
        v3494 = v1239;
      }
      else
      {
        v3494 = 0;
      }
      v4419 = v3494;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5133, v3494);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5133);
    }
    v1240 = b;
    v1241 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5133);
    v1242 = zmax<long>(v1241->tDuration, v1240);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5133)->tDuration = v1242;
    v1243 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5133);
    CFlag<480>::operator=|(&v1243->uFlag, &CTS_AsrRByItem);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5133);
  }
  v1244 = CFlag<480>::operator&(&p, &v4417, &CTS_TerR);
  if ( CFlag<480>::operator bool(v1244) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1245 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTerR_(v3649, v1245);
    }
    else
    {
      v1246 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTerR_(v3649, v1246);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTerR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTerR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5132);
    v5293 = 155;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5132) )
    {
      v4415 = operator new(0x50u);
      if ( v4415 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4415);
        v3493 = v1247;
      }
      else
      {
        v3493 = 0;
      }
      v4416 = v3493;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5132, v3493);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5132);
    }
    v1248 = b;
    v1249 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5132);
    v1250 = zmax<long>(v1249->tDuration, v1248);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5132)->tDuration = v1250;
    v1251 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5132);
    CFlag<480>::operator=|(&v1251->uFlag, &CTS_TerR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5132);
  }
  v1252 = CFlag<480>::operator&(&p, &v4414, &CTS_DamAbsorbShield);
  if ( CFlag<480>::operator bool(v1252) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1253 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDamAbsorbShield_(v3649, v1253);
    }
    else
    {
      v1254 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDamAbsorbShield_(v3649, v1254);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDamAbsorbShield_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDamAbsorbShield_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5131);
    v5293 = 156;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5131) )
    {
      v4412 = operator new(0x50u);
      if ( v4412 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4412);
        v3492 = v1255;
      }
      else
      {
        v3492 = 0;
      }
      v4413 = v3492;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5131, v3492);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5131);
    }
    v1256 = b;
    v1257 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5131);
    v1258 = zmax<long>(v1257->tDuration, v1256);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5131)->tDuration = v1258;
    v1259 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5131);
    CFlag<480>::operator=|(&v1259->uFlag, &CTS_DamAbsorbShield);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5131);
  }
  v1260 = CFlag<480>::operator&(&p, &v4411, &CTS_Roulette);
  if ( CFlag<480>::operator bool(v1260) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1261 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRoulette_(v3649, v1261);
    }
    else
    {
      v1262 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRoulette_(v3649, v1262);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRoulette_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRoulette_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5130);
    v5293 = 157;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5130) )
    {
      v4409 = operator new(0x50u);
      if ( v4409 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4409);
        v3491 = v1263;
      }
      else
      {
        v3491 = 0;
      }
      v4410 = v3491;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5130, v3491);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5130);
    }
    v1264 = b;
    v1265 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5130);
    v1266 = zmax<long>(v1265->tDuration, v1264);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5130)->tDuration = v1266;
    v1267 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5130);
    CFlag<480>::operator=|(&v1267->uFlag, &CTS_Roulette);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5130);
  }
  v1268 = CFlag<480>::operator&(&p, &v4408, &CTS_Event);
  if ( CFlag<480>::operator bool(v1268) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1269 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEvent_(v3649, v1269);
    }
    else
    {
      v1270 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEvent_(v3649, v1270);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEvent_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEvent_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5129);
    v5293 = 158;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5129) )
    {
      v4406 = operator new(0x50u);
      if ( v4406 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4406);
        v3490 = v1271;
      }
      else
      {
        v3490 = 0;
      }
      v4407 = v3490;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5129, v3490);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5129);
    }
    v1272 = b;
    v1273 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5129);
    v1274 = zmax<long>(v1273->tDuration, v1272);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5129)->tDuration = v1274;
    v1275 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5129);
    CFlag<480>::operator=|(&v1275->uFlag, &CTS_Event);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5129);
  }
  v1276 = CFlag<480>::operator&(&p, &v4405, &CTS_SpiritLink);
  if ( CFlag<480>::operator bool(v1276) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1277 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSpiritLink_(v3649, v1277);
    }
    else
    {
      v1278 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSpiritLink_(v3649, v1278);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSpiritLink_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSpiritLink_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5128);
    v5293 = 159;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5128) )
    {
      v4403 = operator new(0x50u);
      if ( v4403 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4403);
        v3489 = v1279;
      }
      else
      {
        v3489 = 0;
      }
      v4404 = v3489;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5128, v3489);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5128);
    }
    v1280 = b;
    v1281 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5128);
    v1282 = zmax<long>(v1281->tDuration, v1280);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5128)->tDuration = v1282;
    v1283 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5128);
    CFlag<480>::operator=|(&v1283->uFlag, &CTS_SpiritLink);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5128);
  }
  v1284 = CFlag<480>::operator&(&p, &v4402, &CTS_CriticalBuff);
  if ( CFlag<480>::operator bool(v1284) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1285 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCriticalBuff_(v3649, v1285);
    }
    else
    {
      v1286 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCriticalBuff_(v3649, v1286);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCriticalBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCriticalBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5127);
    v5293 = 160;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5127) )
    {
      v4400 = operator new(0x50u);
      if ( v4400 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4400);
        v3488 = v1287;
      }
      else
      {
        v3488 = 0;
      }
      v4401 = v3488;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5127, v3488);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5127);
    }
    v1288 = b;
    v1289 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5127);
    v1290 = zmax<long>(v1289->tDuration, v1288);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5127)->tDuration = v1290;
    v1291 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5127);
    CFlag<480>::operator=|(&v1291->uFlag, &CTS_CriticalBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5127);
  }
  v1292 = CFlag<480>::operator&(&p, &v4399, &CTS_DropRate);
  if ( CFlag<480>::operator bool(v1292) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1293 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDropRate_(v3649, v1293);
    }
    else
    {
      v1294 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDropRate_(v3649, v1294);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDropRate_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDropRate_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5126);
    v5293 = 161;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5126) )
    {
      v4397 = operator new(0x50u);
      if ( v4397 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4397);
        v3487 = v1295;
      }
      else
      {
        v3487 = 0;
      }
      v4398 = v3487;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5126, v3487);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5126);
    }
    v1296 = b;
    v1297 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5126);
    v1298 = zmax<long>(v1297->tDuration, v1296);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5126)->tDuration = v1298;
    v1299 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5126);
    CFlag<480>::operator=|(&v1299->uFlag, &CTS_DropRate);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5126);
  }
  v1300 = CFlag<480>::operator&(&p, &v4396, &CTS_PlusExpRate);
  if ( CFlag<480>::operator bool(v1300) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1301 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPlusExpRate_(v3649, v1301);
    }
    else
    {
      v1302 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPlusExpRate_(v3649, v1302);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPlusExpRate_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPlusExpRate_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5125);
    v5293 = 162;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5125) )
    {
      v4394 = operator new(0x50u);
      if ( v4394 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4394);
        v3486 = v1303;
      }
      else
      {
        v3486 = 0;
      }
      v4395 = v3486;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5125, v3486);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5125);
    }
    v1304 = b;
    v1305 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5125);
    v1306 = zmax<long>(v1305->tDuration, v1304);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5125)->tDuration = v1306;
    v1307 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5125);
    CFlag<480>::operator=|(&v1307->uFlag, &CTS_PlusExpRate);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5125);
  }
  v1308 = CFlag<480>::operator&(&p, &v4393, &CTS_ItemInvincible);
  if ( CFlag<480>::operator bool(v1308) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1309 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nItemInvincible_(v3649, v1309);
    }
    else
    {
      v1310 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nItemInvincible_(v3649, v1310);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rItemInvincible_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tItemInvincible_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5124);
    v5293 = 163;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5124) )
    {
      v4391 = operator new(0x50u);
      if ( v4391 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4391);
        v3485 = v1311;
      }
      else
      {
        v3485 = 0;
      }
      v4392 = v3485;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5124, v3485);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5124);
    }
    v1312 = b;
    v1313 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5124);
    v1314 = zmax<long>(v1313->tDuration, v1312);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5124)->tDuration = v1314;
    v1315 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5124);
    CFlag<480>::operator=|(&v1315->uFlag, &CTS_ItemInvincible);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5124);
  }
  v1316 = CFlag<480>::operator&(&p, &v4390, &CTS_ItemCritical);
  if ( CFlag<480>::operator bool(v1316) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1317 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nItemCritical_(v3649, v1317);
    }
    else
    {
      v1318 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nItemCritical_(v3649, v1318);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rItemCritical_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tItemCritical_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5123);
    v5293 = 164;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5123) )
    {
      v4388 = operator new(0x50u);
      if ( v4388 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4388);
        v3484 = v1319;
      }
      else
      {
        v3484 = 0;
      }
      v4389 = v3484;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5123, v3484);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5123);
    }
    v1320 = b;
    v1321 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5123);
    v1322 = zmax<long>(v1321->tDuration, v1320);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5123)->tDuration = v1322;
    v1323 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5123);
    CFlag<480>::operator=|(&v1323->uFlag, &CTS_ItemCritical);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5123);
  }
  v1324 = CFlag<480>::operator&(&p, &v4387, &CTS_ItemEvade);
  if ( CFlag<480>::operator bool(v1324) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1325 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nItemEvade_(v3649, v1325);
    }
    else
    {
      v1326 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nItemEvade_(v3649, v1326);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rItemEvade_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tItemEvade_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5122);
    v5293 = 165;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5122) )
    {
      v4385 = operator new(0x50u);
      if ( v4385 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4385);
        v3483 = v1327;
      }
      else
      {
        v3483 = 0;
      }
      v4386 = v3483;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5122, v3483);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5122);
    }
    v1328 = b;
    v1329 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5122);
    v1330 = zmax<long>(v1329->tDuration, v1328);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5122)->tDuration = v1330;
    v1331 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5122);
    CFlag<480>::operator=|(&v1331->uFlag, &CTS_ItemEvade);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5122);
  }
  v1332 = CFlag<480>::operator&(&p, &v4384, &CTS_Event2);
  if ( CFlag<480>::operator bool(v1332) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1333 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEvent2_(v3649, v1333);
    }
    else
    {
      v1334 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEvent2_(v3649, v1334);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEvent2_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEvent2_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5121);
    v5293 = 166;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5121) )
    {
      v4382 = operator new(0x50u);
      if ( v4382 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4382);
        v3482 = v1335;
      }
      else
      {
        v3482 = 0;
      }
      v4383 = v3482;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5121, v3482);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5121);
    }
    v1336 = b;
    v1337 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5121);
    v1338 = zmax<long>(v1337->tDuration, v1336);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5121)->tDuration = v1338;
    v1339 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5121);
    CFlag<480>::operator=|(&v1339->uFlag, &CTS_Event2);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5121);
  }
  v1340 = CFlag<480>::operator&(&p, &v4381, &CTS_VampiricTouch);
  if ( CFlag<480>::operator bool(v1340) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1341 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVampiricTouch_(v3649, v1341);
    }
    else
    {
      v1342 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVampiricTouch_(v3649, v1342);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rVampiricTouch_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tVampiricTouch_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5120);
    v5293 = 167;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5120) )
    {
      v4379 = operator new(0x50u);
      if ( v4379 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4379);
        v3481 = v1343;
      }
      else
      {
        v3481 = 0;
      }
      v4380 = v3481;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5120, v3481);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5120);
    }
    v1344 = b;
    v1345 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5120);
    v1346 = zmax<long>(v1345->tDuration, v1344);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5120)->tDuration = v1346;
    v1347 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5120);
    CFlag<480>::operator=|(&v1347->uFlag, &CTS_VampiricTouch);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5120);
  }
  v1348 = CFlag<480>::operator&(&p, &v4378, &CTS_DDR);
  if ( CFlag<480>::operator bool(v1348) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1349 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDDR_(v3649, v1349);
    }
    else
    {
      v1350 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDDR_(v3649, v1350);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDDR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDDR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5119);
    v5293 = 168;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5119) )
    {
      v4376 = operator new(0x50u);
      if ( v4376 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4376);
        v3480 = v1351;
      }
      else
      {
        v3480 = 0;
      }
      v4377 = v3480;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5119, v3480);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5119);
    }
    v1352 = b;
    v1353 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5119);
    v1354 = zmax<long>(v1353->tDuration, v1352);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5119)->tDuration = v1354;
    v1355 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5119);
    CFlag<480>::operator=|(&v1355->uFlag, &CTS_DDR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5119);
  }
  v1356 = CFlag<480>::operator&(&p, &v4375, &CTS_IncCriticalDamMin);
  if ( CFlag<480>::operator bool(v1356) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1357 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncCriticalDamMin_(v3649, v1357);
    }
    else
    {
      v1358 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncCriticalDamMin_(v3649, v1358);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncCriticalDamMin_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncCriticalDamMin_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5118);
    v5293 = 169;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5118) )
    {
      v4373 = operator new(0x50u);
      if ( v4373 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4373);
        v3479 = v1359;
      }
      else
      {
        v3479 = 0;
      }
      v4374 = v3479;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5118, v3479);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5118);
    }
    v1360 = b;
    v1361 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5118);
    v1362 = zmax<long>(v1361->tDuration, v1360);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5118)->tDuration = v1362;
    v1363 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5118);
    CFlag<480>::operator=|(&v1363->uFlag, &CTS_IncCriticalDamMin);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5118);
  }
  v1364 = CFlag<480>::operator&(&p, &v4372, &CTS_IncCriticalDamMax);
  if ( CFlag<480>::operator bool(v1364) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1365 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncCriticalDamMax_(v3649, v1365);
    }
    else
    {
      v1366 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncCriticalDamMax_(v3649, v1366);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncCriticalDamMax_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncCriticalDamMax_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5117);
    v5293 = 170;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5117) )
    {
      v4370 = operator new(0x50u);
      if ( v4370 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4370);
        v3478 = v1367;
      }
      else
      {
        v3478 = 0;
      }
      v4371 = v3478;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5117, v3478);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5117);
    }
    v1368 = b;
    v1369 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5117);
    v1370 = zmax<long>(v1369->tDuration, v1368);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5117)->tDuration = v1370;
    v1371 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5117);
    CFlag<480>::operator=|(&v1371->uFlag, &CTS_IncCriticalDamMax);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5117);
  }
  v1372 = CFlag<480>::operator&(&p, &v4369, &CTS_IncTerR);
  if ( CFlag<480>::operator bool(v1372) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1373 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncTerR_(v3649, v1373);
    }
    else
    {
      v1374 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncTerR_(v3649, v1374);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncTerR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncTerR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5116);
    v5293 = 171;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5116) )
    {
      v4367 = operator new(0x50u);
      if ( v4367 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4367);
        v3477 = v1375;
      }
      else
      {
        v3477 = 0;
      }
      v4368 = v3477;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5116, v3477);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5116);
    }
    v1376 = b;
    v1377 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5116);
    v1378 = zmax<long>(v1377->tDuration, v1376);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5116)->tDuration = v1378;
    v1379 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5116);
    CFlag<480>::operator=|(&v1379->uFlag, &CTS_IncTerR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5116);
  }
  v1380 = CFlag<480>::operator&(&p, &v4366, &CTS_IncAsrR);
  if ( CFlag<480>::operator bool(v1380) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1381 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncAsrR_(v3649, v1381);
    }
    else
    {
      v1382 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncAsrR_(v3649, v1382);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncAsrR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncAsrR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5115);
    v5293 = 172;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5115) )
    {
      v4364 = operator new(0x50u);
      if ( v4364 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4364);
        v3476 = v1383;
      }
      else
      {
        v3476 = 0;
      }
      v4365 = v3476;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5115, v3476);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5115);
    }
    v1384 = b;
    v1385 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5115);
    v1386 = zmax<long>(v1385->tDuration, v1384);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5115)->tDuration = v1386;
    v1387 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5115);
    CFlag<480>::operator=|(&v1387->uFlag, &CTS_IncAsrR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5115);
  }
  v1388 = CFlag<480>::operator&(&p, &v4363, &CTS_DeathMark);
  if ( CFlag<480>::operator bool(v1388) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1389 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDeathMark_(v3649, v1389);
    }
    else
    {
      v1390 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDeathMark_(v3649, v1390);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDeathMark_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDeathMark_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5114);
    v5293 = 173;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5114) )
    {
      v4361 = operator new(0x50u);
      if ( v4361 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4361);
        v3475 = v1391;
      }
      else
      {
        v3475 = 0;
      }
      v4362 = v3475;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5114, v3475);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5114);
    }
    v1392 = b;
    v1393 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5114);
    v1394 = zmax<long>(v1393->tDuration, v1392);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5114)->tDuration = v1394;
    v1395 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5114);
    CFlag<480>::operator=|(&v1395->uFlag, &CTS_DeathMark);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5114);
  }
  v1396 = CFlag<480>::operator&(&p, &v4360, &CTS_PainMark);
  if ( CFlag<480>::operator bool(v1396) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1397 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPainMark_(v3649, v1397);
    }
    else
    {
      v1398 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPainMark_(v3649, v1398);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPainMark_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPainMark_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5113);
    v5293 = 174;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5113) )
    {
      v4358 = operator new(0x50u);
      if ( v4358 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4358);
        v3474 = v1399;
      }
      else
      {
        v3474 = 0;
      }
      v4359 = v3474;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5113, v3474);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5113);
    }
    v1400 = b;
    v1401 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5113);
    v1402 = zmax<long>(v1401->tDuration, v1400);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5113)->tDuration = v1402;
    v1403 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5113);
    CFlag<480>::operator=|(&v1403->uFlag, &CTS_PainMark);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5113);
  }
  v1404 = CFlag<480>::operator&(&p, &v4357, &CTS_UsefulAdvancedBless);
  if ( CFlag<480>::operator bool(v1404) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1405 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nUsefulAdvancedBless_(v3649, v1405);
    }
    else
    {
      v1406 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nUsefulAdvancedBless_(v3649, v1406);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rUsefulAdvancedBless_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tUsefulAdvancedBless_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5112);
    v5293 = 175;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5112) )
    {
      v4355 = operator new(0x50u);
      if ( v4355 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4355);
        v3473 = v1407;
      }
      else
      {
        v3473 = 0;
      }
      v4356 = v3473;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5112, v3473);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5112);
    }
    v1408 = b;
    v1409 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5112);
    v1410 = zmax<long>(v1409->tDuration, v1408);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5112)->tDuration = v1410;
    v1411 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5112);
    CFlag<480>::operator=|(&v1411->uFlag, &CTS_UsefulAdvancedBless);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5112);
  }
  v1412 = CFlag<480>::operator&(&p, &v4354, &CTS_Lapidification);
  if ( CFlag<480>::operator bool(v1412) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1413 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLapidification_(v3649, v1413);
    }
    else
    {
      v1414 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLapidification_(v3649, v1414);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rLapidification_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tLapidification_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5111);
    v5293 = 176;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5111) )
    {
      v4352 = operator new(0x50u);
      if ( v4352 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4352);
        v3472 = v1415;
      }
      else
      {
        v3472 = 0;
      }
      v4353 = v3472;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5111, v3472);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5111);
    }
    v1416 = b;
    v1417 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5111);
    v1418 = zmax<long>(v1417->tDuration, v1416);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5111)->tDuration = v1418;
    v1419 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5111);
    CFlag<480>::operator=|(&v1419->uFlag, &CTS_Lapidification);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5111);
  }
  v1420 = CFlag<480>::operator&(&p, &v4351, &CTS_VampDeath);
  if ( CFlag<480>::operator bool(v1420) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1421 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVampDeath_(v3649, v1421);
    }
    else
    {
      v1422 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVampDeath_(v3649, v1422);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rVampDeath_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tVampDeath_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5110);
    v5293 = 177;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5110) )
    {
      v4349 = operator new(0x50u);
      if ( v4349 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4349);
        v3471 = v1423;
      }
      else
      {
        v3471 = 0;
      }
      v4350 = v3471;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5110, v3471);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5110);
    }
    v1424 = b;
    v1425 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5110);
    v1426 = zmax<long>(v1425->tDuration, v1424);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5110)->tDuration = v1426;
    v1427 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5110);
    CFlag<480>::operator=|(&v1427->uFlag, &CTS_VampDeath);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5110);
  }
  v1428 = CFlag<480>::operator&(&p, &v4348, &CTS_VampDeathSummon);
  if ( CFlag<480>::operator bool(v1428) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1429 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVampDeathSummon_(v3649, v1429);
    }
    else
    {
      v1430 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVampDeathSummon_(v3649, v1430);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rVampDeathSummon_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tVampDeathSummon_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5109);
    v5293 = 178;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5109) )
    {
      v4346 = operator new(0x50u);
      if ( v4346 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4346);
        v3470 = v1431;
      }
      else
      {
        v3470 = 0;
      }
      v4347 = v3470;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5109, v3470);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5109);
    }
    v1432 = b;
    v1433 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5109);
    v1434 = zmax<long>(v1433->tDuration, v1432);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5109)->tDuration = v1434;
    v1435 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5109);
    CFlag<480>::operator=|(&v1435->uFlag, &CTS_VampDeathSummon);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5109);
  }
  v1436 = CFlag<480>::operator&(&p, &v4345, &CTS_VenomSnake);
  if ( CFlag<480>::operator bool(v1436) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1437 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVenomSnake_(v3649, v1437);
    }
    else
    {
      v1438 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVenomSnake_(v3649, v1438);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rVenomSnake_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tVenomSnake_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5108);
    v5293 = 179;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5108) )
    {
      v4343 = operator new(0x50u);
      if ( v4343 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4343);
        v3469 = v1439;
      }
      else
      {
        v3469 = 0;
      }
      v4344 = v3469;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5108, v3469);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5108);
    }
    v1440 = b;
    v1441 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5108);
    v1442 = zmax<long>(v1441->tDuration, v1440);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5108)->tDuration = v1442;
    v1443 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5108);
    CFlag<480>::operator=|(&v1443->uFlag, &CTS_VenomSnake);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5108);
  }
  v1444 = CFlag<480>::operator&(&p, &v4342, &CTS_CarnivalAttack);
  if ( CFlag<480>::operator bool(v1444) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1445 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCarnivalAttack_(v3649, v1445);
    }
    else
    {
      v1446 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCarnivalAttack_(v3649, v1446);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCarnivalAttack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCarnivalAttack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5107);
    v5293 = 180;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5107) )
    {
      v4340 = operator new(0x50u);
      if ( v4340 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4340);
        v3468 = v1447;
      }
      else
      {
        v3468 = 0;
      }
      v4341 = v3468;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5107, v3468);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5107);
    }
    v1448 = b;
    v1449 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5107);
    v1450 = zmax<long>(v1449->tDuration, v1448);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5107)->tDuration = v1450;
    v1451 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5107);
    CFlag<480>::operator=|(&v1451->uFlag, &CTS_CarnivalAttack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5107);
  }
  v1452 = CFlag<480>::operator&(&p, &v4339, &CTS_CarnivalDefence);
  if ( CFlag<480>::operator bool(v1452) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1453 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCarnivalDefence_(v3649, v1453);
    }
    else
    {
      v1454 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCarnivalDefence_(v3649, v1454);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCarnivalDefence_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCarnivalDefence_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5106);
    v5293 = 181;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5106) )
    {
      v4337 = operator new(0x50u);
      if ( v4337 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4337);
        v3467 = v1455;
      }
      else
      {
        v3467 = 0;
      }
      v4338 = v3467;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5106, v3467);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5106);
    }
    v1456 = b;
    v1457 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5106);
    v1458 = zmax<long>(v1457->tDuration, v1456);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5106)->tDuration = v1458;
    v1459 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5106);
    CFlag<480>::operator=|(&v1459->uFlag, &CTS_CarnivalDefence);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5106);
  }
  v1460 = CFlag<480>::operator&(&p, &v4336, &CTS_CarnivalExp);
  if ( CFlag<480>::operator bool(v1460) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1461 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCarnivalExp_(v3649, v1461);
    }
    else
    {
      v1462 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCarnivalExp_(v3649, v1462);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCarnivalExp_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCarnivalExp_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5105);
    v5293 = 182;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5105) )
    {
      v4334 = operator new(0x50u);
      if ( v4334 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4334);
        v3466 = v1463;
      }
      else
      {
        v3466 = 0;
      }
      v4335 = v3466;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5105, v3466);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5105);
    }
    v1464 = b;
    v1465 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5105);
    v1466 = zmax<long>(v1465->tDuration, v1464);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5105)->tDuration = v1466;
    v1467 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5105);
    CFlag<480>::operator=|(&v1467->uFlag, &CTS_CarnivalExp);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5105);
  }
  v1468 = CFlag<480>::operator&(&p, &v4333, &CTS_SlowAttack);
  if ( CFlag<480>::operator bool(v1468) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1469 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSlowAttack_(v3649, v1469);
    }
    else
    {
      v1470 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSlowAttack_(v3649, v1470);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSlowAttack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSlowAttack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5104);
    v5293 = 183;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5104) )
    {
      v4331 = operator new(0x50u);
      if ( v4331 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4331);
        v3465 = v1471;
      }
      else
      {
        v3465 = 0;
      }
      v4332 = v3465;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5104, v3465);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5104);
    }
    v1472 = b;
    v1473 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5104);
    v1474 = zmax<long>(v1473->tDuration, v1472);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5104)->tDuration = v1474;
    v1475 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5104);
    CFlag<480>::operator=|(&v1475->uFlag, &CTS_SlowAttack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5104);
  }
  v1476 = CFlag<480>::operator&(&p, &v4330, &CTS_PyramidEffect);
  if ( CFlag<480>::operator bool(v1476) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1477 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPyramidEffect_(v3649, v1477);
    }
    else
    {
      v1478 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPyramidEffect_(v3649, v1478);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPyramidEffect_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPyramidEffect_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5103);
    v5293 = 184;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5103) )
    {
      v4328 = operator new(0x50u);
      if ( v4328 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4328);
        v3464 = v1479;
      }
      else
      {
        v3464 = 0;
      }
      v4329 = v3464;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5103, v3464);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5103);
    }
    v1480 = b;
    v1481 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5103);
    v1482 = zmax<long>(v1481->tDuration, v1480);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5103)->tDuration = v1482;
    v1483 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5103);
    CFlag<480>::operator=|(&v1483->uFlag, &CTS_PyramidEffect);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5103);
  }
  v1484 = CFlag<480>::operator&(&p, &v4327, &CTS_HollowPointBullet);
  if ( CFlag<480>::operator bool(v1484) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1485 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHollowPointBullet_(v3649, v1485);
    }
    else
    {
      v1486 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHollowPointBullet_(v3649, v1486);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHollowPointBullet_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHollowPointBullet_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5102);
    v5293 = 185;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5102) )
    {
      v4325 = operator new(0x50u);
      if ( v4325 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4325);
        v3463 = v1487;
      }
      else
      {
        v3463 = 0;
      }
      v4326 = v3463;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5102, v3463);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5102);
    }
    v1488 = b;
    v1489 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5102);
    v1490 = zmax<long>(v1489->tDuration, v1488);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5102)->tDuration = v1490;
    v1491 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5102);
    CFlag<480>::operator=|(&v1491->uFlag, &CTS_HollowPointBullet);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5102);
  }
  v1492 = CFlag<480>::operator&(&p, &v4324, &CTS_KeyDownMoving);
  if ( CFlag<480>::operator bool(v1492) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1493 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKeyDownMoving_(v3649, v1493);
    }
    else
    {
      v1494 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKeyDownMoving_(v3649, v1494);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKeyDownMoving_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKeyDownMoving_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5101);
    v5293 = 186;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5101) )
    {
      v4322 = operator new(0x50u);
      if ( v4322 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4322);
        v3462 = v1495;
      }
      else
      {
        v3462 = 0;
      }
      v4323 = v3462;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5101, v3462);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5101);
    }
    v1496 = b;
    v1497 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5101);
    v1498 = zmax<long>(v1497->tDuration, v1496);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5101)->tDuration = v1498;
    v1499 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5101);
    CFlag<480>::operator=|(&v1499->uFlag, &CTS_KeyDownMoving);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5101);
  }
  v1500 = CFlag<480>::operator&(&p, &v4321, &CTS_KeyDownAreaMoving);
  if ( CFlag<480>::operator bool(v1500) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1501 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKeyDownAreaMoving_(v3649, v1501);
    }
    else
    {
      v1502 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKeyDownAreaMoving_(v3649, v1502);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKeyDownAreaMoving_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKeyDownAreaMoving_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5100);
    v5293 = 187;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5100) )
    {
      v4319 = operator new(0x50u);
      if ( v4319 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4319);
        v3461 = v1503;
      }
      else
      {
        v3461 = 0;
      }
      v4320 = v3461;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5100, v3461);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5100);
    }
    v1504 = b;
    v1505 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5100);
    v1506 = zmax<long>(v1505->tDuration, v1504);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5100)->tDuration = v1506;
    v1507 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5100);
    CFlag<480>::operator=|(&v1507->uFlag, &CTS_KeyDownAreaMoving);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5100);
  }
  v1508 = CFlag<480>::operator&(&p, &v4318, &CTS_CygnusElementSkill);
  if ( CFlag<480>::operator bool(v1508) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1509 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCygnusElementSkill_(v3649, v1509);
    }
    else
    {
      v1510 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCygnusElementSkill_(v3649, v1510);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCygnusElementSkill_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCygnusElementSkill_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5099);
    v5293 = 188;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5099) )
    {
      v4316 = operator new(0x50u);
      if ( v4316 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4316);
        v3460 = v1511;
      }
      else
      {
        v3460 = 0;
      }
      v4317 = v3460;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5099, v3460);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5099);
    }
    v1512 = b;
    v1513 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5099);
    v1514 = zmax<long>(v1513->tDuration, v1512);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5099)->tDuration = v1514;
    v1515 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5099);
    CFlag<480>::operator=|(&v1515->uFlag, &CTS_CygnusElementSkill);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5099);
  }
  v1516 = CFlag<480>::operator&(&p, &v4315, &CTS_IgnoreTargetDEF);
  if ( CFlag<480>::operator bool(v1516) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1517 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreTargetDEF_(v3649, v1517);
    }
    else
    {
      v1518 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreTargetDEF_(v3649, v1518);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIgnoreTargetDEF_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIgnoreTargetDEF_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5098);
    v5293 = 189;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5098) )
    {
      v4313 = operator new(0x50u);
      if ( v4313 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4313);
        v3459 = v1519;
      }
      else
      {
        v3459 = 0;
      }
      v4314 = v3459;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5098, v3459);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5098);
    }
    v1520 = b;
    v1521 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5098);
    v1522 = zmax<long>(v1521->tDuration, v1520);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5098)->tDuration = v1522;
    v1523 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5098);
    CFlag<480>::operator=|(&v1523->uFlag, &CTS_IgnoreTargetDEF);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5098);
  }
  v1524 = CFlag<480>::operator&(&p, &v4312, &CTS_Invisible);
  if ( CFlag<480>::operator bool(v1524) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1525 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInvisible_(v3649, v1525);
    }
    else
    {
      v1526 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nInvisible_(v3649, v1526);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rInvisible_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tInvisible_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5097);
    v5293 = 190;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5097) )
    {
      v4310 = operator new(0x50u);
      if ( v4310 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4310);
        v3458 = v1527;
      }
      else
      {
        v3458 = 0;
      }
      v4311 = v3458;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5097, v3458);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5097);
    }
    v1528 = b;
    v1529 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5097);
    v1530 = zmax<long>(v1529->tDuration, v1528);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5097)->tDuration = v1530;
    v1531 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5097);
    CFlag<480>::operator=|(&v1531->uFlag, &CTS_Invisible);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5097);
  }
  v1532 = CFlag<480>::operator&(&p, &v4309, &CTS_ReviveOnce);
  if ( CFlag<480>::operator bool(v1532) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1533 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReviveOnce_(v3649, v1533);
    }
    else
    {
      v1534 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReviveOnce_(v3649, v1534);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rReviveOnce_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tReviveOnce_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5096);
    v5293 = 191;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5096) )
    {
      v4307 = operator new(0x50u);
      if ( v4307 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4307);
        v3457 = v1535;
      }
      else
      {
        v3457 = 0;
      }
      v4308 = v3457;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5096, v3457);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5096);
    }
    v1536 = b;
    v1537 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5096);
    v1538 = zmax<long>(v1537->tDuration, v1536);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5096)->tDuration = v1538;
    v1539 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5096);
    CFlag<480>::operator=|(&v1539->uFlag, &CTS_ReviveOnce);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5096);
  }
  v1540 = CFlag<480>::operator&(&p, &v4306, &CTS_AntiMagicShell);
  if ( CFlag<480>::operator bool(v1540) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1541 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAntiMagicShell_(v3649, v1541);
    }
    else
    {
      v1542 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAntiMagicShell_(v3649, v1542);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAntiMagicShell_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAntiMagicShell_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5095);
    v5293 = 192;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5095) )
    {
      v4304 = operator new(0x50u);
      if ( v4304 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4304);
        v3456 = v1543;
      }
      else
      {
        v3456 = 0;
      }
      v4305 = v3456;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5095, v3456);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5095);
    }
    v1544 = b;
    v1545 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5095);
    v1546 = zmax<long>(v1545->tDuration, v1544);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5095)->tDuration = v1546;
    v1547 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5095);
    CFlag<480>::operator=|(&v1547->uFlag, &CTS_AntiMagicShell);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5095);
  }
  v1548 = CFlag<480>::operator&(&p, &v4303, &CTS_EnrageCr);
  if ( CFlag<480>::operator bool(v1548) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1549 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEnrageCr_(v3649, v1549);
    }
    else
    {
      v1550 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEnrageCr_(v3649, v1550);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEnrageCr_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEnrageCr_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5094);
    v5293 = 193;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5094) )
    {
      v4301 = operator new(0x50u);
      if ( v4301 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4301);
        v3455 = v1551;
      }
      else
      {
        v3455 = 0;
      }
      v4302 = v3455;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5094, v3455);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5094);
    }
    v1552 = b;
    v1553 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5094);
    v1554 = zmax<long>(v1553->tDuration, v1552);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5094)->tDuration = v1554;
    v1555 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5094);
    CFlag<480>::operator=|(&v1555->uFlag, &CTS_EnrageCr);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5094);
  }
  v1556 = CFlag<480>::operator&(&p, &v4300, &CTS_EnrageCrDamMin);
  if ( CFlag<480>::operator bool(v1556) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1557 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEnrageCrDamMin_(v3649, v1557);
    }
    else
    {
      v1558 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEnrageCrDamMin_(v3649, v1558);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEnrageCrDamMin_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEnrageCrDamMin_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5093);
    v5293 = 194;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5093) )
    {
      v4298 = operator new(0x50u);
      if ( v4298 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4298);
        v3454 = v1559;
      }
      else
      {
        v3454 = 0;
      }
      v4299 = v3454;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5093, v3454);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5093);
    }
    v1560 = b;
    v1561 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5093);
    v1562 = zmax<long>(v1561->tDuration, v1560);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5093)->tDuration = v1562;
    v1563 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5093);
    CFlag<480>::operator=|(&v1563->uFlag, &CTS_EnrageCrDamMin);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5093);
  }
  v1564 = CFlag<480>::operator&(&p, &v4297, &CTS_BlessOfDarkness);
  if ( CFlag<480>::operator bool(v1564) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1565 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlessOfDarkness_(v3649, v1565);
    }
    else
    {
      v1566 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlessOfDarkness_(v3649, v1566);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBlessOfDarkness_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBlessOfDarkness_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5092);
    v5293 = 195;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5092) )
    {
      v4295 = operator new(0x50u);
      if ( v4295 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4295);
        v3453 = v1567;
      }
      else
      {
        v3453 = 0;
      }
      v4296 = v3453;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5092, v3453);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5092);
    }
    v1568 = b;
    v1569 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5092);
    v1570 = zmax<long>(v1569->tDuration, v1568);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5092)->tDuration = v1570;
    v1571 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5092);
    CFlag<480>::operator=|(&v1571->uFlag, &CTS_BlessOfDarkness);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5092);
  }
  v1572 = CFlag<480>::operator&(&p, &v4294, &CTS_LifeTidal);
  if ( CFlag<480>::operator bool(v1572) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1573 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLifeTidal_(v3649, v1573);
    }
    else
    {
      v1574 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLifeTidal_(v3649, v1574);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rLifeTidal_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tLifeTidal_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5091);
    v5293 = 196;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5091) )
    {
      v4292 = operator new(0x50u);
      if ( v4292 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4292);
        v3452 = v1575;
      }
      else
      {
        v3452 = 0;
      }
      v4293 = v3452;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5091, v3452);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5091);
    }
    v1576 = b;
    v1577 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5091);
    v1578 = zmax<long>(v1577->tDuration, v1576);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5091)->tDuration = v1578;
    v1579 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5091);
    CFlag<480>::operator=|(&v1579->uFlag, &CTS_LifeTidal);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5091);
  }
  v1580 = CFlag<480>::operator&(&p, &v4291, &CTS_Judgement);
  if ( CFlag<480>::operator bool(v1580) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1581 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nJudgement_(v3649, v1581);
    }
    else
    {
      v1582 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nJudgement_(v3649, v1582);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rJudgement_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tJudgement_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5090);
    v5293 = 197;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5090) )
    {
      v4289 = operator new(0x50u);
      if ( v4289 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4289);
        v3451 = v1583;
      }
      else
      {
        v3451 = 0;
      }
      v4290 = v3451;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5090, v3451);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5090);
    }
    v1584 = b;
    v1585 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5090);
    v1586 = zmax<long>(v1585->tDuration, v1584);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5090)->tDuration = v1586;
    v1587 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5090);
    CFlag<480>::operator=|(&v1587->uFlag, &CTS_Judgement);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5090);
  }
  v1588 = CFlag<480>::operator&(&p, &v4288, &CTS_DojangLuckyBonus);
  if ( CFlag<480>::operator bool(v1588) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1589 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDojangLuckyBonus_(v3649, v1589);
    }
    else
    {
      v1590 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDojangLuckyBonus_(v3649, v1590);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDojangLuckyBonus_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDojangLuckyBonus_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5089);
    v5293 = 198;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5089) )
    {
      v4286 = operator new(0x50u);
      if ( v4286 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4286);
        v3450 = v1591;
      }
      else
      {
        v3450 = 0;
      }
      v4287 = v3450;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5089, v3450);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5089);
    }
    v1592 = b;
    v1593 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5089);
    v1594 = zmax<long>(v1593->tDuration, v1592);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5089)->tDuration = v1594;
    v1595 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5089);
    CFlag<480>::operator=|(&v1595->uFlag, &CTS_DojangLuckyBonus);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5089);
  }
  v1596 = CFlag<480>::operator&(&p, &v4285, &CTS_HitCriDamR);
  if ( CFlag<480>::operator bool(v1596) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1597 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHitCriDamR_(v3649, v1597);
    }
    else
    {
      v1598 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHitCriDamR_(v3649, v1598);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHitCriDamR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHitCriDamR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5088);
    v5293 = 199;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5088) )
    {
      v4283 = operator new(0x50u);
      if ( v4283 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4283);
        v3449 = v1599;
      }
      else
      {
        v3449 = 0;
      }
      v4284 = v3449;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5088, v3449);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5088);
    }
    v1600 = b;
    v1601 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5088);
    v1602 = zmax<long>(v1601->tDuration, v1600);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5088)->tDuration = v1602;
    v1603 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5088);
    CFlag<480>::operator=|(&v1603->uFlag, &CTS_HitCriDamR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5088);
  }
  v1604 = CFlag<480>::operator&(&p, &v4282, &CTS_Larkness);
  if ( CFlag<480>::operator bool(v1604) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1605 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLarkness_(v3649, v1605);
    }
    else
    {
      v1606 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLarkness_(v3649, v1606);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rLarkness_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tLarkness_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5087);
    v5293 = 200;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5087) )
    {
      v4280 = operator new(0x50u);
      if ( v4280 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4280);
        v3448 = v1607;
      }
      else
      {
        v3448 = 0;
      }
      v4281 = v3448;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5087, v3448);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5087);
    }
    v1608 = b;
    v1609 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5087);
    v1610 = zmax<long>(v1609->tDuration, v1608);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5087)->tDuration = v1610;
    v1611 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5087);
    CFlag<480>::operator=|(&v1611->uFlag, &CTS_Larkness);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5087);
  }
  v1612 = CFlag<480>::operator&(&p, &v4279, &CTS_SmashStack);
  if ( CFlag<480>::operator bool(v1612) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1613 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSmashStack_(v3649, v1613);
    }
    else
    {
      v1614 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSmashStack_(v3649, v1614);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSmashStack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSmashStack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5086);
    v5293 = 201;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5086) )
    {
      v4277 = operator new(0x50u);
      if ( v4277 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4277);
        v3447 = v1615;
      }
      else
      {
        v3447 = 0;
      }
      v4278 = v3447;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5086, v3447);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5086);
    }
    v1616 = b;
    v1617 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5086);
    v1618 = zmax<long>(v1617->tDuration, v1616);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5086)->tDuration = v1618;
    v1619 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5086);
    CFlag<480>::operator=|(&v1619->uFlag, &CTS_SmashStack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5086);
  }
  v1620 = CFlag<480>::operator&(&p, &v4276, &CTS_ReshuffleSwitch);
  if ( CFlag<480>::operator bool(v1620) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1621 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReshuffleSwitch_(v3649, v1621);
    }
    else
    {
      v1622 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReshuffleSwitch_(v3649, v1622);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rReshuffleSwitch_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tReshuffleSwitch_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5085);
    v5293 = 202;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5085) )
    {
      v4274 = operator new(0x50u);
      if ( v4274 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4274);
        v3446 = v1623;
      }
      else
      {
        v3446 = 0;
      }
      v4275 = v3446;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5085, v3446);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5085);
    }
    v1624 = b;
    v1625 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5085);
    v1626 = zmax<long>(v1625->tDuration, v1624);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5085)->tDuration = v1626;
    v1627 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5085);
    CFlag<480>::operator=|(&v1627->uFlag, &CTS_ReshuffleSwitch);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5085);
  }
  v1628 = CFlag<480>::operator&(&p, &v4273, &CTS_SpecialAction);
  if ( CFlag<480>::operator bool(v1628) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1629 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSpecialAction_(v3649, v1629);
    }
    else
    {
      v1630 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSpecialAction_(v3649, v1630);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSpecialAction_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSpecialAction_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5084);
    v5293 = 203;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5084) )
    {
      v4271 = operator new(0x50u);
      if ( v4271 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4271);
        v3445 = v1631;
      }
      else
      {
        v3445 = 0;
      }
      v4272 = v3445;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5084, v3445);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5084);
    }
    v1632 = b;
    v1633 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5084);
    v1634 = zmax<long>(v1633->tDuration, v1632);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5084)->tDuration = v1634;
    v1635 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5084);
    CFlag<480>::operator=|(&v1635->uFlag, &CTS_SpecialAction);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5084);
  }
  v1636 = CFlag<480>::operator&(&p, &v4270, &CTS_ArcaneAim);
  if ( CFlag<480>::operator bool(v1636) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1637 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nArcaneAim_(v3649, v1637);
    }
    else
    {
      v1638 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nArcaneAim_(v3649, v1638);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rArcaneAim_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tArcaneAim_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5083);
    v5293 = 204;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5083) )
    {
      v4268 = operator new(0x50u);
      if ( v4268 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4268);
        v3444 = v1639;
      }
      else
      {
        v3444 = 0;
      }
      v4269 = v3444;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5083, v3444);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5083);
    }
    v1640 = b;
    v1641 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5083);
    v1642 = zmax<long>(v1641->tDuration, v1640);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5083)->tDuration = v1642;
    v1643 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5083);
    CFlag<480>::operator=|(&v1643->uFlag, &CTS_ArcaneAim);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5083);
  }
  v1644 = CFlag<480>::operator&(&p, &v4267, &CTS_StopForceAtomInfo);
  if ( CFlag<480>::operator bool(v1644) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1645 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStopForceAtomInfo_(v3649, v1645);
    }
    else
    {
      v1646 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStopForceAtomInfo_(v3649, v1646);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStopForceAtomInfo_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStopForceAtomInfo_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5082);
    v5293 = 205;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5082) )
    {
      v4265 = operator new(0x50u);
      if ( v4265 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4265);
        v3443 = v1647;
      }
      else
      {
        v3443 = 0;
      }
      v4266 = v3443;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5082, v3443);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5082);
    }
    v1648 = b;
    v1649 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5082);
    v1650 = zmax<long>(v1649->tDuration, v1648);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5082)->tDuration = v1650;
    v1651 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5082);
    CFlag<480>::operator=|(&v1651->uFlag, &CTS_StopForceAtomInfo);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5082);
  }
  v1652 = CFlag<480>::operator&(&p, &v4264, &CTS_SoulGazeCriDamR);
  if ( CFlag<480>::operator bool(v1652) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1653 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulGazeCriDamR_(v3649, v1653);
    }
    else
    {
      v1654 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulGazeCriDamR_(v3649, v1654);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulGazeCriDamR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSoulGazeCriDamR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5081);
    v5293 = 206;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5081) )
    {
      v4262 = operator new(0x50u);
      if ( v4262 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4262);
        v3442 = v1655;
      }
      else
      {
        v3442 = 0;
      }
      v4263 = v3442;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5081, v3442);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5081);
    }
    v1656 = b;
    v1657 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5081);
    v1658 = zmax<long>(v1657->tDuration, v1656);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5081)->tDuration = v1658;
    v1659 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5081);
    CFlag<480>::operator=|(&v1659->uFlag, &CTS_SoulGazeCriDamR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5081);
  }
  v1660 = CFlag<480>::operator&(&p, &v4261, &CTS_SoulRageCount);
  if ( CFlag<480>::operator bool(v1660) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1661 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulRageCount_(v3649, v1661);
    }
    else
    {
      v1662 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulRageCount_(v3649, v1662);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulRageCount_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSoulRageCount_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5080);
    v5293 = 207;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5080) )
    {
      v4259 = operator new(0x50u);
      if ( v4259 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4259);
        v3441 = v1663;
      }
      else
      {
        v3441 = 0;
      }
      v4260 = v3441;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5080, v3441);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5080);
    }
    v1664 = b;
    v1665 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5080);
    v1666 = zmax<long>(v1665->tDuration, v1664);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5080)->tDuration = v1666;
    v1667 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5080);
    CFlag<480>::operator=|(&v1667->uFlag, &CTS_SoulRageCount);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5080);
  }
  v1668 = CFlag<480>::operator&(&p, &v4258, &CTS_PowerTransferGauge);
  if ( CFlag<480>::operator bool(v1668) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1669 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPowerTransferGauge_(v3649, v1669);
    }
    else
    {
      v1670 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPowerTransferGauge_(v3649, v1670);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPowerTransferGauge_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPowerTransferGauge_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5079);
    v5293 = 208;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5079) )
    {
      v4256 = operator new(0x50u);
      if ( v4256 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4256);
        v3440 = v1671;
      }
      else
      {
        v3440 = 0;
      }
      v4257 = v3440;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5079, v3440);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5079);
    }
    v1672 = b;
    v1673 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5079);
    v1674 = zmax<long>(v1673->tDuration, v1672);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5079)->tDuration = v1674;
    v1675 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5079);
    CFlag<480>::operator=|(&v1675->uFlag, &CTS_PowerTransferGauge);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5079);
  }
  v1676 = CFlag<480>::operator&(&p, &v4255, &CTS_AffinitySlug);
  if ( CFlag<480>::operator bool(v1676) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1677 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAffinitySlug_(v3649, v1677);
    }
    else
    {
      v1678 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAffinitySlug_(v3649, v1678);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAffinitySlug_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAffinitySlug_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5078);
    v5293 = 209;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5078) )
    {
      v4253 = operator new(0x50u);
      if ( v4253 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4253);
        v3439 = v1679;
      }
      else
      {
        v3439 = 0;
      }
      v4254 = v3439;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5078, v3439);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5078);
    }
    v1680 = b;
    v1681 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5078);
    v1682 = zmax<long>(v1681->tDuration, v1680);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5078)->tDuration = v1682;
    v1683 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5078);
    CFlag<480>::operator=|(&v1683->uFlag, &CTS_AffinitySlug);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5078);
  }
  v1684 = CFlag<480>::operator&(&p, &v4252, &CTS_SoulExalt);
  if ( CFlag<480>::operator bool(v1684) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1685 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulExalt_(v3649, v1685);
    }
    else
    {
      v1686 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulExalt_(v3649, v1686);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulExalt_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSoulExalt_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5077);
    v5293 = 210;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5077) )
    {
      v4250 = operator new(0x50u);
      if ( v4250 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4250);
        v3438 = v1687;
      }
      else
      {
        v3438 = 0;
      }
      v4251 = v3438;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5077, v3438);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5077);
    }
    v1688 = b;
    v1689 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5077);
    v1690 = zmax<long>(v1689->tDuration, v1688);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5077)->tDuration = v1690;
    v1691 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5077);
    CFlag<480>::operator=|(&v1691->uFlag, &CTS_SoulExalt);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5077);
  }
  v1692 = CFlag<480>::operator&(&p, &v4249, &CTS_HiddenPieceOn);
  if ( CFlag<480>::operator bool(v1692) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1693 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHiddenPieceOn_(v3649, v1693);
    }
    else
    {
      v1694 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHiddenPieceOn_(v3649, v1694);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHiddenPieceOn_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHiddenPieceOn_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5076);
    v5293 = 211;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5076) )
    {
      v4247 = operator new(0x50u);
      if ( v4247 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4247);
        v3437 = v1695;
      }
      else
      {
        v3437 = 0;
      }
      v4248 = v3437;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5076, v3437);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5076);
    }
    v1696 = b;
    v1697 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5076);
    v1698 = zmax<long>(v1697->tDuration, v1696);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5076)->tDuration = v1698;
    v1699 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5076);
    CFlag<480>::operator=|(&v1699->uFlag, &CTS_HiddenPieceOn);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5076);
  }
  v1700 = CFlag<480>::operator&(&p, &v4246, &CTS_BossShield);
  if ( CFlag<480>::operator bool(v1700) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1701 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBossShield_(v3649, v1701);
    }
    else
    {
      v1702 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBossShield_(v3649, v1702);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBossShield_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBossShield_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5075);
    v5293 = 212;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5075) )
    {
      v4244 = operator new(0x50u);
      if ( v4244 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4244);
        v3436 = v1703;
      }
      else
      {
        v3436 = 0;
      }
      v4245 = v3436;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5075, v3436);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5075);
    }
    v1704 = b;
    v1705 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5075);
    v1706 = zmax<long>(v1705->tDuration, v1704);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5075)->tDuration = v1706;
    v1707 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5075);
    CFlag<480>::operator=|(&v1707->uFlag, &CTS_BossShield);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5075);
  }
  v1708 = CFlag<480>::operator&(&p, &v4243, &CTS_MobZoneState);
  if ( CFlag<480>::operator bool(v1708) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1709 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMobZoneState_(v3649, v1709);
    }
    else
    {
      v1710 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMobZoneState_(v3649, v1710);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMobZoneState_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMobZoneState_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5074);
    v5293 = 213;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5074) )
    {
      v4241 = operator new(0x50u);
      if ( v4241 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4241);
        v3435 = v1711;
      }
      else
      {
        v3435 = 0;
      }
      v4242 = v3435;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5074, v3435);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5074);
    }
    v1712 = b;
    v1713 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5074);
    v1714 = zmax<long>(v1713->tDuration, v1712);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5074)->tDuration = v1714;
    v1715 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5074);
    CFlag<480>::operator=|(&v1715->uFlag, &CTS_MobZoneState);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5074);
  }
  v1716 = CFlag<480>::operator&(&p, &v4240, &CTS_GiveMeHeal);
  if ( CFlag<480>::operator bool(v1716) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1717 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGiveMeHeal_(v3649, v1717);
    }
    else
    {
      v1718 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGiveMeHeal_(v3649, v1718);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rGiveMeHeal_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tGiveMeHeal_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5073);
    v5293 = 214;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5073) )
    {
      v4238 = operator new(0x50u);
      if ( v4238 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4238);
        v3434 = v1719;
      }
      else
      {
        v3434 = 0;
      }
      v4239 = v3434;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5073, v3434);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5073);
    }
    v1720 = b;
    v1721 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5073);
    v1722 = zmax<long>(v1721->tDuration, v1720);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5073)->tDuration = v1722;
    v1723 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5073);
    CFlag<480>::operator=|(&v1723->uFlag, &CTS_GiveMeHeal);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5073);
  }
  v1724 = CFlag<480>::operator&(&p, &v4237, &CTS_TouchMe);
  if ( CFlag<480>::operator bool(v1724) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1725 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTouchMe_(v3649, v1725);
    }
    else
    {
      v1726 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTouchMe_(v3649, v1726);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTouchMe_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTouchMe_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5072);
    v5293 = 215;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5072) )
    {
      v4235 = operator new(0x50u);
      if ( v4235 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4235);
        v3433 = v1727;
      }
      else
      {
        v3433 = 0;
      }
      v4236 = v3433;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5072, v3433);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5072);
    }
    v1728 = b;
    v1729 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5072);
    v1730 = zmax<long>(v1729->tDuration, v1728);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5072)->tDuration = v1730;
    v1731 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5072);
    CFlag<480>::operator=|(&v1731->uFlag, &CTS_TouchMe);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5072);
  }
  v1732 = CFlag<480>::operator&(&p, &v4234, &CTS_Contagion);
  if ( CFlag<480>::operator bool(v1732) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1733 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nContagion_(v3649, v1733);
    }
    else
    {
      v1734 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nContagion_(v3649, v1734);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rContagion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tContagion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5071);
    v5293 = 216;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5071) )
    {
      v4232 = operator new(0x50u);
      if ( v4232 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4232);
        v3432 = v1735;
      }
      else
      {
        v3432 = 0;
      }
      v4233 = v3432;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5071, v3432);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5071);
    }
    v1736 = b;
    v1737 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5071);
    v1738 = zmax<long>(v1737->tDuration, v1736);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5071)->tDuration = v1738;
    v1739 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5071);
    CFlag<480>::operator=|(&v1739->uFlag, &CTS_Contagion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5071);
  }
  v1740 = CFlag<480>::operator&(&p, &v4231, &CTS_ComboUnlimited);
  if ( CFlag<480>::operator bool(v1740) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1741 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboUnlimited_(v3649, v1741);
    }
    else
    {
      v1742 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboUnlimited_(v3649, v1742);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rComboUnlimited_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tComboUnlimited_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5070);
    v5293 = 217;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5070) )
    {
      v4229 = operator new(0x50u);
      if ( v4229 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4229);
        v3431 = v1743;
      }
      else
      {
        v3431 = 0;
      }
      v4230 = v3431;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5070, v3431);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5070);
    }
    v1744 = b;
    v1745 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5070);
    v1746 = zmax<long>(v1745->tDuration, v1744);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5070)->tDuration = v1746;
    v1747 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5070);
    CFlag<480>::operator=|(&v1747->uFlag, &CTS_ComboUnlimited);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5070);
  }
  v1748 = CFlag<480>::operator&(&p, &v4228, &CTS_IgnorePCounter);
  if ( CFlag<480>::operator bool(v1748) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1749 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnorePCounter_(v3649, v1749);
    }
    else
    {
      v1750 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnorePCounter_(v3649, v1750);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIgnorePCounter_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIgnorePCounter_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5069);
    v5293 = 218;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5069) )
    {
      v4226 = operator new(0x50u);
      if ( v4226 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4226);
        v3430 = v1751;
      }
      else
      {
        v3430 = 0;
      }
      v4227 = v3430;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5069, v3430);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5069);
    }
    v1752 = b;
    v1753 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5069);
    v1754 = zmax<long>(v1753->tDuration, v1752);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5069)->tDuration = v1754;
    v1755 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5069);
    CFlag<480>::operator=|(&v1755->uFlag, &CTS_IgnorePCounter);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5069);
  }
  v1756 = CFlag<480>::operator&(&p, &v4225, &CTS_IgnoreAllCounter);
  if ( CFlag<480>::operator bool(v1756) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1757 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreAllCounter_(v3649, v1757);
    }
    else
    {
      v1758 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreAllCounter_(v3649, v1758);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIgnoreAllCounter_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIgnoreAllCounter_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5068);
    v5293 = 219;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5068) )
    {
      v4223 = operator new(0x50u);
      if ( v4223 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4223);
        v3429 = v1759;
      }
      else
      {
        v3429 = 0;
      }
      v4224 = v3429;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5068, v3429);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5068);
    }
    v1760 = b;
    v1761 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5068);
    v1762 = zmax<long>(v1761->tDuration, v1760);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5068)->tDuration = v1762;
    v1763 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5068);
    CFlag<480>::operator=|(&v1763->uFlag, &CTS_IgnoreAllCounter);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5068);
  }
  v1764 = CFlag<480>::operator&(&p, &v4222, &CTS_IgnorePImmune);
  if ( CFlag<480>::operator bool(v1764) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1765 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnorePImmune_(v3649, v1765);
    }
    else
    {
      v1766 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnorePImmune_(v3649, v1766);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIgnorePImmune_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIgnorePImmune_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5067);
    v5293 = 220;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5067) )
    {
      v4220 = operator new(0x50u);
      if ( v4220 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4220);
        v3428 = v1767;
      }
      else
      {
        v3428 = 0;
      }
      v4221 = v3428;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5067, v3428);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5067);
    }
    v1768 = b;
    v1769 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5067);
    v1770 = zmax<long>(v1769->tDuration, v1768);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5067)->tDuration = v1770;
    v1771 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5067);
    CFlag<480>::operator=|(&v1771->uFlag, &CTS_IgnorePImmune);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5067);
  }
  v1772 = CFlag<480>::operator&(&p, &v4219, &CTS_IgnoreAllImmune);
  if ( CFlag<480>::operator bool(v1772) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1773 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreAllImmune_(v3649, v1773);
    }
    else
    {
      v1774 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreAllImmune_(v3649, v1774);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIgnoreAllImmune_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIgnoreAllImmune_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5066);
    v5293 = 221;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5066) )
    {
      v4217 = operator new(0x50u);
      if ( v4217 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4217);
        v3427 = v1775;
      }
      else
      {
        v3427 = 0;
      }
      v4218 = v3427;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5066, v3427);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5066);
    }
    v1776 = b;
    v1777 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5066);
    v1778 = zmax<long>(v1777->tDuration, v1776);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5066)->tDuration = v1778;
    v1779 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5066);
    CFlag<480>::operator=|(&v1779->uFlag, &CTS_IgnoreAllImmune);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5066);
  }
  v1780 = CFlag<480>::operator&(&p, &v4216, &CTS_FinalJudgement);
  if ( CFlag<480>::operator bool(v1780) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1781 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFinalJudgement_(v3649, v1781);
    }
    else
    {
      v1782 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFinalJudgement_(v3649, v1782);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFinalJudgement_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFinalJudgement_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5065);
    v5293 = 222;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5065) )
    {
      v4214 = operator new(0x50u);
      if ( v4214 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4214);
        v3426 = v1783;
      }
      else
      {
        v3426 = 0;
      }
      v4215 = v3426;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5065, v3426);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5065);
    }
    v1784 = b;
    v1785 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5065);
    v1786 = zmax<long>(v1785->tDuration, v1784);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5065)->tDuration = v1786;
    v1787 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5065);
    CFlag<480>::operator=|(&v1787->uFlag, &CTS_FinalJudgement);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5065);
  }
  v1788 = CFlag<480>::operator&(&p, &v4213, &CTS_KnightsAura);
  if ( CFlag<480>::operator bool(v1788) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1789 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKnightsAura_(v3649, v1789);
    }
    else
    {
      v1790 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKnightsAura_(v3649, v1790);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKnightsAura_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKnightsAura_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5064);
    v5293 = 223;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5064) )
    {
      v4211 = operator new(0x50u);
      if ( v4211 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4211);
        v3425 = v1791;
      }
      else
      {
        v3425 = 0;
      }
      v4212 = v3425;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5064, v3425);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5064);
    }
    v1792 = b;
    v1793 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5064);
    v1794 = zmax<long>(v1793->tDuration, v1792);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5064)->tDuration = v1794;
    v1795 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5064);
    CFlag<480>::operator=|(&v1795->uFlag, &CTS_KnightsAura);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5064);
  }
  v1796 = CFlag<480>::operator&(&p, &v4210, &CTS_IceAura);
  if ( CFlag<480>::operator bool(v1796) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1797 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIceAura_(v3649, v1797);
    }
    else
    {
      v1798 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIceAura_(v3649, v1798);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIceAura_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIceAura_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5063);
    v5293 = 224;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5063) )
    {
      v4208 = operator new(0x50u);
      if ( v4208 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4208);
        v3424 = v1799;
      }
      else
      {
        v3424 = 0;
      }
      v4209 = v3424;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5063, v3424);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5063);
    }
    v1800 = b;
    v1801 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5063);
    v1802 = zmax<long>(v1801->tDuration, v1800);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5063)->tDuration = v1802;
    v1803 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5063);
    CFlag<480>::operator=|(&v1803->uFlag, &CTS_IceAura);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5063);
  }
  v1804 = CFlag<480>::operator&(&p, &v4207, &CTS_FireAura);
  if ( CFlag<480>::operator bool(v1804) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1805 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFireAura_(v3649, v1805);
    }
    else
    {
      v1806 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFireAura_(v3649, v1806);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFireAura_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFireAura_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5062);
    v5293 = 225;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5062) )
    {
      v4205 = operator new(0x50u);
      if ( v4205 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4205);
        v3423 = v1807;
      }
      else
      {
        v3423 = 0;
      }
      v4206 = v3423;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5062, v3423);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5062);
    }
    v1808 = b;
    v1809 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5062);
    v1810 = zmax<long>(v1809->tDuration, v1808);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5062)->tDuration = v1810;
    v1811 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5062);
    CFlag<480>::operator=|(&v1811->uFlag, &CTS_FireAura);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5062);
  }
  v1812 = CFlag<480>::operator&(&p, &v4204, &CTS_VengeanceOfAngel);
  if ( CFlag<480>::operator bool(v1812) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1813 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVengeanceOfAngel_(v3649, v1813);
    }
    else
    {
      v1814 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nVengeanceOfAngel_(v3649, v1814);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rVengeanceOfAngel_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tVengeanceOfAngel_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5061);
    v5293 = 226;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5061) )
    {
      v4202 = operator new(0x50u);
      if ( v4202 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4202);
        v3422 = v1815;
      }
      else
      {
        v3422 = 0;
      }
      v4203 = v3422;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5061, v3422);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5061);
    }
    v1816 = b;
    v1817 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5061);
    v1818 = zmax<long>(v1817->tDuration, v1816);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5061)->tDuration = v1818;
    v1819 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5061);
    CFlag<480>::operator=|(&v1819->uFlag, &CTS_VengeanceOfAngel);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5061);
  }
  v1820 = CFlag<480>::operator&(&p, &v4201, &CTS_HeavensDoor);
  if ( CFlag<480>::operator bool(v1820) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1821 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHeavensDoor_(v3649, v1821);
    }
    else
    {
      v1822 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHeavensDoor_(v3649, v1822);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHeavensDoor_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHeavensDoor_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5060);
    v5293 = 227;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5060) )
    {
      v4199 = operator new(0x50u);
      if ( v4199 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4199);
        v3421 = v1823;
      }
      else
      {
        v3421 = 0;
      }
      v4200 = v3421;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5060, v3421);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5060);
    }
    v1824 = b;
    v1825 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5060);
    v1826 = zmax<long>(v1825->tDuration, v1824);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5060)->tDuration = v1826;
    v1827 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5060);
    CFlag<480>::operator=|(&v1827->uFlag, &CTS_HeavensDoor);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5060);
  }
  v1828 = CFlag<480>::operator&(&p, &v4198, &CTS_Preparation);
  if ( CFlag<480>::operator bool(v1828) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1829 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPreparation_(v3649, v1829);
    }
    else
    {
      v1830 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPreparation_(v3649, v1830);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPreparation_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPreparation_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5059);
    v5293 = 228;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5059) )
    {
      v4196 = operator new(0x50u);
      if ( v4196 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4196);
        v3420 = v1831;
      }
      else
      {
        v3420 = 0;
      }
      v4197 = v3420;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5059, v3420);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5059);
    }
    v1832 = b;
    v1833 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5059);
    v1834 = zmax<long>(v1833->tDuration, v1832);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5059)->tDuration = v1834;
    v1835 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5059);
    CFlag<480>::operator=|(&v1835->uFlag, &CTS_Preparation);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5059);
  }
  v1836 = CFlag<480>::operator&(&p, &v4195, &CTS_BullsEye);
  if ( CFlag<480>::operator bool(v1836) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1837 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBullsEye_(v3649, v1837);
    }
    else
    {
      v1838 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBullsEye_(v3649, v1838);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBullsEye_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBullsEye_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5058);
    v5293 = 229;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5058) )
    {
      v4193 = operator new(0x50u);
      if ( v4193 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4193);
        v3419 = v1839;
      }
      else
      {
        v3419 = 0;
      }
      v4194 = v3419;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5058, v3419);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5058);
    }
    v1840 = b;
    v1841 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5058);
    v1842 = zmax<long>(v1841->tDuration, v1840);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5058)->tDuration = v1842;
    v1843 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5058);
    CFlag<480>::operator=|(&v1843->uFlag, &CTS_BullsEye);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5058);
  }
  v1844 = CFlag<480>::operator&(&p, &v4192, &CTS_IncEffectHPPotion);
  if ( CFlag<480>::operator bool(v1844) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1845 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncEffectHPPotion_(v3649, v1845);
    }
    else
    {
      v1846 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncEffectHPPotion_(v3649, v1846);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncEffectHPPotion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncEffectHPPotion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5057);
    v5293 = 230;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5057) )
    {
      v4190 = operator new(0x50u);
      if ( v4190 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4190);
        v3418 = v1847;
      }
      else
      {
        v3418 = 0;
      }
      v4191 = v3418;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5057, v3418);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5057);
    }
    v1848 = b;
    v1849 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5057);
    v1850 = zmax<long>(v1849->tDuration, v1848);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5057)->tDuration = v1850;
    v1851 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5057);
    CFlag<480>::operator=|(&v1851->uFlag, &CTS_IncEffectHPPotion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5057);
  }
  v1852 = CFlag<480>::operator&(&p, &v4189, &CTS_IncEffectMPPotion);
  if ( CFlag<480>::operator bool(v1852) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1853 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncEffectMPPotion_(v3649, v1853);
    }
    else
    {
      v1854 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncEffectMPPotion_(v3649, v1854);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncEffectMPPotion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncEffectMPPotion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5056);
    v5293 = 231;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5056) )
    {
      v4187 = operator new(0x50u);
      if ( v4187 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4187);
        v3417 = v1855;
      }
      else
      {
        v3417 = 0;
      }
      v4188 = v3417;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5056, v3417);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5056);
    }
    v1856 = b;
    v1857 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5056);
    v1858 = zmax<long>(v1857->tDuration, v1856);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5056)->tDuration = v1858;
    v1859 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5056);
    CFlag<480>::operator=|(&v1859->uFlag, &CTS_IncEffectMPPotion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5056);
  }
  v1860 = CFlag<480>::operator&(&p, &v4186, &CTS_SoulMP);
  if ( CFlag<480>::operator bool(v1860) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1861 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulMP_(v3649, v1861);
    }
    else
    {
      v1862 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulMP_(v3649, v1862);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulMP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSoulMP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5055);
    v5293 = 232;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5055) )
    {
      v4184 = operator new(0x50u);
      if ( v4184 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4184);
        v3416 = v1863;
      }
      else
      {
        v3416 = 0;
      }
      v4185 = v3416;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5055, v3416);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5055);
    }
    v1864 = b;
    v1865 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5055);
    v1866 = zmax<long>(v1865->tDuration, v1864);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5055)->tDuration = v1866;
    v1867 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5055);
    CFlag<480>::operator=|(&v1867->uFlag, &CTS_SoulMP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5055);
  }
  v1868 = CFlag<480>::operator&(&p, &v4183, &CTS_FullSoulMP);
  if ( CFlag<480>::operator bool(v1868) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1869 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFullSoulMP_(v3649, v1869);
    }
    else
    {
      v1870 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFullSoulMP_(v3649, v1870);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFullSoulMP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFullSoulMP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5054);
    v5293 = 233;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5054) )
    {
      v4181 = operator new(0x50u);
      if ( v4181 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4181);
        v3415 = v1871;
      }
      else
      {
        v3415 = 0;
      }
      v4182 = v3415;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5054, v3415);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5054);
    }
    v1872 = b;
    v1873 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5054);
    v1874 = zmax<long>(v1873->tDuration, v1872);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5054)->tDuration = v1874;
    v1875 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5054);
    CFlag<480>::operator=|(&v1875->uFlag, &CTS_FullSoulMP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5054);
  }
  v1876 = CFlag<480>::operator&(&p, &v4180, &CTS_SoulSkillDamageUp);
  if ( CFlag<480>::operator bool(v1876) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1877 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulSkillDamageUp_(v3649, v1877);
    }
    else
    {
      v1878 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSoulSkillDamageUp_(v3649, v1878);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulSkillDamageUp_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSoulSkillDamageUp_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5053);
    v5293 = 234;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5053) )
    {
      v4178 = operator new(0x50u);
      if ( v4178 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4178);
        v3414 = v1879;
      }
      else
      {
        v3414 = 0;
      }
      v4179 = v3414;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5053, v3414);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5053);
    }
    v1880 = b;
    v1881 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5053);
    v1882 = zmax<long>(v1881->tDuration, v1880);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5053)->tDuration = v1882;
    v1883 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5053);
    CFlag<480>::operator=|(&v1883->uFlag, &CTS_SoulSkillDamageUp);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5053);
  }
  v1884 = CFlag<480>::operator&(&p, &v4177, &CTS_BleedingToxin);
  if ( CFlag<480>::operator bool(v1884) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1885 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBleedingToxin_(v3649, v1885);
    }
    else
    {
      v1886 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBleedingToxin_(v3649, v1886);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBleedingToxin_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBleedingToxin_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5052);
    v5293 = 235;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5052) )
    {
      v4175 = operator new(0x50u);
      if ( v4175 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4175);
        v3413 = v1887;
      }
      else
      {
        v3413 = 0;
      }
      v4176 = v3413;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5052, v3413);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5052);
    }
    v1888 = b;
    v1889 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5052);
    v1890 = zmax<long>(v1889->tDuration, v1888);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5052)->tDuration = v1890;
    v1891 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5052);
    CFlag<480>::operator=|(&v1891->uFlag, &CTS_BleedingToxin);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5052);
  }
  v1892 = CFlag<480>::operator&(&p, &v4174, &CTS_IgnoreMobDamR);
  if ( CFlag<480>::operator bool(v1892) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1893 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreMobDamR_(v3649, v1893);
    }
    else
    {
      v1894 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreMobDamR_(v3649, v1894);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIgnoreMobDamR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIgnoreMobDamR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5051);
    v5293 = 236;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5051) )
    {
      v4172 = operator new(0x50u);
      if ( v4172 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4172);
        v3412 = v1895;
      }
      else
      {
        v3412 = 0;
      }
      v4173 = v3412;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5051, v3412);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5051);
    }
    v1896 = b;
    v1897 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5051);
    v1898 = zmax<long>(v1897->tDuration, v1896);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5051)->tDuration = v1898;
    v1899 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5051);
    CFlag<480>::operator=|(&v1899->uFlag, &CTS_IgnoreMobDamR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5051);
  }
  v1900 = CFlag<480>::operator&(&p, &v4171, &CTS_Asura);
  if ( CFlag<480>::operator bool(v1900) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1901 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAsura_(v3649, v1901);
    }
    else
    {
      v1902 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAsura_(v3649, v1902);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAsura_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAsura_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5050);
    v5293 = 237;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5050) )
    {
      v4169 = operator new(0x50u);
      if ( v4169 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4169);
        v3411 = v1903;
      }
      else
      {
        v3411 = 0;
      }
      v4170 = v3411;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5050, v3411);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5050);
    }
    v1904 = b;
    v1905 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5050);
    v1906 = zmax<long>(v1905->tDuration, v1904);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5050)->tDuration = v1906;
    v1907 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5050);
    CFlag<480>::operator=|(&v1907->uFlag, &CTS_Asura);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5050);
  }
  v1908 = CFlag<480>::operator&(&p, &v4168, &CTS_FlipTheCoin);
  if ( CFlag<480>::operator bool(v1908) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1909 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFlipTheCoin_(v3649, v1909);
    }
    else
    {
      v1910 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFlipTheCoin_(v3649, v1910);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFlipTheCoin_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFlipTheCoin_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5049);
    v5293 = 238;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5049) )
    {
      v4166 = operator new(0x50u);
      if ( v4166 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4166);
        v3410 = v1911;
      }
      else
      {
        v3410 = 0;
      }
      v4167 = v3410;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5049, v3410);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5049);
    }
    v1912 = b;
    v1913 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5049);
    v1914 = zmax<long>(v1913->tDuration, v1912);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5049)->tDuration = v1914;
    v1915 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5049);
    CFlag<480>::operator=|(&v1915->uFlag, &CTS_FlipTheCoin);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5049);
  }
  v1916 = CFlag<480>::operator&(&p, &v4165, &CTS_UnityOfPower);
  if ( CFlag<480>::operator bool(v1916) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1917 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nUnityOfPower_(v3649, v1917);
    }
    else
    {
      v1918 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nUnityOfPower_(v3649, v1918);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rUnityOfPower_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tUnityOfPower_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5048);
    v5293 = 239;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5048) )
    {
      v4163 = operator new(0x50u);
      if ( v4163 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4163);
        v3409 = v1919;
      }
      else
      {
        v3409 = 0;
      }
      v4164 = v3409;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5048, v3409);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5048);
    }
    v1920 = b;
    v1921 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5048);
    v1922 = zmax<long>(v1921->tDuration, v1920);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5048)->tDuration = v1922;
    v1923 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5048);
    CFlag<480>::operator=|(&v1923->uFlag, &CTS_UnityOfPower);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5048);
  }
  v1924 = CFlag<480>::operator&(&p, &v4162, &CTS_Stimulate);
  if ( CFlag<480>::operator bool(v1924) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1925 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStimulate_(v3649, v1925);
    }
    else
    {
      v1926 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStimulate_(v3649, v1926);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStimulate_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStimulate_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5047);
    v5293 = 240;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5047) )
    {
      v4160 = operator new(0x50u);
      if ( v4160 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4160);
        v3408 = v1927;
      }
      else
      {
        v3408 = 0;
      }
      v4161 = v3408;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5047, v3408);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5047);
    }
    v1928 = b;
    v1929 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5047);
    v1930 = zmax<long>(v1929->tDuration, v1928);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5047)->tDuration = v1930;
    v1931 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5047);
    CFlag<480>::operator=|(&v1931->uFlag, &CTS_Stimulate);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5047);
  }
  v1932 = CFlag<480>::operator&(&p, &v4159, &CTS_ReturnTeleport);
  if ( CFlag<480>::operator bool(v1932) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1933 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReturnTeleport_(v3649, v1933);
    }
    else
    {
      v1934 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReturnTeleport_(v3649, v1934);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rReturnTeleport_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tReturnTeleport_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5046);
    v5293 = 241;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5046) )
    {
      v4157 = operator new(0x50u);
      if ( v4157 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4157);
        v3407 = v1935;
      }
      else
      {
        v3407 = 0;
      }
      v4158 = v3407;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5046, v3407);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5046);
    }
    v1936 = b;
    v1937 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5046);
    v1938 = zmax<long>(v1937->tDuration, v1936);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5046)->tDuration = v1938;
    v1939 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5046);
    CFlag<480>::operator=|(&v1939->uFlag, &CTS_ReturnTeleport);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5046);
  }
  v1940 = CFlag<480>::operator&(&p, &v4156, &CTS_CapDebuff);
  if ( CFlag<480>::operator bool(v1940) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1941 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCapDebuff_(v3649, v1941);
    }
    else
    {
      v1942 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCapDebuff_(v3649, v1942);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCapDebuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCapDebuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5045);
    v5293 = 242;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5045) )
    {
      v4154 = operator new(0x50u);
      if ( v4154 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4154);
        v3406 = v1943;
      }
      else
      {
        v3406 = 0;
      }
      v4155 = v3406;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5045, v3406);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5045);
    }
    v1944 = b;
    v1945 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5045);
    v1946 = zmax<long>(v1945->tDuration, v1944);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5045)->tDuration = v1946;
    v1947 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5045);
    CFlag<480>::operator=|(&v1947->uFlag, &CTS_CapDebuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5045);
  }
  v1948 = CFlag<480>::operator&(&p, &v4153, &CTS_DropRIncrease);
  if ( CFlag<480>::operator bool(v1948) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1949 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDropRIncrease_(v3649, v1949);
    }
    else
    {
      v1950 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDropRIncrease_(v3649, v1950);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDropRIncrease_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDropRIncrease_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5044);
    v5293 = 243;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5044) )
    {
      v4151 = operator new(0x50u);
      if ( v4151 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4151);
        v3405 = v1951;
      }
      else
      {
        v3405 = 0;
      }
      v4152 = v3405;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5044, v3405);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5044);
    }
    v1952 = b;
    v1953 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5044);
    v1954 = zmax<long>(v1953->tDuration, v1952);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5044)->tDuration = v1954;
    v1955 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5044);
    CFlag<480>::operator=|(&v1955->uFlag, &CTS_DropRIncrease);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5044);
  }
  v1956 = CFlag<480>::operator&(&p, &v4150, &CTS_IgnoreMobpdpR);
  if ( CFlag<480>::operator bool(v1956) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1957 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreMobpdpR_(v3649, v1957);
    }
    else
    {
      v1958 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnoreMobpdpR_(v3649, v1958);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIgnoreMobpdpR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIgnoreMobpdpR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5043);
    v5293 = 244;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5043) )
    {
      v4148 = operator new(0x50u);
      if ( v4148 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4148);
        v3404 = v1959;
      }
      else
      {
        v3404 = 0;
      }
      v4149 = v3404;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5043, v3404);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5043);
    }
    v1960 = b;
    v1961 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5043);
    v1962 = zmax<long>(v1961->tDuration, v1960);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5043)->tDuration = v1962;
    v1963 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5043);
    CFlag<480>::operator=|(&v1963->uFlag, &CTS_IgnoreMobpdpR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5043);
  }
  v1964 = CFlag<480>::operator&(&p, &v4147, &CTS_BdR);
  if ( CFlag<480>::operator bool(v1964) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1965 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBdR_(v3649, v1965);
    }
    else
    {
      v1966 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBdR_(v3649, v1966);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBdR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBdR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5042);
    v5293 = 245;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5042) )
    {
      v4145 = operator new(0x50u);
      if ( v4145 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4145);
        v3403 = v1967;
      }
      else
      {
        v3403 = 0;
      }
      v4146 = v3403;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5042, v3403);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5042);
    }
    v1968 = b;
    v1969 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5042);
    v1970 = zmax<long>(v1969->tDuration, v1968);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5042)->tDuration = v1970;
    v1971 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5042);
    CFlag<480>::operator=|(&v1971->uFlag, &CTS_BdR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5042);
  }
  v1972 = CFlag<480>::operator&(&p, &v4144, &CTS_Exceed);
  if ( CFlag<480>::operator bool(v1972) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1973 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExceed_(v3649, v1973);
    }
    else
    {
      v1974 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExceed_(v3649, v1974);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rExceed_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tExceed_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5041);
    v5293 = 246;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5041) )
    {
      v4142 = operator new(0x50u);
      if ( v4142 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4142);
        v3402 = v1975;
      }
      else
      {
        v3402 = 0;
      }
      v4143 = v3402;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5041, v3402);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5041);
    }
    v1976 = b;
    v1977 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5041);
    v1978 = zmax<long>(v1977->tDuration, v1976);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5041)->tDuration = v1978;
    v1979 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5041);
    CFlag<480>::operator=|(&v1979->uFlag, &CTS_Exceed);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5041);
  }
  v1980 = CFlag<480>::operator&(&p, &v4141, &CTS_DiabolikRecovery);
  if ( CFlag<480>::operator bool(v1980) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1981 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDiabolikRecovery_(v3649, v1981);
    }
    else
    {
      v1982 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDiabolikRecovery_(v3649, v1982);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDiabolikRecovery_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDiabolikRecovery_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5040);
    v5293 = 247;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5040) )
    {
      v4139 = operator new(0x50u);
      if ( v4139 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4139);
        v3401 = v1983;
      }
      else
      {
        v3401 = 0;
      }
      v4140 = v3401;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5040, v3401);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5040);
    }
    v1984 = b;
    v1985 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5040);
    v1986 = zmax<long>(v1985->tDuration, v1984);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5040)->tDuration = v1986;
    v1987 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5040);
    CFlag<480>::operator=|(&v1987->uFlag, &CTS_DiabolikRecovery);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5040);
  }
  v1988 = CFlag<480>::operator&(&p, &v4138, &CTS_FinalAttackProp);
  if ( CFlag<480>::operator bool(v1988) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1989 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFinalAttackProp_(v3649, v1989);
    }
    else
    {
      v1990 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFinalAttackProp_(v3649, v1990);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFinalAttackProp_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFinalAttackProp_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5039);
    v5293 = 248;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5039) )
    {
      v4136 = operator new(0x50u);
      if ( v4136 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4136);
        v3400 = v1991;
      }
      else
      {
        v3400 = 0;
      }
      v4137 = v3400;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5039, v3400);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5039);
    }
    v1992 = b;
    v1993 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5039);
    v1994 = zmax<long>(v1993->tDuration, v1992);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5039)->tDuration = v1994;
    v1995 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5039);
    CFlag<480>::operator=|(&v1995->uFlag, &CTS_FinalAttackProp);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5039);
  }
  v1996 = CFlag<480>::operator&(&p, &v4135, &CTS_ExceedOverload);
  if ( CFlag<480>::operator bool(v1996) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v1997 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExceedOverload_(v3649, v1997);
    }
    else
    {
      v1998 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExceedOverload_(v3649, v1998);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rExceedOverload_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tExceedOverload_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5038);
    v5293 = 249;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5038) )
    {
      v4133 = operator new(0x50u);
      if ( v4133 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4133);
        v3399 = v1999;
      }
      else
      {
        v3399 = 0;
      }
      v4134 = v3399;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5038, v3399);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5038);
    }
    v2000 = b;
    v2001 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5038);
    v2002 = zmax<long>(v2001->tDuration, v2000);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5038)->tDuration = v2002;
    v2003 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5038);
    CFlag<480>::operator=|(&v2003->uFlag, &CTS_ExceedOverload);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5038);
  }
  v2004 = CFlag<480>::operator&(&p, &v4132, &CTS_DevilishPower);
  if ( CFlag<480>::operator bool(v2004) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2005 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDevilishPower_(v3649, v2005);
    }
    else
    {
      v2006 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDevilishPower_(v3649, v2006);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDevilishPower_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDevilishPower_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5037);
    v5293 = 250;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5037) )
    {
      v4130 = operator new(0x50u);
      if ( v4130 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4130);
        v3398 = v2007;
      }
      else
      {
        v3398 = 0;
      }
      v4131 = v3398;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5037, v3398);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5037);
    }
    v2008 = b;
    v2009 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5037);
    v2010 = zmax<long>(v2009->tDuration, v2008);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5037)->tDuration = v2010;
    v2011 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5037);
    CFlag<480>::operator=|(&v2011->uFlag, &CTS_DevilishPower);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5037);
  }
  v2012 = CFlag<480>::operator&(&p, &v4129, &CTS_OverloadCount);
  if ( CFlag<480>::operator bool(v2012) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2013 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nOverloadCount_(v3649, v2013);
    }
    else
    {
      v2014 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nOverloadCount_(v3649, v2014);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rOverloadCount_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tOverloadCount_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5036);
    v5293 = 251;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5036) )
    {
      v4127 = operator new(0x50u);
      if ( v4127 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4127);
        v3397 = v2015;
      }
      else
      {
        v3397 = 0;
      }
      v4128 = v3397;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5036, v3397);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5036);
    }
    v2016 = b;
    v2017 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5036);
    v2018 = zmax<long>(v2017->tDuration, v2016);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5036)->tDuration = v2018;
    v2019 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5036);
    CFlag<480>::operator=|(&v2019->uFlag, &CTS_OverloadCount);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5036);
  }
  v2020 = CFlag<480>::operator&(&p, &v4126, &CTS_BuckShot);
  if ( CFlag<480>::operator bool(v2020) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2021 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBuckShot_(v3649, v2021);
    }
    else
    {
      v2022 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBuckShot_(v3649, v2022);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBuckShot_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBuckShot_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5035);
    v5293 = 252;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5035) )
    {
      v4124 = operator new(0x50u);
      if ( v4124 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4124);
        v3396 = v2023;
      }
      else
      {
        v3396 = 0;
      }
      v4125 = v3396;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5035, v3396);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5035);
    }
    v2024 = b;
    v2025 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5035);
    v2026 = zmax<long>(v2025->tDuration, v2024);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5035)->tDuration = v2026;
    v2027 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5035);
    CFlag<480>::operator=|(&v2027->uFlag, &CTS_BuckShot);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5035);
  }
  v2028 = CFlag<480>::operator&(&p, &v4123, &CTS_FireBomb);
  if ( CFlag<480>::operator bool(v2028) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2029 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFireBomb_(v3649, v2029);
    }
    else
    {
      v2030 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFireBomb_(v3649, v2030);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFireBomb_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFireBomb_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5034);
    v5293 = 253;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5034) )
    {
      v4121 = operator new(0x50u);
      if ( v4121 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4121);
        v3395 = v2031;
      }
      else
      {
        v3395 = 0;
      }
      v4122 = v3395;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5034, v3395);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5034);
    }
    v2032 = b;
    v2033 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5034);
    v2034 = zmax<long>(v2033->tDuration, v2032);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5034)->tDuration = v2034;
    v2035 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5034);
    CFlag<480>::operator=|(&v2035->uFlag, &CTS_FireBomb);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5034);
  }
  v2036 = CFlag<480>::operator&(&p, &v4120, &CTS_HalfstatByDebuff);
  if ( CFlag<480>::operator bool(v2036) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2037 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHalfstatByDebuff_(v3649, v2037);
    }
    else
    {
      v2038 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHalfstatByDebuff_(v3649, v2038);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHalfstatByDebuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHalfstatByDebuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5033);
    v5293 = 254;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5033) )
    {
      v4118 = operator new(0x50u);
      if ( v4118 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4118);
        v3394 = v2039;
      }
      else
      {
        v3394 = 0;
      }
      v4119 = v3394;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5033, v3394);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5033);
    }
    v2040 = b;
    v2041 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5033);
    v2042 = zmax<long>(v2041->tDuration, v2040);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5033)->tDuration = v2042;
    v2043 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5033);
    CFlag<480>::operator=|(&v2043->uFlag, &CTS_HalfstatByDebuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5033);
  }
  v2044 = CFlag<480>::operator&(&p, &v4117, &CTS_SurplusSupply);
  if ( CFlag<480>::operator bool(v2044) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2045 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSurplusSupply_(v3649, v2045);
    }
    else
    {
      v2046 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSurplusSupply_(v3649, v2046);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSurplusSupply_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSurplusSupply_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5032);
    v5293 = 255;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5032) )
    {
      v4115 = operator new(0x50u);
      if ( v4115 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4115);
        v3393 = v2047;
      }
      else
      {
        v3393 = 0;
      }
      v4116 = v3393;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5032, v3393);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5032);
    }
    v2048 = b;
    v2049 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5032);
    v2050 = zmax<long>(v2049->tDuration, v2048);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5032)->tDuration = v2050;
    v2051 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5032);
    CFlag<480>::operator=|(&v2051->uFlag, &CTS_SurplusSupply);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5032);
  }
  v2052 = CFlag<480>::operator&(&p, &v4114, &CTS_SetBaseDamage);
  if ( CFlag<480>::operator bool(v2052) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2053 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSetBaseDamage_(v3649, v2053);
    }
    else
    {
      v2054 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSetBaseDamage_(v3649, v2054);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSetBaseDamage_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSetBaseDamage_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5031);
    v5293 = 256;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5031) )
    {
      v4112 = operator new(0x50u);
      if ( v4112 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4112);
        v3392 = v2055;
      }
      else
      {
        v3392 = 0;
      }
      v4113 = v3392;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5031, v3392);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5031);
    }
    v2056 = b;
    v2057 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5031);
    v2058 = zmax<long>(v2057->tDuration, v2056);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5031)->tDuration = v2058;
    v2059 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5031);
    CFlag<480>::operator=|(&v2059->uFlag, &CTS_SetBaseDamage);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5031);
  }
  v2060 = CFlag<480>::operator&(&p, &v4111, &CTS_AmaranthGenerator);
  if ( CFlag<480>::operator bool(v2060) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2061 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAmaranthGenerator_(v3649, v2061);
    }
    else
    {
      v2062 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAmaranthGenerator_(v3649, v2062);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAmaranthGenerator_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAmaranthGenerator_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5030);
    v5293 = 257;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5030) )
    {
      v4109 = operator new(0x50u);
      if ( v4109 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4109);
        v3391 = v2063;
      }
      else
      {
        v3391 = 0;
      }
      v4110 = v3391;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5030, v3391);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5030);
    }
    v2064 = b;
    v2065 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5030);
    v2066 = zmax<long>(v2065->tDuration, v2064);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5030)->tDuration = v2066;
    v2067 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5030);
    CFlag<480>::operator=|(&v2067->uFlag, &CTS_AmaranthGenerator);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5030);
  }
  v2068 = CFlag<480>::operator&(&p, &v4108, &CTS_StrikerHyperElectric);
  if ( CFlag<480>::operator bool(v2068) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2069 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStrikerHyperElectric_(v3649, v2069);
    }
    else
    {
      v2070 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStrikerHyperElectric_(v3649, v2070);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStrikerHyperElectric_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStrikerHyperElectric_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5029);
    v5293 = 258;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5029) )
    {
      v4106 = operator new(0x50u);
      if ( v4106 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4106);
        v3390 = v2071;
      }
      else
      {
        v3390 = 0;
      }
      v4107 = v3390;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5029, v3390);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5029);
    }
    v2072 = b;
    v2073 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5029);
    v2074 = zmax<long>(v2073->tDuration, v2072);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5029)->tDuration = v2074;
    v2075 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5029);
    CFlag<480>::operator=|(&v2075->uFlag, &CTS_StrikerHyperElectric);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5029);
  }
  v2076 = CFlag<480>::operator&(&p, &v4105, &CTS_EventPointAbsorb);
  if ( CFlag<480>::operator bool(v2076) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2077 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEventPointAbsorb_(v3649, v2077);
    }
    else
    {
      v2078 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEventPointAbsorb_(v3649, v2078);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEventPointAbsorb_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEventPointAbsorb_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5028);
    v5293 = 259;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5028) )
    {
      v4103 = operator new(0x50u);
      if ( v4103 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4103);
        v3389 = v2079;
      }
      else
      {
        v3389 = 0;
      }
      v4104 = v3389;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5028, v3389);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5028);
    }
    v2080 = b;
    v2081 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5028);
    v2082 = zmax<long>(v2081->tDuration, v2080);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5028)->tDuration = v2082;
    v2083 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5028);
    CFlag<480>::operator=|(&v2083->uFlag, &CTS_EventPointAbsorb);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5028);
  }
  v2084 = CFlag<480>::operator&(&p, &v4102, &CTS_EventAssemble);
  if ( CFlag<480>::operator bool(v2084) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2085 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEventAssemble_(v3649, v2085);
    }
    else
    {
      v2086 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEventAssemble_(v3649, v2086);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEventAssemble_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEventAssemble_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5027);
    v5293 = 260;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5027) )
    {
      v4100 = operator new(0x50u);
      if ( v4100 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4100);
        v3388 = v2087;
      }
      else
      {
        v3388 = 0;
      }
      v4101 = v3388;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5027, v3388);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5027);
    }
    v2088 = b;
    v2089 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5027);
    v2090 = zmax<long>(v2089->tDuration, v2088);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5027)->tDuration = v2090;
    v2091 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5027);
    CFlag<480>::operator=|(&v2091->uFlag, &CTS_EventAssemble);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5027);
  }
  v2092 = CFlag<480>::operator&(&p, &v4099, &CTS_StormBringer);
  if ( CFlag<480>::operator bool(v2092) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2093 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStormBringer_(v3649, v2093);
    }
    else
    {
      v2094 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStormBringer_(v3649, v2094);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStormBringer_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStormBringer_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5026);
    v5293 = 261;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5026) )
    {
      v4097 = operator new(0x50u);
      if ( v4097 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4097);
        v3387 = v2095;
      }
      else
      {
        v3387 = 0;
      }
      v4098 = v3387;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5026, v3387);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5026);
    }
    v2096 = b;
    v2097 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5026);
    v2098 = zmax<long>(v2097->tDuration, v2096);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5026)->tDuration = v2098;
    v2099 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5026);
    CFlag<480>::operator=|(&v2099->uFlag, &CTS_StormBringer);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5026);
  }
  v2100 = CFlag<480>::operator&(&p, &v4096, &CTS_ACCR);
  if ( CFlag<480>::operator bool(v2100) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2101 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nACCR_(v3649, v2101);
    }
    else
    {
      v2102 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nACCR_(v3649, v2102);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rACCR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tACCR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5025);
    v5293 = 262;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5025) )
    {
      v4094 = operator new(0x50u);
      if ( v4094 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4094);
        v3386 = v2103;
      }
      else
      {
        v3386 = 0;
      }
      v4095 = v3386;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5025, v3386);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5025);
    }
    v2104 = b;
    v2105 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5025);
    v2106 = zmax<long>(v2105->tDuration, v2104);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5025)->tDuration = v2106;
    v2107 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5025);
    CFlag<480>::operator=|(&v2107->uFlag, &CTS_ACCR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5025);
  }
  v2108 = CFlag<480>::operator&(&p, &v4093, &CTS_DEXR);
  if ( CFlag<480>::operator bool(v2108) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2109 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDEXR_(v3649, v2109);
    }
    else
    {
      v2110 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDEXR_(v3649, v2110);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDEXR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDEXR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5024);
    v5293 = 263;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5024) )
    {
      v4091 = operator new(0x50u);
      if ( v4091 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4091);
        v3385 = v2111;
      }
      else
      {
        v3385 = 0;
      }
      v4092 = v3385;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5024, v3385);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5024);
    }
    v2112 = b;
    v2113 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5024);
    v2114 = zmax<long>(v2113->tDuration, v2112);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5024)->tDuration = v2114;
    v2115 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5024);
    CFlag<480>::operator=|(&v2115->uFlag, &CTS_DEXR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5024);
  }
  v2116 = CFlag<480>::operator&(&p, &v4090, &CTS_Albatross);
  if ( CFlag<480>::operator bool(v2116) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2117 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAlbatross_(v3649, v2117);
    }
    else
    {
      v2118 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAlbatross_(v3649, v2118);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAlbatross_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAlbatross_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5023);
    v5293 = 264;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5023) )
    {
      v4088 = operator new(0x50u);
      if ( v4088 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4088);
        v3384 = v2119;
      }
      else
      {
        v3384 = 0;
      }
      v4089 = v3384;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5023, v3384);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5023);
    }
    v2120 = b;
    v2121 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5023);
    v2122 = zmax<long>(v2121->tDuration, v2120);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5023)->tDuration = v2122;
    v2123 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5023);
    CFlag<480>::operator=|(&v2123->uFlag, &CTS_Albatross);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5023);
  }
  v2124 = CFlag<480>::operator&(&p, &v4087, &CTS_Translucence);
  if ( CFlag<480>::operator bool(v2124) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2125 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTranslucence_(v3649, v2125);
    }
    else
    {
      v2126 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTranslucence_(v3649, v2126);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTranslucence_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTranslucence_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5022);
    v5293 = 265;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5022) )
    {
      v4085 = operator new(0x50u);
      if ( v4085 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4085);
        v3383 = v2127;
      }
      else
      {
        v3383 = 0;
      }
      v4086 = v3383;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5022, v3383);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5022);
    }
    v2128 = b;
    v2129 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5022);
    v2130 = zmax<long>(v2129->tDuration, v2128);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5022)->tDuration = v2130;
    v2131 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5022);
    CFlag<480>::operator=|(&v2131->uFlag, &CTS_Translucence);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5022);
  }
  v2132 = CFlag<480>::operator&(&p, &v4084, &CTS_PoseType);
  if ( CFlag<480>::operator bool(v2132) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2133 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPoseType_(v3649, v2133);
    }
    else
    {
      v2134 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPoseType_(v3649, v2134);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPoseType_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPoseType_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5021);
    v5293 = 266;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5021) )
    {
      v4082 = operator new(0x50u);
      if ( v4082 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4082);
        v3382 = v2135;
      }
      else
      {
        v3382 = 0;
      }
      v4083 = v3382;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5021, v3382);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5021);
    }
    v2136 = b;
    v2137 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5021);
    v2138 = zmax<long>(v2137->tDuration, v2136);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5021)->tDuration = v2138;
    v2139 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5021);
    CFlag<480>::operator=|(&v2139->uFlag, &CTS_PoseType);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5021);
  }
  v2140 = CFlag<480>::operator&(&p, &v4081, &CTS_LightOfSpirit);
  if ( CFlag<480>::operator bool(v2140) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2141 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLightOfSpirit_(v3649, v2141);
    }
    else
    {
      v2142 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLightOfSpirit_(v3649, v2142);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rLightOfSpirit_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tLightOfSpirit_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5020);
    v5293 = 267;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5020) )
    {
      v4079 = operator new(0x50u);
      if ( v4079 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4079);
        v3381 = v2143;
      }
      else
      {
        v3381 = 0;
      }
      v4080 = v3381;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5020, v3381);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5020);
    }
    v2144 = b;
    v2145 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5020);
    v2146 = zmax<long>(v2145->tDuration, v2144);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5020)->tDuration = v2146;
    v2147 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5020);
    CFlag<480>::operator=|(&v2147->uFlag, &CTS_LightOfSpirit);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5020);
  }
  v2148 = CFlag<480>::operator&(&p, &v4078, &CTS_ElementSoul);
  if ( CFlag<480>::operator bool(v2148) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2149 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nElementSoul_(v3649, v2149);
    }
    else
    {
      v2150 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nElementSoul_(v3649, v2150);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rElementSoul_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tElementSoul_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5019);
    v5293 = 268;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5019) )
    {
      v4076 = operator new(0x50u);
      if ( v4076 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4076);
        v3380 = v2151;
      }
      else
      {
        v3380 = 0;
      }
      v4077 = v3380;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5019, v3380);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5019);
    }
    v2152 = b;
    v2153 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5019);
    v2154 = zmax<long>(v2153->tDuration, v2152);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5019)->tDuration = v2154;
    v2155 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5019);
    CFlag<480>::operator=|(&v2155->uFlag, &CTS_ElementSoul);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5019);
  }
  v2156 = CFlag<480>::operator&(&p, &v4075, &CTS_GlimmeringTime);
  if ( CFlag<480>::operator bool(v2156) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2157 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGlimmeringTime_(v3649, v2157);
    }
    else
    {
      v2158 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGlimmeringTime_(v3649, v2158);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rGlimmeringTime_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tGlimmeringTime_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5018);
    v5293 = 269;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5018) )
    {
      v4073 = operator new(0x50u);
      if ( v4073 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4073);
        v3379 = v2159;
      }
      else
      {
        v3379 = 0;
      }
      v4074 = v3379;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5018, v3379);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5018);
    }
    v2160 = b;
    v2161 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5018);
    v2162 = zmax<long>(v2161->tDuration, v2160);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5018)->tDuration = v2162;
    v2163 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5018);
    CFlag<480>::operator=|(&v2163->uFlag, &CTS_GlimmeringTime);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5018);
  }
  v2164 = CFlag<480>::operator&(&p, &v4072, &CTS_Restoration);
  if ( CFlag<480>::operator bool(v2164) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2165 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRestoration_(v3649, v2165);
    }
    else
    {
      v2166 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRestoration_(v3649, v2166);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRestoration_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRestoration_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5017);
    v5293 = 270;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5017) )
    {
      v4070 = operator new(0x50u);
      if ( v4070 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4070);
        v3378 = v2167;
      }
      else
      {
        v3378 = 0;
      }
      v4071 = v3378;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5017, v3378);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5017);
    }
    v2168 = b;
    v2169 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5017);
    v2170 = zmax<long>(v2169->tDuration, v2168);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5017)->tDuration = v2170;
    v2171 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5017);
    CFlag<480>::operator=|(&v2171->uFlag, &CTS_Restoration);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5017);
  }
  v2172 = CFlag<480>::operator&(&p, &v4069, &CTS_ComboCostInc);
  if ( CFlag<480>::operator bool(v2172) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2173 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboCostInc_(v3649, v2173);
    }
    else
    {
      v2174 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboCostInc_(v3649, v2174);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rComboCostInc_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tComboCostInc_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5016);
    v5293 = 271;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5016) )
    {
      v4067 = operator new(0x50u);
      if ( v4067 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4067);
        v3377 = v2175;
      }
      else
      {
        v3377 = 0;
      }
      v4068 = v3377;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5016, v3377);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5016);
    }
    v2176 = b;
    v2177 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5016);
    v2178 = zmax<long>(v2177->tDuration, v2176);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5016)->tDuration = v2178;
    v2179 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5016);
    CFlag<480>::operator=|(&v2179->uFlag, &CTS_ComboCostInc);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5016);
  }
  v2180 = CFlag<480>::operator&(&p, &v4066, &CTS_ChargeBuff);
  if ( CFlag<480>::operator bool(v2180) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2181 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nChargeBuff_(v3649, v2181);
    }
    else
    {
      v2182 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nChargeBuff_(v3649, v2182);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rChargeBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tChargeBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5015);
    v5293 = 272;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5015) )
    {
      v4064 = operator new(0x50u);
      if ( v4064 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4064);
        v3376 = v2183;
      }
      else
      {
        v3376 = 0;
      }
      v4065 = v3376;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5015, v3376);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5015);
    }
    v2184 = b;
    v2185 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5015);
    v2186 = zmax<long>(v2185->tDuration, v2184);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5015)->tDuration = v2186;
    v2187 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5015);
    CFlag<480>::operator=|(&v2187->uFlag, &CTS_ChargeBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5015);
  }
  v2188 = CFlag<480>::operator&(&p, &v4063, &CTS_TrueSight);
  if ( CFlag<480>::operator bool(v2188) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2189 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTrueSight_(v3649, v2189);
    }
    else
    {
      v2190 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTrueSight_(v3649, v2190);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTrueSight_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTrueSight_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5014);
    v5293 = 273;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5014) )
    {
      v4061 = operator new(0x50u);
      if ( v4061 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4061);
        v3375 = v2191;
      }
      else
      {
        v3375 = 0;
      }
      v4062 = v3375;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5014, v3375);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5014);
    }
    v2192 = b;
    v2193 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5014);
    v2194 = zmax<long>(v2193->tDuration, v2192);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5014)->tDuration = v2194;
    v2195 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5014);
    CFlag<480>::operator=|(&v2195->uFlag, &CTS_TrueSight);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5014);
  }
  v2196 = CFlag<480>::operator&(&p, &v4060, &CTS_CrossOverChain);
  if ( CFlag<480>::operator bool(v2196) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2197 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCrossOverChain_(v3649, v2197);
    }
    else
    {
      v2198 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCrossOverChain_(v3649, v2198);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCrossOverChain_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCrossOverChain_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5013);
    v5293 = 274;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5013) )
    {
      v4058 = operator new(0x50u);
      if ( v4058 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4058);
        v3374 = v2199;
      }
      else
      {
        v3374 = 0;
      }
      v4059 = v3374;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5013, v3374);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5013);
    }
    v2200 = b;
    v2201 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5013);
    v2202 = zmax<long>(v2201->tDuration, v2200);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5013)->tDuration = v2202;
    v2203 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5013);
    CFlag<480>::operator=|(&v2203->uFlag, &CTS_CrossOverChain);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5013);
  }
  v2204 = CFlag<480>::operator&(&p, &v4057, &CTS_ChillingStep);
  if ( CFlag<480>::operator bool(v2204) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2205 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nChillingStep_(v3649, v2205);
    }
    else
    {
      v2206 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nChillingStep_(v3649, v2206);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rChillingStep_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tChillingStep_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5012);
    v5293 = 275;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5012) )
    {
      v4055 = operator new(0x50u);
      if ( v4055 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4055);
        v3373 = v2207;
      }
      else
      {
        v3373 = 0;
      }
      v4056 = v3373;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5012, v3373);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5012);
    }
    v2208 = b;
    v2209 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5012);
    v2210 = zmax<long>(v2209->tDuration, v2208);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5012)->tDuration = v2210;
    v2211 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5012);
    CFlag<480>::operator=|(&v2211->uFlag, &CTS_ChillingStep);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5012);
  }
  v2212 = CFlag<480>::operator&(&p, &v4054, &CTS_Reincarnation);
  if ( CFlag<480>::operator bool(v2212) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2213 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReincarnation_(v3649, v2213);
    }
    else
    {
      v2214 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReincarnation_(v3649, v2214);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rReincarnation_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tReincarnation_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5011);
    v5293 = 276;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5011) )
    {
      v4052 = operator new(0x50u);
      if ( v4052 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4052);
        v3372 = v2215;
      }
      else
      {
        v3372 = 0;
      }
      v4053 = v3372;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5011, v3372);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5011);
    }
    v2216 = b;
    v2217 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5011);
    v2218 = zmax<long>(v2217->tDuration, v2216);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5011)->tDuration = v2218;
    v2219 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5011);
    CFlag<480>::operator=|(&v2219->uFlag, &CTS_Reincarnation);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5011);
  }
  v2220 = CFlag<480>::operator&(&p, &v4051, &CTS_DotBasedBuff);
  if ( CFlag<480>::operator bool(v2220) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2221 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDotBasedBuff_(v3649, v2221);
    }
    else
    {
      v2222 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDotBasedBuff_(v3649, v2222);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDotBasedBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDotBasedBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5010);
    v5293 = 277;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5010) )
    {
      v4049 = operator new(0x50u);
      if ( v4049 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4049);
        v3371 = v2223;
      }
      else
      {
        v3371 = 0;
      }
      v4050 = v3371;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5010, v3371);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5010);
    }
    v2224 = b;
    v2225 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5010);
    v2226 = zmax<long>(v2225->tDuration, v2224);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5010)->tDuration = v2226;
    v2227 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5010);
    CFlag<480>::operator=|(&v2227->uFlag, &CTS_DotBasedBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5010);
  }
  v2228 = CFlag<480>::operator&(&p, &v4048, &CTS_BlessEnsenble);
  if ( CFlag<480>::operator bool(v2228) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2229 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlessEnsenble_(v3649, v2229);
    }
    else
    {
      v2230 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBlessEnsenble_(v3649, v2230);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBlessEnsenble_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBlessEnsenble_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5009);
    v5293 = 278;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5009) )
    {
      v4046 = operator new(0x50u);
      if ( v4046 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4046);
        v3370 = v2231;
      }
      else
      {
        v3370 = 0;
      }
      v4047 = v3370;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5009, v3370);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5009);
    }
    v2232 = b;
    v2233 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5009);
    v2234 = zmax<long>(v2233->tDuration, v2232);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5009)->tDuration = v2234;
    v2235 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5009);
    CFlag<480>::operator=|(&v2235->uFlag, &CTS_BlessEnsenble);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5009);
  }
  v2236 = CFlag<480>::operator&(&p, &v4045, &CTS_ExtremeArchery);
  if ( CFlag<480>::operator bool(v2236) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2237 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExtremeArchery_(v3649, v2237);
    }
    else
    {
      v2238 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nExtremeArchery_(v3649, v2238);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rExtremeArchery_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tExtremeArchery_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5008);
    v5293 = 279;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5008) )
    {
      v4043 = operator new(0x50u);
      if ( v4043 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4043);
        v3369 = v2239;
      }
      else
      {
        v3369 = 0;
      }
      v4044 = v3369;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5008, v3369);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5008);
    }
    v2240 = b;
    v2241 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5008);
    v2242 = zmax<long>(v2241->tDuration, v2240);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5008)->tDuration = v2242;
    v2243 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5008);
    CFlag<480>::operator=|(&v2243->uFlag, &CTS_ExtremeArchery);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5008);
  }
  v2244 = CFlag<480>::operator&(&p, &v4042, &CTS_QuiverCatridge);
  if ( CFlag<480>::operator bool(v2244) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2245 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nQuiverCatridge_(v3649, v2245);
    }
    else
    {
      v2246 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nQuiverCatridge_(v3649, v2246);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rQuiverCatridge_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tQuiverCatridge_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5007);
    v5293 = 280;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5007) )
    {
      v4040 = operator new(0x50u);
      if ( v4040 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4040);
        v3368 = v2247;
      }
      else
      {
        v3368 = 0;
      }
      v4041 = v3368;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5007, v3368);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5007);
    }
    v2248 = b;
    v2249 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5007);
    v2250 = zmax<long>(v2249->tDuration, v2248);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5007)->tDuration = v2250;
    v2251 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5007);
    CFlag<480>::operator=|(&v2251->uFlag, &CTS_QuiverCatridge);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5007);
  }
  v2252 = CFlag<480>::operator&(&p, &v4039, &CTS_AdvancedQuiver);
  if ( CFlag<480>::operator bool(v2252) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2253 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAdvancedQuiver_(v3649, v2253);
    }
    else
    {
      v2254 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAdvancedQuiver_(v3649, v2254);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAdvancedQuiver_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAdvancedQuiver_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5006);
    v5293 = 281;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5006) )
    {
      v4037 = operator new(0x50u);
      if ( v4037 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4037);
        v3367 = v2255;
      }
      else
      {
        v3367 = 0;
      }
      v4038 = v3367;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5006, v3367);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5006);
    }
    v2256 = b;
    v2257 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5006);
    v2258 = zmax<long>(v2257->tDuration, v2256);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5006)->tDuration = v2258;
    v2259 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5006);
    CFlag<480>::operator=|(&v2259->uFlag, &CTS_AdvancedQuiver);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5006);
  }
  v2260 = CFlag<480>::operator&(&p, &v4036, &CTS_UserControlMob);
  if ( CFlag<480>::operator bool(v2260) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2261 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nUserControlMob_(v3649, v2261);
    }
    else
    {
      v2262 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nUserControlMob_(v3649, v2262);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rUserControlMob_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tUserControlMob_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5005);
    v5293 = 282;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5005) )
    {
      v4034 = operator new(0x50u);
      if ( v4034 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4034);
        v3366 = v2263;
      }
      else
      {
        v3366 = 0;
      }
      v4035 = v3366;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5005, v3366);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5005);
    }
    v2264 = b;
    v2265 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5005);
    v2266 = zmax<long>(v2265->tDuration, v2264);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5005)->tDuration = v2266;
    v2267 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5005);
    CFlag<480>::operator=|(&v2267->uFlag, &CTS_UserControlMob);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5005);
  }
  v2268 = CFlag<480>::operator&(&p, &v4033, &CTS_ImmuneBarrier);
  if ( CFlag<480>::operator bool(v2268) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2269 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nImmuneBarrier_(v3649, v2269);
    }
    else
    {
      v2270 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nImmuneBarrier_(v3649, v2270);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rImmuneBarrier_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tImmuneBarrier_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5004);
    v5293 = 283;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5004) )
    {
      v4031 = operator new(0x50u);
      if ( v4031 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4031);
        v3365 = v2271;
      }
      else
      {
        v3365 = 0;
      }
      v4032 = v3365;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5004, v3365);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5004);
    }
    v2272 = b;
    v2273 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5004);
    v2274 = zmax<long>(v2273->tDuration, v2272);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5004)->tDuration = v2274;
    v2275 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5004);
    CFlag<480>::operator=|(&v2275->uFlag, &CTS_ImmuneBarrier);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5004);
  }
  v2276 = CFlag<480>::operator&(&p, &v4030, &CTS_ArmorPiercing);
  if ( CFlag<480>::operator bool(v2276) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2277 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nArmorPiercing_(v3649, v2277);
    }
    else
    {
      v2278 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nArmorPiercing_(v3649, v2278);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rArmorPiercing_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tArmorPiercing_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5003);
    v5293 = 284;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5003) )
    {
      v4028 = operator new(0x50u);
      if ( v4028 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4028);
        v3364 = v2279;
      }
      else
      {
        v3364 = 0;
      }
      v4029 = v3364;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5003, v3364);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5003);
    }
    v2280 = b;
    v2281 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5003);
    v2282 = zmax<long>(v2281->tDuration, v2280);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5003)->tDuration = v2282;
    v2283 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5003);
    CFlag<480>::operator=|(&v2283->uFlag, &CTS_ArmorPiercing);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5003);
  }
  v2284 = CFlag<480>::operator&(&p, &v4027, &CTS_ZeroAuraStr);
  if ( CFlag<480>::operator bool(v2284) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2285 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nZeroAuraStr_(v3649, v2285);
    }
    else
    {
      v2286 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nZeroAuraStr_(v3649, v2286);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rZeroAuraStr_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tZeroAuraStr_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5002);
    v5293 = 285;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5002) )
    {
      v4025 = operator new(0x50u);
      if ( v4025 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4025);
        v3363 = v2287;
      }
      else
      {
        v3363 = 0;
      }
      v4026 = v3363;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5002, v3363);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5002);
    }
    v2288 = b;
    v2289 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5002);
    v2290 = zmax<long>(v2289->tDuration, v2288);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5002)->tDuration = v2290;
    v2291 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5002);
    CFlag<480>::operator=|(&v2291->uFlag, &CTS_ZeroAuraStr);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5002);
  }
  v2292 = CFlag<480>::operator&(&p, &v4024, &CTS_ZeroAuraSpd);
  if ( CFlag<480>::operator bool(v2292) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2293 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nZeroAuraSpd_(v3649, v2293);
    }
    else
    {
      v2294 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nZeroAuraSpd_(v3649, v2294);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rZeroAuraSpd_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tZeroAuraSpd_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5001);
    v5293 = 286;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5001) )
    {
      v4022 = operator new(0x50u);
      if ( v4022 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4022);
        v3362 = v2295;
      }
      else
      {
        v3362 = 0;
      }
      v4023 = v3362;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5001, v3362);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5001);
    }
    v2296 = b;
    v2297 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5001);
    v2298 = zmax<long>(v2297->tDuration, v2296);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5001)->tDuration = v2298;
    v2299 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5001);
    CFlag<480>::operator=|(&v2299->uFlag, &CTS_ZeroAuraSpd);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5001);
  }
  v2300 = CFlag<480>::operator&(&p, &v4021, &CTS_CriticalGrowing);
  if ( CFlag<480>::operator bool(v2300) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2301 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCriticalGrowing_(v3649, v2301);
    }
    else
    {
      v2302 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCriticalGrowing_(v3649, v2302);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCriticalGrowing_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCriticalGrowing_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v5000);
    v5293 = 287;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v5000) )
    {
      v4019 = operator new(0x50u);
      if ( v4019 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4019);
        v3361 = v2303;
      }
      else
      {
        v3361 = 0;
      }
      v4020 = v3361;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v5000, v3361);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v5000);
    }
    v2304 = b;
    v2305 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5000);
    v2306 = zmax<long>(v2305->tDuration, v2304);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v5000)->tDuration = v2306;
    v2307 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v5000);
    CFlag<480>::operator=|(&v2307->uFlag, &CTS_CriticalGrowing);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v5000);
  }
  v2308 = CFlag<480>::operator&(&p, &v4018, &CTS_QuickDraw);
  if ( CFlag<480>::operator bool(v2308) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2309 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nQuickDraw_(v3649, v2309);
    }
    else
    {
      v2310 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nQuickDraw_(v3649, v2310);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rQuickDraw_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tQuickDraw_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4999);
    v5293 = 288;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4999) )
    {
      v4016 = operator new(0x50u);
      if ( v4016 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4016);
        v3360 = v2311;
      }
      else
      {
        v3360 = 0;
      }
      v4017 = v3360;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4999, v3360);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4999);
    }
    v2312 = b;
    v2313 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4999);
    v2314 = zmax<long>(v2313->tDuration, v2312);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4999)->tDuration = v2314;
    v2315 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4999);
    CFlag<480>::operator=|(&v2315->uFlag, &CTS_QuickDraw);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4999);
  }
  v2316 = CFlag<480>::operator&(&p, &v4015, &CTS_BowMasterConcentration);
  if ( CFlag<480>::operator bool(v2316) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2317 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBowMasterConcentration_(v3649, v2317);
    }
    else
    {
      v2318 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBowMasterConcentration_(v3649, v2318);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBowMasterConcentration_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBowMasterConcentration_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4998);
    v5293 = 289;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4998) )
    {
      v4013 = operator new(0x50u);
      if ( v4013 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4013);
        v3359 = v2319;
      }
      else
      {
        v3359 = 0;
      }
      v4014 = v3359;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4998, v3359);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4998);
    }
    v2320 = b;
    v2321 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4998);
    v2322 = zmax<long>(v2321->tDuration, v2320);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4998)->tDuration = v2322;
    v2323 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4998);
    CFlag<480>::operator=|(&v2323->uFlag, &CTS_BowMasterConcentration);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4998);
  }
  v2324 = CFlag<480>::operator&(&p, &v4012, &CTS_TimeFastABuff);
  if ( CFlag<480>::operator bool(v2324) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2325 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTimeFastABuff_(v3649, v2325);
    }
    else
    {
      v2326 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTimeFastABuff_(v3649, v2326);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTimeFastABuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTimeFastABuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4997);
    v5293 = 290;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4997) )
    {
      v4010 = operator new(0x50u);
      if ( v4010 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4010);
        v3358 = v2327;
      }
      else
      {
        v3358 = 0;
      }
      v4011 = v3358;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4997, v3358);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4997);
    }
    v2328 = b;
    v2329 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4997);
    v2330 = zmax<long>(v2329->tDuration, v2328);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4997)->tDuration = v2330;
    v2331 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4997);
    CFlag<480>::operator=|(&v2331->uFlag, &CTS_TimeFastABuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4997);
  }
  v2332 = CFlag<480>::operator&(&p, &v4009, &CTS_TimeFastBBuff);
  if ( CFlag<480>::operator bool(v2332) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2333 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTimeFastBBuff_(v3649, v2333);
    }
    else
    {
      v2334 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTimeFastBBuff_(v3649, v2334);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTimeFastBBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTimeFastBBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4996);
    v5293 = 291;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4996) )
    {
      v4007 = operator new(0x50u);
      if ( v4007 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4007);
        v3357 = v2335;
      }
      else
      {
        v3357 = 0;
      }
      v4008 = v3357;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4996, v3357);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4996);
    }
    v2336 = b;
    v2337 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4996);
    v2338 = zmax<long>(v2337->tDuration, v2336);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4996)->tDuration = v2338;
    v2339 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4996);
    CFlag<480>::operator=|(&v2339->uFlag, &CTS_TimeFastBBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4996);
  }
  v2340 = CFlag<480>::operator&(&p, &v4006, &CTS_GatherDropR);
  if ( CFlag<480>::operator bool(v2340) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2341 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGatherDropR_(v3649, v2341);
    }
    else
    {
      v2342 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nGatherDropR_(v3649, v2342);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rGatherDropR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tGatherDropR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4995);
    v5293 = 292;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4995) )
    {
      v4004 = operator new(0x50u);
      if ( v4004 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4004);
        v3356 = v2343;
      }
      else
      {
        v3356 = 0;
      }
      v4005 = v3356;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4995, v3356);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4995);
    }
    v2344 = b;
    v2345 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4995);
    v2346 = zmax<long>(v2345->tDuration, v2344);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4995)->tDuration = v2346;
    v2347 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4995);
    CFlag<480>::operator=|(&v2347->uFlag, &CTS_GatherDropR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4995);
  }
  v2348 = CFlag<480>::operator&(&p, &v4003, &CTS_AimBox2D);
  if ( CFlag<480>::operator bool(v2348) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2349 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAimBox2D_(v3649, v2349);
    }
    else
    {
      v2350 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAimBox2D_(v3649, v2350);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAimBox2D_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAimBox2D_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4994);
    v5293 = 293;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4994) )
    {
      v4001 = operator new(0x50u);
      if ( v4001 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v4001);
        v3355 = v2351;
      }
      else
      {
        v3355 = 0;
      }
      v4002 = v3355;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4994, v3355);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4994);
    }
    v2352 = b;
    v2353 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4994);
    v2354 = zmax<long>(v2353->tDuration, v2352);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4994)->tDuration = v2354;
    v2355 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4994);
    CFlag<480>::operator=|(&v2355->uFlag, &CTS_AimBox2D);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4994);
  }
  v2356 = CFlag<480>::operator&(&p, &v4000, &CTS_CursorSniping);
  if ( CFlag<480>::operator bool(v2356) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2357 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCursorSniping_(v3649, v2357);
    }
    else
    {
      v2358 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nCursorSniping_(v3649, v2358);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rCursorSniping_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tCursorSniping_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4993);
    v5293 = 294;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4993) )
    {
      v3998 = operator new(0x50u);
      if ( v3998 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3998);
        v3354 = v2359;
      }
      else
      {
        v3354 = 0;
      }
      v3999 = v3354;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4993, v3354);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4993);
    }
    v2360 = b;
    v2361 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4993);
    v2362 = zmax<long>(v2361->tDuration, v2360);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4993)->tDuration = v2362;
    v2363 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4993);
    CFlag<480>::operator=|(&v2363->uFlag, &CTS_CursorSniping);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4993);
  }
  v2364 = CFlag<480>::operator&(&p, &v3997, &CTS_IncMonsterBattleCaptureRate);
  if ( CFlag<480>::operator bool(v2364) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2365 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncMonsterBattleCaptureRate_(v3649, v2365);
    }
    else
    {
      v2366 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncMonsterBattleCaptureRate_(v3649, v2366);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncMonsterBattleCaptureRate_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncMonsterBattleCaptureRate_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4992);
    v5293 = 295;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4992) )
    {
      v3995 = operator new(0x50u);
      if ( v3995 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3995);
        v3353 = v2367;
      }
      else
      {
        v3353 = 0;
      }
      v3996 = v3353;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4992, v3353);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4992);
    }
    v2368 = b;
    v2369 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4992);
    v2370 = zmax<long>(v2369->tDuration, v2368);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4992)->tDuration = v2370;
    v2371 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4992);
    CFlag<480>::operator=|(&v2371->uFlag, &CTS_IncMonsterBattleCaptureRate);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4992);
  }
  v2372 = CFlag<480>::operator&(&p, &v3994, &CTS_DebuffTolerance);
  if ( CFlag<480>::operator bool(v2372) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2373 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDebuffTolerance_(v3649, v2373);
    }
    else
    {
      v2374 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDebuffTolerance_(v3649, v2374);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDebuffTolerance_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDebuffTolerance_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4991);
    v5293 = 296;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4991) )
    {
      v3992 = operator new(0x50u);
      if ( v3992 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3992);
        v3352 = v2375;
      }
      else
      {
        v3352 = 0;
      }
      v3993 = v3352;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4991, v3352);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4991);
    }
    v2376 = b;
    v2377 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4991);
    v2378 = zmax<long>(v2377->tDuration, v2376);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4991)->tDuration = v2378;
    v2379 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4991);
    CFlag<480>::operator=|(&v2379->uFlag, &CTS_DebuffTolerance);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4991);
  }
  v2380 = CFlag<480>::operator&(&p, &v3991, &CTS_DotHealHPPerSecond);
  if ( CFlag<480>::operator bool(v2380) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2381 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDotHealHPPerSecond_(v3649, v2381);
    }
    else
    {
      v2382 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDotHealHPPerSecond_(v3649, v2382);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDotHealHPPerSecond_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDotHealHPPerSecond_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4990);
    v5293 = 297;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4990) )
    {
      v3989 = operator new(0x50u);
      if ( v3989 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3989);
        v3351 = v2383;
      }
      else
      {
        v3351 = 0;
      }
      v3990 = v3351;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4990, v3351);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4990);
    }
    v2384 = b;
    v2385 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4990);
    v2386 = zmax<long>(v2385->tDuration, v2384);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4990)->tDuration = v2386;
    v2387 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4990);
    CFlag<480>::operator=|(&v2387->uFlag, &CTS_DotHealHPPerSecond);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4990);
  }
  v2388 = CFlag<480>::operator&(&p, &v3988, &CTS_SpiritGuard);
  if ( CFlag<480>::operator bool(v2388) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2389 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSpiritGuard_(v3649, v2389);
    }
    else
    {
      v2390 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSpiritGuard_(v3649, v2390);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSpiritGuard_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSpiritGuard_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4989);
    v5293 = 298;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4989) )
    {
      v3986 = operator new(0x50u);
      if ( v3986 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3986);
        v3350 = v2391;
      }
      else
      {
        v3350 = 0;
      }
      v3987 = v3350;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4989, v3350);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4989);
    }
    v2392 = b;
    v2393 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4989);
    v2394 = zmax<long>(v2393->tDuration, v2392);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4989)->tDuration = v2394;
    v2395 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4989);
    CFlag<480>::operator=|(&v2395->uFlag, &CTS_SpiritGuard);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4989);
  }
  v2396 = CFlag<480>::operator&(&p, &v3985, &CTS_PreReviveOnce);
  if ( CFlag<480>::operator bool(v2396) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2397 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPreReviveOnce_(v3649, v2397);
    }
    else
    {
      v2398 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPreReviveOnce_(v3649, v2398);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPreReviveOnce_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPreReviveOnce_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4988);
    v5293 = 299;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4988) )
    {
      v3983 = operator new(0x50u);
      if ( v3983 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3983);
        v3349 = v2399;
      }
      else
      {
        v3349 = 0;
      }
      v3984 = v3349;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4988, v3349);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4988);
    }
    v2400 = b;
    v2401 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4988);
    v2402 = zmax<long>(v2401->tDuration, v2400);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4988)->tDuration = v2402;
    v2403 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4988);
    CFlag<480>::operator=|(&v2403->uFlag, &CTS_PreReviveOnce);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4988);
  }
  v2404 = CFlag<480>::operator&(&p, &v3982, &CTS_SetBaseDamageByBuff);
  if ( CFlag<480>::operator bool(v2404) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2405 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSetBaseDamageByBuff_(v3649, v2405);
    }
    else
    {
      v2406 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSetBaseDamageByBuff_(v3649, v2406);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSetBaseDamageByBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSetBaseDamageByBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4987);
    v5293 = 300;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4987) )
    {
      v3980 = operator new(0x50u);
      if ( v3980 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3980);
        v3348 = v2407;
      }
      else
      {
        v3348 = 0;
      }
      v3981 = v3348;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4987, v3348);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4987);
    }
    v2408 = b;
    v2409 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4987);
    v2410 = zmax<long>(v2409->tDuration, v2408);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4987)->tDuration = v2410;
    v2411 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4987);
    CFlag<480>::operator=|(&v2411->uFlag, &CTS_SetBaseDamageByBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4987);
  }
  v2412 = CFlag<480>::operator&(&p, &v3979, &CTS_LimitMP);
  if ( CFlag<480>::operator bool(v2412) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2413 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLimitMP_(v3649, v2413);
    }
    else
    {
      v2414 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nLimitMP_(v3649, v2414);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rLimitMP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tLimitMP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4986);
    v5293 = 301;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4986) )
    {
      v3977 = operator new(0x50u);
      if ( v3977 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3977);
        v3347 = v2415;
      }
      else
      {
        v3347 = 0;
      }
      v3978 = v3347;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4986, v3347);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4986);
    }
    v2416 = b;
    v2417 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4986);
    v2418 = zmax<long>(v2417->tDuration, v2416);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4986)->tDuration = v2418;
    v2419 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4986);
    CFlag<480>::operator=|(&v2419->uFlag, &CTS_LimitMP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4986);
  }
  v2420 = CFlag<480>::operator&(&p, &v3976, &CTS_ReflectDamR);
  if ( CFlag<480>::operator bool(v2420) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2421 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReflectDamR_(v3649, v2421);
    }
    else
    {
      v2422 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nReflectDamR_(v3649, v2422);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rReflectDamR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tReflectDamR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4985);
    v5293 = 302;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4985) )
    {
      v3974 = operator new(0x50u);
      if ( v3974 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3974);
        v3346 = v2423;
      }
      else
      {
        v3346 = 0;
      }
      v3975 = v3346;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4985, v3346);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4985);
    }
    v2424 = b;
    v2425 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4985);
    v2426 = zmax<long>(v2425->tDuration, v2424);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4985)->tDuration = v2426;
    v2427 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4985);
    CFlag<480>::operator=|(&v2427->uFlag, &CTS_ReflectDamR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4985);
  }
  v2428 = CFlag<480>::operator&(&p, &v3973, &CTS_ComboTempest);
  if ( CFlag<480>::operator bool(v2428) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2429 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboTempest_(v3649, v2429);
    }
    else
    {
      v2430 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComboTempest_(v3649, v2430);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rComboTempest_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tComboTempest_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4984);
    v5293 = 303;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4984) )
    {
      v3971 = operator new(0x50u);
      if ( v3971 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3971);
        v3345 = v2431;
      }
      else
      {
        v3345 = 0;
      }
      v3972 = v3345;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4984, v3345);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4984);
    }
    v2432 = b;
    v2433 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4984);
    v2434 = zmax<long>(v2433->tDuration, v2432);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4984)->tDuration = v2434;
    v2435 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4984);
    CFlag<480>::operator=|(&v2435->uFlag, &CTS_ComboTempest);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4984);
  }
  v2436 = CFlag<480>::operator&(&p, &v3970, &CTS_MHPCutR);
  if ( CFlag<480>::operator bool(v2436) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2437 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMHPCutR_(v3649, v2437);
    }
    else
    {
      v2438 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMHPCutR_(v3649, v2438);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMHPCutR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMHPCutR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4983);
    v5293 = 304;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4983) )
    {
      v3968 = operator new(0x50u);
      if ( v3968 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3968);
        v3344 = v2439;
      }
      else
      {
        v3344 = 0;
      }
      v3969 = v3344;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4983, v3344);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4983);
    }
    v2440 = b;
    v2441 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4983);
    v2442 = zmax<long>(v2441->tDuration, v2440);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4983)->tDuration = v2442;
    v2443 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4983);
    CFlag<480>::operator=|(&v2443->uFlag, &CTS_MHPCutR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4983);
  }
  v2444 = CFlag<480>::operator&(&p, &v3967, &CTS_MMPCutR);
  if ( CFlag<480>::operator bool(v2444) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2445 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMMPCutR_(v3649, v2445);
    }
    else
    {
      v2446 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMMPCutR_(v3649, v2446);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMMPCutR_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMMPCutR_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4982);
    v5293 = 305;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4982) )
    {
      v3965 = operator new(0x50u);
      if ( v3965 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3965);
        v3343 = v2447;
      }
      else
      {
        v3343 = 0;
      }
      v3966 = v3343;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4982, v3343);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4982);
    }
    v2448 = b;
    v2449 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4982);
    v2450 = zmax<long>(v2449->tDuration, v2448);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4982)->tDuration = v2450;
    v2451 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4982);
    CFlag<480>::operator=|(&v2451->uFlag, &CTS_MMPCutR);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4982);
  }
  v2452 = CFlag<480>::operator&(&p, &v3964, &CTS_SelfWeakness);
  if ( CFlag<480>::operator bool(v2452) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2453 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSelfWeakness_(v3649, v2453);
    }
    else
    {
      v2454 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSelfWeakness_(v3649, v2454);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSelfWeakness_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSelfWeakness_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4981);
    v5293 = 306;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4981) )
    {
      v3962 = operator new(0x50u);
      if ( v3962 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3962);
        v3342 = v2455;
      }
      else
      {
        v3342 = 0;
      }
      v3963 = v3342;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4981, v3342);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4981);
    }
    v2456 = b;
    v2457 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4981);
    v2458 = zmax<long>(v2457->tDuration, v2456);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4981)->tDuration = v2458;
    v2459 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4981);
    CFlag<480>::operator=|(&v2459->uFlag, &CTS_SelfWeakness);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4981);
  }
  v2460 = CFlag<480>::operator&(&p, &v3961, &CTS_ElementDarkness);
  if ( CFlag<480>::operator bool(v2460) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2461 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nElementDarkness_(v3649, v2461);
    }
    else
    {
      v2462 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nElementDarkness_(v3649, v2462);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rElementDarkness_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tElementDarkness_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4980);
    v5293 = 307;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4980) )
    {
      v3959 = operator new(0x50u);
      if ( v3959 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3959);
        v3341 = v2463;
      }
      else
      {
        v3341 = 0;
      }
      v3960 = v3341;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4980, v3341);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4980);
    }
    v2464 = b;
    v2465 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4980);
    v2466 = zmax<long>(v2465->tDuration, v2464);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4980)->tDuration = v2466;
    v2467 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4980);
    CFlag<480>::operator=|(&v2467->uFlag, &CTS_ElementDarkness);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4980);
  }
  v2468 = CFlag<480>::operator&(&p, &v3958, &CTS_FlareTrick);
  if ( CFlag<480>::operator bool(v2468) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2469 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFlareTrick_(v3649, v2469);
    }
    else
    {
      v2470 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFlareTrick_(v3649, v2470);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFlareTrick_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFlareTrick_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4979);
    v5293 = 308;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4979) )
    {
      v3956 = operator new(0x50u);
      if ( v3956 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3956);
        v3340 = v2471;
      }
      else
      {
        v3340 = 0;
      }
      v3957 = v3340;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4979, v3340);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4979);
    }
    v2472 = b;
    v2473 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4979);
    v2474 = zmax<long>(v2473->tDuration, v2472);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4979)->tDuration = v2474;
    v2475 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4979);
    CFlag<480>::operator=|(&v2475->uFlag, &CTS_FlareTrick);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4979);
  }
  v2476 = CFlag<480>::operator&(&p, &v3955, &CTS_Ember);
  if ( CFlag<480>::operator bool(v2476) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2477 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEmber_(v3649, v2477);
    }
    else
    {
      v2478 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nEmber_(v3649, v2478);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rEmber_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tEmber_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4978);
    v5293 = 309;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4978) )
    {
      v3953 = operator new(0x50u);
      if ( v3953 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3953);
        v3339 = v2479;
      }
      else
      {
        v3339 = 0;
      }
      v3954 = v3339;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4978, v3339);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4978);
    }
    v2480 = b;
    v2481 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4978);
    v2482 = zmax<long>(v2481->tDuration, v2480);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4978)->tDuration = v2482;
    v2483 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4978);
    CFlag<480>::operator=|(&v2483->uFlag, &CTS_Ember);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4978);
  }
  v2484 = CFlag<480>::operator&(&p, &v3952, &CTS_Dominion);
  if ( CFlag<480>::operator bool(v2484) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2485 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDominion_(v3649, v2485);
    }
    else
    {
      v2486 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDominion_(v3649, v2486);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDominion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDominion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4977);
    v5293 = 310;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4977) )
    {
      v3950 = operator new(0x50u);
      if ( v3950 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3950);
        v3338 = v2487;
      }
      else
      {
        v3338 = 0;
      }
      v3951 = v3338;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4977, v3338);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4977);
    }
    v2488 = b;
    v2489 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4977);
    v2490 = zmax<long>(v2489->tDuration, v2488);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4977)->tDuration = v2490;
    v2491 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4977);
    CFlag<480>::operator=|(&v2491->uFlag, &CTS_Dominion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4977);
  }
  v2492 = CFlag<480>::operator&(&p, &v3949, &CTS_SiphonVitality);
  if ( CFlag<480>::operator bool(v2492) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2493 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSiphonVitality_(v3649, v2493);
    }
    else
    {
      v2494 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSiphonVitality_(v3649, v2494);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSiphonVitality_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSiphonVitality_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4976);
    v5293 = 311;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4976) )
    {
      v3947 = operator new(0x50u);
      if ( v3947 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3947);
        v3337 = v2495;
      }
      else
      {
        v3337 = 0;
      }
      v3948 = v3337;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4976, v3337);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4976);
    }
    v2496 = b;
    v2497 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4976);
    v2498 = zmax<long>(v2497->tDuration, v2496);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4976)->tDuration = v2498;
    v2499 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4976);
    CFlag<480>::operator=|(&v2499->uFlag, &CTS_SiphonVitality);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4976);
  }
  v2500 = CFlag<480>::operator&(&p, &v3946, &CTS_DarknessAscension);
  if ( CFlag<480>::operator bool(v2500) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2501 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarknessAscension_(v3649, v2501);
    }
    else
    {
      v2502 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarknessAscension_(v3649, v2502);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDarknessAscension_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDarknessAscension_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4975);
    v5293 = 312;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4975) )
    {
      v3944 = operator new(0x50u);
      if ( v3944 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3944);
        v3336 = v2503;
      }
      else
      {
        v3336 = 0;
      }
      v3945 = v3336;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4975, v3336);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4975);
    }
    v2504 = b;
    v2505 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4975);
    v2506 = zmax<long>(v2505->tDuration, v2504);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4975)->tDuration = v2506;
    v2507 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4975);
    CFlag<480>::operator=|(&v2507->uFlag, &CTS_DarknessAscension);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4975);
  }
  v2508 = CFlag<480>::operator&(&p, &v3943, &CTS_BossWaitingLinesBuff);
  if ( CFlag<480>::operator bool(v2508) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2509 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBossWaitingLinesBuff_(v3649, v2509);
    }
    else
    {
      v2510 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBossWaitingLinesBuff_(v3649, v2510);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBossWaitingLinesBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBossWaitingLinesBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4974);
    v5293 = 313;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4974) )
    {
      v3941 = operator new(0x50u);
      if ( v3941 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3941);
        v3335 = v2511;
      }
      else
      {
        v3335 = 0;
      }
      v3942 = v3335;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4974, v3335);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4974);
    }
    v2512 = b;
    v2513 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4974);
    v2514 = zmax<long>(v2513->tDuration, v2512);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4974)->tDuration = v2514;
    v2515 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4974);
    CFlag<480>::operator=|(&v2515->uFlag, &CTS_BossWaitingLinesBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4974);
  }
  v2516 = CFlag<480>::operator&(&p, &v3940, &CTS_DamageReduce);
  if ( CFlag<480>::operator bool(v2516) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2517 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDamageReduce_(v3649, v2517);
    }
    else
    {
      v2518 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDamageReduce_(v3649, v2518);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDamageReduce_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDamageReduce_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4973);
    v5293 = 314;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4973) )
    {
      v3938 = operator new(0x50u);
      if ( v3938 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3938);
        v3334 = v2519;
      }
      else
      {
        v3334 = 0;
      }
      v3939 = v3334;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4973, v3334);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4973);
    }
    v2520 = b;
    v2521 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4973);
    v2522 = zmax<long>(v2521->tDuration, v2520);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4973)->tDuration = v2522;
    v2523 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4973);
    CFlag<480>::operator=|(&v2523->uFlag, &CTS_DamageReduce);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4973);
  }
  v2524 = CFlag<480>::operator&(&p, &v3937, &CTS_ShadowServant);
  if ( CFlag<480>::operator bool(v2524) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2525 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShadowServant_(v3649, v2525);
    }
    else
    {
      v2526 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShadowServant_(v3649, v2526);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rShadowServant_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tShadowServant_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4972);
    v5293 = 315;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4972) )
    {
      v3935 = operator new(0x50u);
      if ( v3935 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3935);
        v3333 = v2527;
      }
      else
      {
        v3333 = 0;
      }
      v3936 = v3333;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4972, v3333);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4972);
    }
    v2528 = b;
    v2529 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4972);
    v2530 = zmax<long>(v2529->tDuration, v2528);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4972)->tDuration = v2530;
    v2531 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4972);
    CFlag<480>::operator=|(&v2531->uFlag, &CTS_ShadowServant);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4972);
  }
  v2532 = CFlag<480>::operator&(&p, &v3934, &CTS_ShadowIllusion);
  if ( CFlag<480>::operator bool(v2532) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2533 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShadowIllusion_(v3649, v2533);
    }
    else
    {
      v2534 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShadowIllusion_(v3649, v2534);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rShadowIllusion_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tShadowIllusion_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4971);
    v5293 = 316;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4971) )
    {
      v3932 = operator new(0x50u);
      if ( v3932 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3932);
        v3332 = v2535;
      }
      else
      {
        v3332 = 0;
      }
      v3933 = v3332;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4971, v3332);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4971);
    }
    v2536 = b;
    v2537 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4971);
    v2538 = zmax<long>(v2537->tDuration, v2536);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4971)->tDuration = v2538;
    v2539 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4971);
    CFlag<480>::operator=|(&v2539->uFlag, &CTS_ShadowIllusion);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4971);
  }
  v2540 = CFlag<480>::operator&(&p, &v3931, &CTS_AddAttackCount);
  if ( CFlag<480>::operator bool(v2540) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2541 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAddAttackCount_(v3649, v2541);
    }
    else
    {
      v2542 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAddAttackCount_(v3649, v2542);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAddAttackCount_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAddAttackCount_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4970);
    v5293 = 317;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4970) )
    {
      v3929 = operator new(0x50u);
      if ( v3929 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3929);
        v3331 = v2543;
      }
      else
      {
        v3331 = 0;
      }
      v3930 = v3331;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4970, v3331);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4970);
    }
    v2544 = b;
    v2545 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4970);
    v2546 = zmax<long>(v2545->tDuration, v2544);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4970)->tDuration = v2546;
    v2547 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4970);
    CFlag<480>::operator=|(&v2547->uFlag, &CTS_AddAttackCount);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4970);
  }
  v2548 = CFlag<480>::operator&(&p, &v3928, &CTS_ComplusionSlant);
  if ( CFlag<480>::operator bool(v2548) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2549 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComplusionSlant_(v3649, v2549);
    }
    else
    {
      v2550 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nComplusionSlant_(v3649, v2550);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rComplusionSlant_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tComplusionSlant_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4969);
    v5293 = 318;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4969) )
    {
      v3926 = operator new(0x50u);
      if ( v3926 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3926);
        v3330 = v2551;
      }
      else
      {
        v3330 = 0;
      }
      v3927 = v3330;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4969, v3330);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4969);
    }
    v2552 = b;
    v2553 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4969);
    v2554 = zmax<long>(v2553->tDuration, v2552);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4969)->tDuration = v2554;
    v2555 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4969);
    CFlag<480>::operator=|(&v2555->uFlag, &CTS_ComplusionSlant);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4969);
  }
  v2556 = CFlag<480>::operator&(&p, &v3925, &CTS_JaguarSummoned);
  if ( CFlag<480>::operator bool(v2556) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2557 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nJaguarSummoned_(v3649, v2557);
    }
    else
    {
      v2558 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nJaguarSummoned_(v3649, v2558);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rJaguarSummoned_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tJaguarSummoned_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4968);
    v5293 = 319;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4968) )
    {
      v3923 = operator new(0x50u);
      if ( v3923 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3923);
        v3329 = v2559;
      }
      else
      {
        v3329 = 0;
      }
      v3924 = v3329;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4968, v3329);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4968);
    }
    v2560 = b;
    v2561 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4968);
    v2562 = zmax<long>(v2561->tDuration, v2560);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4968)->tDuration = v2562;
    v2563 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4968);
    CFlag<480>::operator=|(&v2563->uFlag, &CTS_JaguarSummoned);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4968);
  }
  v2564 = CFlag<480>::operator&(&p, &v3922, &CTS_JaguarCount);
  if ( CFlag<480>::operator bool(v2564) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2565 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nJaguarCount_(v3649, v2565);
    }
    else
    {
      v2566 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nJaguarCount_(v3649, v2566);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rJaguarCount_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tJaguarCount_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4967);
    v5293 = 320;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4967) )
    {
      v3920 = operator new(0x50u);
      if ( v3920 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3920);
        v3328 = v2567;
      }
      else
      {
        v3328 = 0;
      }
      v3921 = v3328;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4967, v3328);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4967);
    }
    v2568 = b;
    v2569 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4967);
    v2570 = zmax<long>(v2569->tDuration, v2568);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4967)->tDuration = v2570;
    v2571 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4967);
    CFlag<480>::operator=|(&v2571->uFlag, &CTS_JaguarCount);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4967);
  }
  v2572 = CFlag<480>::operator&(&p, &v3919, &CTS_SSFShootingAttack);
  if ( CFlag<480>::operator bool(v2572) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2573 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSSFShootingAttack_(v3649, v2573);
    }
    else
    {
      v2574 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nSSFShootingAttack_(v3649, v2574);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSSFShootingAttack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tSSFShootingAttack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4966);
    v5293 = 321;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4966) )
    {
      v3917 = operator new(0x50u);
      if ( v3917 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3917);
        v3327 = v2575;
      }
      else
      {
        v3327 = 0;
      }
      v3918 = v3327;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4966, v3327);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4966);
    }
    v2576 = b;
    v2577 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4966);
    v2578 = zmax<long>(v2577->tDuration, v2576);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4966)->tDuration = v2578;
    v2579 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4966);
    CFlag<480>::operator=|(&v2579->uFlag, &CTS_SSFShootingAttack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4966);
  }
  v2580 = CFlag<480>::operator&(&p, &v3916, &CTS_DevilCry);
  if ( CFlag<480>::operator bool(v2580) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2581 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDevilCry_(v3649, v2581);
    }
    else
    {
      v2582 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDevilCry_(v3649, v2582);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDevilCry_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDevilCry_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4965);
    v5293 = 322;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4965) )
    {
      v3914 = operator new(0x50u);
      if ( v3914 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3914);
        v3326 = v2583;
      }
      else
      {
        v3326 = 0;
      }
      v3915 = v3326;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4965, v3326);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4965);
    }
    v2584 = b;
    v2585 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4965);
    v2586 = zmax<long>(v2585->tDuration, v2584);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4965)->tDuration = v2586;
    v2587 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4965);
    CFlag<480>::operator=|(&v2587->uFlag, &CTS_DevilCry);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4965);
  }
  v2588 = CFlag<480>::operator&(&p, &v3913, &CTS_ShieldAttack);
  if ( CFlag<480>::operator bool(v2588) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2589 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShieldAttack_(v3649, v2589);
    }
    else
    {
      v2590 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nShieldAttack_(v3649, v2590);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rShieldAttack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tShieldAttack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4964);
    v5293 = 323;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4964) )
    {
      v3911 = operator new(0x50u);
      if ( v3911 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3911);
        v3325 = v2591;
      }
      else
      {
        v3325 = 0;
      }
      v3912 = v3325;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4964, v3325);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4964);
    }
    v2592 = b;
    v2593 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4964);
    v2594 = zmax<long>(v2593->tDuration, v2592);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4964)->tDuration = v2594;
    v2595 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4964);
    CFlag<480>::operator=|(&v2595->uFlag, &CTS_ShieldAttack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4964);
  }
  v2596 = CFlag<480>::operator&(&p, &v3910, &CTS_BMageAura);
  if ( CFlag<480>::operator bool(v2596) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2597 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBMageAura_(v3649, v2597);
    }
    else
    {
      v2598 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBMageAura_(v3649, v2598);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBMageAura_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBMageAura_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4963);
    v5293 = 324;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4963) )
    {
      v3908 = operator new(0x50u);
      if ( v3908 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3908);
        v3324 = v2599;
      }
      else
      {
        v3324 = 0;
      }
      v3909 = v3324;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4963, v3324);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4963);
    }
    v2600 = b;
    v2601 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4963);
    v2602 = zmax<long>(v2601->tDuration, v2600);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4963)->tDuration = v2602;
    v2603 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4963);
    CFlag<480>::operator=|(&v2603->uFlag, &CTS_BMageAura);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4963);
  }
  v2604 = CFlag<480>::operator&(&p, &v3907, &CTS_DarkLighting);
  if ( CFlag<480>::operator bool(v2604) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2605 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarkLighting_(v3649, v2605);
    }
    else
    {
      v2606 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDarkLighting_(v3649, v2606);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDarkLighting_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDarkLighting_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4962);
    v5293 = 325;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4962) )
    {
      v3905 = operator new(0x50u);
      if ( v3905 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3905);
        v3323 = v2607;
      }
      else
      {
        v3323 = 0;
      }
      v3906 = v3323;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4962, v3323);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4962);
    }
    v2608 = b;
    v2609 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4962);
    v2610 = zmax<long>(v2609->tDuration, v2608);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4962)->tDuration = v2610;
    v2611 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4962);
    CFlag<480>::operator=|(&v2611->uFlag, &CTS_DarkLighting);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4962);
  }
  v2612 = CFlag<480>::operator&(&p, &v3904, &CTS_AttackCountX);
  if ( CFlag<480>::operator bool(v2612) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2613 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAttackCountX_(v3649, v2613);
    }
    else
    {
      v2614 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAttackCountX_(v3649, v2614);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAttackCountX_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAttackCountX_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4961);
    v5293 = 326;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4961) )
    {
      v3902 = operator new(0x50u);
      if ( v3902 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3902);
        v3322 = v2615;
      }
      else
      {
        v3322 = 0;
      }
      v3903 = v3322;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4961, v3322);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4961);
    }
    v2616 = b;
    v2617 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4961);
    v2618 = zmax<long>(v2617->tDuration, v2616);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4961)->tDuration = v2618;
    v2619 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4961);
    CFlag<480>::operator=|(&v2619->uFlag, &CTS_AttackCountX);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4961);
  }
  v2620 = CFlag<480>::operator&(&p, &v3901, &CTS_BMageDeath);
  if ( CFlag<480>::operator bool(v2620) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2621 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBMageDeath_(v3649, v2621);
    }
    else
    {
      v2622 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBMageDeath_(v3649, v2622);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBMageDeath_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBMageDeath_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4960);
    v5293 = 327;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4960) )
    {
      v3899 = operator new(0x50u);
      if ( v3899 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3899);
        v3321 = v2623;
      }
      else
      {
        v3321 = 0;
      }
      v3900 = v3321;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4960, v3321);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4960);
    }
    v2624 = b;
    v2625 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4960);
    v2626 = zmax<long>(v2625->tDuration, v2624);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4960)->tDuration = v2626;
    v2627 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4960);
    CFlag<480>::operator=|(&v2627->uFlag, &CTS_BMageDeath);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4960);
  }
  v2628 = CFlag<480>::operator&(&p, &v3898, &CTS_BombTime);
  if ( CFlag<480>::operator bool(v2628) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2629 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBombTime_(v3649, v2629);
    }
    else
    {
      v2630 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBombTime_(v3649, v2630);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBombTime_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBombTime_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4959);
    v5293 = 328;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4959) )
    {
      v3896 = operator new(0x50u);
      if ( v3896 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3896);
        v3320 = v2631;
      }
      else
      {
        v3320 = 0;
      }
      v3897 = v3320;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4959, v3320);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4959);
    }
    v2632 = b;
    v2633 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4959);
    v2634 = zmax<long>(v2633->tDuration, v2632);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4959)->tDuration = v2634;
    v2635 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4959);
    CFlag<480>::operator=|(&v2635->uFlag, &CTS_BombTime);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4959);
  }
  v2636 = CFlag<480>::operator&(&p, &v3895, &CTS_NoDebuff);
  if ( CFlag<480>::operator bool(v2636) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2637 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNoDebuff_(v3649, v2637);
    }
    else
    {
      v2638 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNoDebuff_(v3649, v2638);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNoDebuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNoDebuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4958);
    v5293 = 329;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4958) )
    {
      v3893 = operator new(0x50u);
      if ( v3893 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3893);
        v3319 = v2639;
      }
      else
      {
        v3319 = 0;
      }
      v3894 = v3319;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4958, v3319);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4958);
    }
    v2640 = b;
    v2641 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4958);
    v2642 = zmax<long>(v2641->tDuration, v2640);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4958)->tDuration = v2642;
    v2643 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4958);
    CFlag<480>::operator=|(&v2643->uFlag, &CTS_NoDebuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4958);
  }
  v2644 = CFlag<480>::operator&(&p, &v3892, &CTS_XenonAegisSystem);
  if ( CFlag<480>::operator bool(v2644) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2645 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nXenonAegisSystem_(v3649, v2645);
    }
    else
    {
      v2646 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nXenonAegisSystem_(v3649, v2646);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rXenonAegisSystem_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tXenonAegisSystem_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4957);
    v5293 = 330;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4957) )
    {
      v3890 = operator new(0x50u);
      if ( v3890 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3890);
        v3318 = v2647;
      }
      else
      {
        v3318 = 0;
      }
      v3891 = v3318;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4957, v3318);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4957);
    }
    v2648 = b;
    v2649 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4957);
    v2650 = zmax<long>(v2649->tDuration, v2648);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4957)->tDuration = v2650;
    v2651 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4957);
    CFlag<480>::operator=|(&v2651->uFlag, &CTS_XenonAegisSystem);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4957);
  }
  v2652 = CFlag<480>::operator&(&p, &v3889, &CTS_AngelicBursterSoulSeeker);
  if ( CFlag<480>::operator bool(v2652) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2653 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAngelicBursterSoulSeeker_(v3649, v2653);
    }
    else
    {
      v2654 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAngelicBursterSoulSeeker_(v3649, v2654);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAngelicBursterSoulSeeker_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAngelicBursterSoulSeeker_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4956);
    v5293 = 331;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4956) )
    {
      v3887 = operator new(0x50u);
      if ( v3887 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3887);
        v3317 = v2655;
      }
      else
      {
        v3317 = 0;
      }
      v3888 = v3317;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4956, v3317);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4956);
    }
    v2656 = b;
    v2657 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4956);
    v2658 = zmax<long>(v2657->tDuration, v2656);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4956)->tDuration = v2658;
    v2659 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4956);
    CFlag<480>::operator=|(&v2659->uFlag, &CTS_AngelicBursterSoulSeeker);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4956);
  }
  v2660 = CFlag<480>::operator&(&p, &v3886, &CTS_HiddenPossession);
  if ( CFlag<480>::operator bool(v2660) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2661 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHiddenPossession_(v3649, v2661);
    }
    else
    {
      v2662 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHiddenPossession_(v3649, v2662);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHiddenPossession_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHiddenPossession_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4955);
    v5293 = 332;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4955) )
    {
      v3884 = operator new(0x50u);
      if ( v3884 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3884);
        v3316 = v2663;
      }
      else
      {
        v3316 = 0;
      }
      v3885 = v3316;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4955, v3316);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4955);
    }
    v2664 = b;
    v2665 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4955);
    v2666 = zmax<long>(v2665->tDuration, v2664);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4955)->tDuration = v2666;
    v2667 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4955);
    CFlag<480>::operator=|(&v2667->uFlag, &CTS_HiddenPossession);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4955);
  }
  v2668 = CFlag<480>::operator&(&p, &v3883, &CTS_NightWalkerBat);
  if ( CFlag<480>::operator bool(v2668) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2669 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNightWalkerBat_(v3649, v2669);
    }
    else
    {
      v2670 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNightWalkerBat_(v3649, v2670);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNightWalkerBat_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNightWalkerBat_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4954);
    v5293 = 333;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4954) )
    {
      v3881 = operator new(0x50u);
      if ( v3881 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3881);
        v3315 = v2671;
      }
      else
      {
        v3315 = 0;
      }
      v3882 = v3315;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4954, v3315);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4954);
    }
    v2672 = b;
    v2673 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4954);
    v2674 = zmax<long>(v2673->tDuration, v2672);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4954)->tDuration = v2674;
    v2675 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4954);
    CFlag<480>::operator=|(&v2675->uFlag, &CTS_NightWalkerBat);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4954);
  }
  v2676 = CFlag<480>::operator&(&p, &v3880, &CTS_NightLordMark);
  if ( CFlag<480>::operator bool(v2676) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2677 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNightLordMark_(v3649, v2677);
    }
    else
    {
      v2678 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNightLordMark_(v3649, v2678);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNightLordMark_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNightLordMark_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4953);
    v5293 = 334;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4953) )
    {
      v3878 = operator new(0x50u);
      if ( v3878 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3878);
        v3314 = v2679;
      }
      else
      {
        v3314 = 0;
      }
      v3879 = v3314;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4953, v3314);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4953);
    }
    v2680 = b;
    v2681 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4953);
    v2682 = zmax<long>(v2681->tDuration, v2680);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4953)->tDuration = v2682;
    v2683 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4953);
    CFlag<480>::operator=|(&v2683->uFlag, &CTS_NightLordMark);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4953);
  }
  v2684 = CFlag<480>::operator&(&p, &v3877, &CTS_WizardIgnite);
  if ( CFlag<480>::operator bool(v2684) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2685 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWizardIgnite_(v3649, v2685);
    }
    else
    {
      v2686 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nWizardIgnite_(v3649, v2686);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rWizardIgnite_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tWizardIgnite_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4952);
    v5293 = 335;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4952) )
    {
      v3875 = operator new(0x50u);
      if ( v3875 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3875);
        v3313 = v2687;
      }
      else
      {
        v3313 = 0;
      }
      v3876 = v3313;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4952, v3313);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4952);
    }
    v2688 = b;
    v2689 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4952);
    v2690 = zmax<long>(v2689->tDuration, v2688);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4952)->tDuration = v2690;
    v2691 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4952);
    CFlag<480>::operator=|(&v2691->uFlag, &CTS_WizardIgnite);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4952);
  }
  v2692 = CFlag<480>::operator&(&p, &v3874, &CTS_BattlePvP_Helena_Mark);
  if ( CFlag<480>::operator bool(v2692) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2693 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Helena_Mark_(v3649, v2693);
    }
    else
    {
      v2694 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Helena_Mark_(v3649, v2694);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBattlePvP_Helena_Mark_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBattlePvP_Helena_Mark_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4951);
    v5293 = 336;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4951) )
    {
      v3872 = operator new(0x50u);
      if ( v3872 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3872);
        v3312 = v2695;
      }
      else
      {
        v3312 = 0;
      }
      v3873 = v3312;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4951, v3312);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4951);
    }
    v2696 = b;
    v2697 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4951);
    v2698 = zmax<long>(v2697->tDuration, v2696);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4951)->tDuration = v2698;
    v2699 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4951);
    CFlag<480>::operator=|(&v2699->uFlag, &CTS_BattlePvP_Helena_Mark);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4951);
  }
  v2700 = CFlag<480>::operator&(&p, &v3871, &CTS_BattlePvP_Helena_WindSpirit);
  if ( CFlag<480>::operator bool(v2700) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2701 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Helena_WindSpirit_(v3649, v2701);
    }
    else
    {
      v2702 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Helena_WindSpirit_(v3649, v2702);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBattlePvP_Helena_WindSpirit_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBattlePvP_Helena_WindSpirit_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4950);
    v5293 = 337;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4950) )
    {
      v3869 = operator new(0x50u);
      if ( v3869 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3869);
        v3311 = v2703;
      }
      else
      {
        v3311 = 0;
      }
      v3870 = v3311;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4950, v3311);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4950);
    }
    v2704 = b;
    v2705 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4950);
    v2706 = zmax<long>(v2705->tDuration, v2704);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4950)->tDuration = v2706;
    v2707 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4950);
    CFlag<480>::operator=|(&v2707->uFlag, &CTS_BattlePvP_Helena_WindSpirit);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4950);
  }
  v2708 = CFlag<480>::operator&(&p, &v3868, &CTS_BattlePvP_LangE_Protection);
  if ( CFlag<480>::operator bool(v2708) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2709 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_LangE_Protection_(v3649, v2709);
    }
    else
    {
      v2710 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_LangE_Protection_(v3649, v2710);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBattlePvP_LangE_Protection_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBattlePvP_LangE_Protection_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4949);
    v5293 = 338;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4949) )
    {
      v3866 = operator new(0x50u);
      if ( v3866 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3866);
        v3310 = v2711;
      }
      else
      {
        v3310 = 0;
      }
      v3867 = v3310;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4949, v3310);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4949);
    }
    v2712 = b;
    v2713 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4949);
    v2714 = zmax<long>(v2713->tDuration, v2712);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4949)->tDuration = v2714;
    v2715 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4949);
    CFlag<480>::operator=|(&v2715->uFlag, &CTS_BattlePvP_LangE_Protection);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4949);
  }
  v2716 = CFlag<480>::operator&(&p, &v3865, &CTS_BattlePvP_LeeMalNyun_ScaleUp);
  if ( CFlag<480>::operator bool(v2716) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2717 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_LeeMalNyun_ScaleUp_(v3649, v2717);
    }
    else
    {
      v2718 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_LeeMalNyun_ScaleUp_(v3649, v2718);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBattlePvP_LeeMalNyun_ScaleUp_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBattlePvP_LeeMalNyun_ScaleUp_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4948);
    v5293 = 339;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4948) )
    {
      v3863 = operator new(0x50u);
      if ( v3863 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3863);
        v3309 = v2719;
      }
      else
      {
        v3309 = 0;
      }
      v3864 = v3309;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4948, v3309);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4948);
    }
    v2720 = b;
    v2721 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4948);
    v2722 = zmax<long>(v2721->tDuration, v2720);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4948)->tDuration = v2722;
    v2723 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4948);
    CFlag<480>::operator=|(&v2723->uFlag, &CTS_BattlePvP_LeeMalNyun_ScaleUp);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4948);
  }
  v2724 = CFlag<480>::operator&(&p, &v3862, &CTS_BattlePvP_Revive);
  if ( CFlag<480>::operator bool(v2724) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2725 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Revive_(v3649, v2725);
    }
    else
    {
      v2726 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Revive_(v3649, v2726);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBattlePvP_Revive_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBattlePvP_Revive_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4947);
    v5293 = 340;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4947) )
    {
      v3860 = operator new(0x50u);
      if ( v3860 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3860);
        v3308 = v2727;
      }
      else
      {
        v3308 = 0;
      }
      v3861 = v3308;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4947, v3308);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4947);
    }
    v2728 = b;
    v2729 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4947);
    v2730 = zmax<long>(v2729->tDuration, v2728);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4947)->tDuration = v2730;
    v2731 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4947);
    CFlag<480>::operator=|(&v2731->uFlag, &CTS_BattlePvP_Revive);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4947);
  }
  v2732 = CFlag<480>::operator&(&p, &v3859, &CTS_PinkbeanAttackBuff);
  if ( CFlag<480>::operator bool(v2732) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2733 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPinkbeanAttackBuff_(v3649, v2733);
    }
    else
    {
      v2734 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPinkbeanAttackBuff_(v3649, v2734);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPinkbeanAttackBuff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPinkbeanAttackBuff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4946);
    v5293 = 341;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4946) )
    {
      v3857 = operator new(0x50u);
      if ( v3857 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3857);
        v3307 = v2735;
      }
      else
      {
        v3307 = 0;
      }
      v3858 = v3307;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4946, v3307);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4946);
    }
    v2736 = b;
    v2737 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4946);
    v2738 = zmax<long>(v2737->tDuration, v2736);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4946)->tDuration = v2738;
    v2739 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4946);
    CFlag<480>::operator=|(&v2739->uFlag, &CTS_PinkbeanAttackBuff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4946);
  }
  v2740 = CFlag<480>::operator&(&p, &v3856, &CTS_RandAreaAttack);
  if ( CFlag<480>::operator bool(v2740) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2741 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRandAreaAttack_(v3649, v2741);
    }
    else
    {
      v2742 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRandAreaAttack_(v3649, v2742);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRandAreaAttack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRandAreaAttack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4945);
    v5293 = 342;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4945) )
    {
      v3854 = operator new(0x50u);
      if ( v3854 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3854);
        v3306 = v2743;
      }
      else
      {
        v3306 = 0;
      }
      v3855 = v3306;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4945, v3306);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4945);
    }
    v2744 = b;
    v2745 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4945);
    v2746 = zmax<long>(v2745->tDuration, v2744);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4945)->tDuration = v2746;
    v2747 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4945);
    CFlag<480>::operator=|(&v2747->uFlag, &CTS_RandAreaAttack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4945);
  }
  v2748 = CFlag<480>::operator&(&p, &v3853, &CTS_BattlePvP_Mike_Shield);
  if ( CFlag<480>::operator bool(v2748) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2749 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Mike_Shield_(v3649, v2749);
    }
    else
    {
      v2750 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Mike_Shield_(v3649, v2750);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBattlePvP_Mike_Shield_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBattlePvP_Mike_Shield_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4944);
    v5293 = 343;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4944) )
    {
      v3851 = operator new(0x50u);
      if ( v3851 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3851);
        v3305 = v2751;
      }
      else
      {
        v3305 = 0;
      }
      v3852 = v3305;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4944, v3305);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4944);
    }
    v2752 = b;
    v2753 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4944);
    v2754 = zmax<long>(v2753->tDuration, v2752);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4944)->tDuration = v2754;
    v2755 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4944);
    CFlag<480>::operator=|(&v2755->uFlag, &CTS_BattlePvP_Mike_Shield);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4944);
  }
  v2756 = CFlag<480>::operator&(&p, &v3850, &CTS_BattlePvP_Mike_Bugle);
  if ( CFlag<480>::operator bool(v2756) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2757 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Mike_Bugle_(v3649, v2757);
    }
    else
    {
      v2758 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBattlePvP_Mike_Bugle_(v3649, v2758);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBattlePvP_Mike_Bugle_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBattlePvP_Mike_Bugle_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4943);
    v5293 = 344;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4943) )
    {
      v3848 = operator new(0x50u);
      if ( v3848 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3848);
        v3304 = v2759;
      }
      else
      {
        v3304 = 0;
      }
      v3849 = v3304;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4943, v3304);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4943);
    }
    v2760 = b;
    v2761 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4943);
    v2762 = zmax<long>(v2761->tDuration, v2760);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4943)->tDuration = v2762;
    v2763 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4943);
    CFlag<480>::operator=|(&v2763->uFlag, &CTS_BattlePvP_Mike_Bugle);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4943);
  }
  v2764 = CFlag<480>::operator&(&p, &v3847, &CTS_PinkbeanRelax);
  if ( CFlag<480>::operator bool(v2764) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2765 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPinkbeanRelax_(v3649, v2765);
    }
    else
    {
      v2766 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPinkbeanRelax_(v3649, v2766);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPinkbeanRelax_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPinkbeanRelax_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4942);
    v5293 = 345;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4942) )
    {
      v3845 = operator new(0x50u);
      if ( v3845 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3845);
        v3303 = v2767;
      }
      else
      {
        v3303 = 0;
      }
      v3846 = v3303;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4942, v3303);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4942);
    }
    v2768 = b;
    v2769 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4942);
    v2770 = zmax<long>(v2769->tDuration, v2768);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4942)->tDuration = v2770;
    v2771 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4942);
    CFlag<480>::operator=|(&v2771->uFlag, &CTS_PinkbeanRelax);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4942);
  }
  v2772 = CFlag<480>::operator&(&p, &v3844, &CTS_PinkbeanYoYoStack);
  if ( CFlag<480>::operator bool(v2772) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2773 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPinkbeanYoYoStack_(v3649, v2773);
    }
    else
    {
      v2774 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nPinkbeanYoYoStack_(v3649, v2774);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rPinkbeanYoYoStack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tPinkbeanYoYoStack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4941);
    v5293 = 346;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4941) )
    {
      v3842 = operator new(0x50u);
      if ( v3842 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3842);
        v3302 = v2775;
      }
      else
      {
        v3302 = 0;
      }
      v3843 = v3302;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4941, v3302);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4941);
    }
    v2776 = b;
    v2777 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4941);
    v2778 = zmax<long>(v2777->tDuration, v2776);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4941)->tDuration = v2778;
    v2779 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4941);
    CFlag<480>::operator=|(&v2779->uFlag, &CTS_PinkbeanYoYoStack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4941);
  }
  v2780 = CFlag<480>::operator&(&p, &v3841, &CTS_NextAttackEnhance);
  if ( CFlag<480>::operator bool(v2780) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2781 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNextAttackEnhance_(v3649, v2781);
    }
    else
    {
      v2782 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNextAttackEnhance_(v3649, v2782);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNextAttackEnhance_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNextAttackEnhance_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4940);
    v5293 = 347;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4940) )
    {
      v3839 = operator new(0x50u);
      if ( v3839 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3839);
        v3301 = v2783;
      }
      else
      {
        v3301 = 0;
      }
      v3840 = v3301;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4940, v3301);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4940);
    }
    v2784 = b;
    v2785 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4940);
    v2786 = zmax<long>(v2785->tDuration, v2784);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4940)->tDuration = v2786;
    v2787 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4940);
    CFlag<480>::operator=|(&v2787->uFlag, &CTS_NextAttackEnhance);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4940);
  }
  v2788 = CFlag<480>::operator&(&p, &v3838, &CTS_AranBeyonderDamAbsorb);
  if ( CFlag<480>::operator bool(v2788) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2789 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranBeyonderDamAbsorb_(v3649, v2789);
    }
    else
    {
      v2790 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranBeyonderDamAbsorb_(v3649, v2790);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAranBeyonderDamAbsorb_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAranBeyonderDamAbsorb_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4939);
    v5293 = 348;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4939) )
    {
      v3836 = operator new(0x50u);
      if ( v3836 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3836);
        v3300 = v2791;
      }
      else
      {
        v3300 = 0;
      }
      v3837 = v3300;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4939, v3300);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4939);
    }
    v2792 = b;
    v2793 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4939);
    v2794 = zmax<long>(v2793->tDuration, v2792);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4939)->tDuration = v2794;
    v2795 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4939);
    CFlag<480>::operator=|(&v2795->uFlag, &CTS_AranBeyonderDamAbsorb);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4939);
  }
  v2796 = CFlag<480>::operator&(&p, &v3835, &CTS_AranCombotempastOption);
  if ( CFlag<480>::operator bool(v2796) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2797 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranCombotempastOption_(v3649, v2797);
    }
    else
    {
      v2798 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranCombotempastOption_(v3649, v2798);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAranCombotempastOption_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAranCombotempastOption_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4938);
    v5293 = 349;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4938) )
    {
      v3833 = operator new(0x50u);
      if ( v3833 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3833);
        v3299 = v2799;
      }
      else
      {
        v3299 = 0;
      }
      v3834 = v3299;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4938, v3299);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4938);
    }
    v2800 = b;
    v2801 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4938);
    v2802 = zmax<long>(v2801->tDuration, v2800);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4938)->tDuration = v2802;
    v2803 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4938);
    CFlag<480>::operator=|(&v2803->uFlag, &CTS_AranCombotempastOption);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4938);
  }
  v2804 = CFlag<480>::operator&(&p, &v3832, &CTS_NautilusFinalAttack);
  if ( CFlag<480>::operator bool(v2804) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2805 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNautilusFinalAttack_(v3649, v2805);
    }
    else
    {
      v2806 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nNautilusFinalAttack_(v3649, v2806);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rNautilusFinalAttack_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tNautilusFinalAttack_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4937);
    v5293 = 350;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4937) )
    {
      v3830 = operator new(0x50u);
      if ( v3830 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3830);
        v3298 = v2807;
      }
      else
      {
        v3298 = 0;
      }
      v3831 = v3298;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4937, v3298);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4937);
    }
    v2808 = b;
    v2809 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4937);
    v2810 = zmax<long>(v2809->tDuration, v2808);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4937)->tDuration = v2810;
    v2811 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4937);
    CFlag<480>::operator=|(&v2811->uFlag, &CTS_NautilusFinalAttack);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4937);
  }
  v2812 = CFlag<480>::operator&(&p, &v3829, &CTS_ViperTimeLeap);
  if ( CFlag<480>::operator bool(v2812) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2813 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nViperTimeLeap_(v3649, v2813);
    }
    else
    {
      v2814 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nViperTimeLeap_(v3649, v2814);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rViperTimeLeap_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tViperTimeLeap_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4936);
    v5293 = 351;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4936) )
    {
      v3827 = operator new(0x50u);
      if ( v3827 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3827);
        v3297 = v2815;
      }
      else
      {
        v3297 = 0;
      }
      v3828 = v3297;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4936, v3297);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4936);
    }
    v2816 = b;
    v2817 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4936);
    v2818 = zmax<long>(v2817->tDuration, v2816);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4936)->tDuration = v2818;
    v2819 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4936);
    CFlag<480>::operator=|(&v2819->uFlag, &CTS_ViperTimeLeap);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4936);
  }
  v2820 = CFlag<480>::operator&(&p, &v3826, &CTS_RoyalGuardState);
  if ( CFlag<480>::operator bool(v2820) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2821 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRoyalGuardState_(v3649, v2821);
    }
    else
    {
      v2822 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRoyalGuardState_(v3649, v2822);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRoyalGuardState_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRoyalGuardState_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4935);
    v5293 = 352;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4935) )
    {
      v3824 = operator new(0x50u);
      if ( v3824 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3824);
        v3296 = v2823;
      }
      else
      {
        v3296 = 0;
      }
      v3825 = v3296;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4935, v3296);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4935);
    }
    v2824 = b;
    v2825 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4935);
    v2826 = zmax<long>(v2825->tDuration, v2824);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4935)->tDuration = v2826;
    v2827 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4935);
    CFlag<480>::operator=|(&v2827->uFlag, &CTS_RoyalGuardState);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4935);
  }
  v2828 = CFlag<480>::operator&(&p, &v3823, &CTS_RoyalGuardPrepare);
  if ( CFlag<480>::operator bool(v2828) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2829 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRoyalGuardPrepare_(v3649, v2829);
    }
    else
    {
      v2830 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRoyalGuardPrepare_(v3649, v2830);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRoyalGuardPrepare_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRoyalGuardPrepare_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4934);
    v5293 = 353;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4934) )
    {
      v3821 = operator new(0x50u);
      if ( v3821 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3821);
        v3295 = v2831;
      }
      else
      {
        v3295 = 0;
      }
      v3822 = v3295;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4934, v3295);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4934);
    }
    v2832 = b;
    v2833 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4934);
    v2834 = zmax<long>(v2833->tDuration, v2832);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4934)->tDuration = v2834;
    v2835 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4934);
    CFlag<480>::operator=|(&v2835->uFlag, &CTS_RoyalGuardPrepare);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4934);
  }
  v2836 = CFlag<480>::operator&(&p, &v3820, &CTS_MichaelSoulLink);
  if ( CFlag<480>::operator bool(v2836) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2837 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMichaelSoulLink_(v3649, v2837);
    }
    else
    {
      v2838 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMichaelSoulLink_(v3649, v2838);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMichaelSoulLink_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMichaelSoulLink_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4933);
    v5293 = 354;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4933) )
    {
      v3818 = operator new(0x50u);
      if ( v3818 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3818);
        v3294 = v2839;
      }
      else
      {
        v3294 = 0;
      }
      v3819 = v3294;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4933, v3294);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4933);
    }
    v2840 = b;
    v2841 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4933);
    v2842 = zmax<long>(v2841->tDuration, v2840);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4933)->tDuration = v2842;
    v2843 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4933);
    CFlag<480>::operator=|(&v2843->uFlag, &CTS_MichaelSoulLink);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4933);
  }
  v2844 = CFlag<480>::operator&(&p, &v3817, &CTS_MichaelStanceLink);
  if ( CFlag<480>::operator bool(v2844) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2845 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMichaelStanceLink_(v3649, v2845);
    }
    else
    {
      v2846 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nMichaelStanceLink_(v3649, v2846);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rMichaelStanceLink_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tMichaelStanceLink_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4932);
    v5293 = 355;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4932) )
    {
      v3815 = operator new(0x50u);
      if ( v3815 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3815);
        v3293 = v2847;
      }
      else
      {
        v3293 = 0;
      }
      v3816 = v3293;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4932, v3293);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4932);
    }
    v2848 = b;
    v2849 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4932);
    v2850 = zmax<long>(v2849->tDuration, v2848);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4932)->tDuration = v2850;
    v2851 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4932);
    CFlag<480>::operator=|(&v2851->uFlag, &CTS_MichaelStanceLink);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4932);
  }
  v2852 = CFlag<480>::operator&(&p, &v3814, &CTS_TriflingWhimOnOff);
  if ( CFlag<480>::operator bool(v2852) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2853 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTriflingWhimOnOff_(v3649, v2853);
    }
    else
    {
      v2854 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTriflingWhimOnOff_(v3649, v2854);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTriflingWhimOnOff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTriflingWhimOnOff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4931);
    v5293 = 356;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4931) )
    {
      v3812 = operator new(0x50u);
      if ( v3812 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3812);
        v3292 = v2855;
      }
      else
      {
        v3292 = 0;
      }
      v3813 = v3292;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4931, v3292);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4931);
    }
    v2856 = b;
    v2857 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4931);
    v2858 = zmax<long>(v2857->tDuration, v2856);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4931)->tDuration = v2858;
    v2859 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4931);
    CFlag<480>::operator=|(&v2859->uFlag, &CTS_TriflingWhimOnOff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4931);
  }
  v2860 = CFlag<480>::operator&(&p, &v3811, &CTS_AddRangeOnOff);
  if ( CFlag<480>::operator bool(v2860) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2861 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAddRangeOnOff_(v3649, v2861);
    }
    else
    {
      v2862 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAddRangeOnOff_(v3649, v2862);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAddRangeOnOff_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAddRangeOnOff_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4930);
    v5293 = 357;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4930) )
    {
      v3809 = operator new(0x50u);
      if ( v3809 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3809);
        v3291 = v2863;
      }
      else
      {
        v3291 = 0;
      }
      v3810 = v3291;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4930, v3291);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4930);
    }
    v2864 = b;
    v2865 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4930);
    v2866 = zmax<long>(v2865->tDuration, v2864);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4930)->tDuration = v2866;
    v2867 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4930);
    CFlag<480>::operator=|(&v2867->uFlag, &CTS_AddRangeOnOff);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4930);
  }
  v2868 = CFlag<480>::operator&(&p, &v3808, &CTS_KinesisPsychicPoint);
  if ( CFlag<480>::operator bool(v2868) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2869 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisPsychicPoint_(v3649, v2869);
    }
    else
    {
      v2870 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisPsychicPoint_(v3649, v2870);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKinesisPsychicPoint_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKinesisPsychicPoint_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4929);
    v5293 = 358;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4929) )
    {
      v3806 = operator new(0x50u);
      if ( v3806 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3806);
        v3290 = v2871;
      }
      else
      {
        v3290 = 0;
      }
      v3807 = v3290;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4929, v3290);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4929);
    }
    v2872 = b;
    v2873 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4929);
    v2874 = zmax<long>(v2873->tDuration, v2872);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4929)->tDuration = v2874;
    v2875 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4929);
    CFlag<480>::operator=|(&v2875->uFlag, &CTS_KinesisPsychicPoint);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4929);
  }
  v2876 = CFlag<480>::operator&(&p, &v3805, &CTS_KinesisPsychicOver);
  if ( CFlag<480>::operator bool(v2876) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2877 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisPsychicOver_(v3649, v2877);
    }
    else
    {
      v2878 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisPsychicOver_(v3649, v2878);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKinesisPsychicOver_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKinesisPsychicOver_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4928);
    v5293 = 359;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4928) )
    {
      v3803 = operator new(0x50u);
      if ( v3803 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3803);
        v3289 = v2879;
      }
      else
      {
        v3289 = 0;
      }
      v3804 = v3289;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4928, v3289);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4928);
    }
    v2880 = b;
    v2881 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4928);
    v2882 = zmax<long>(v2881->tDuration, v2880);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4928)->tDuration = v2882;
    v2883 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4928);
    CFlag<480>::operator=|(&v2883->uFlag, &CTS_KinesisPsychicOver);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4928);
  }
  v2884 = CFlag<480>::operator&(&p, &v3802, &CTS_KinesisPsychicShield);
  if ( CFlag<480>::operator bool(v2884) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2885 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisPsychicShield_(v3649, v2885);
    }
    else
    {
      v2886 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisPsychicShield_(v3649, v2886);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKinesisPsychicShield_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKinesisPsychicShield_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4927);
    v5293 = 360;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4927) )
    {
      v3800 = operator new(0x50u);
      if ( v3800 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3800);
        v3288 = v2887;
      }
      else
      {
        v3288 = 0;
      }
      v3801 = v3288;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4927, v3288);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4927);
    }
    v2888 = b;
    v2889 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4927);
    v2890 = zmax<long>(v2889->tDuration, v2888);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4927)->tDuration = v2890;
    v2891 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4927);
    CFlag<480>::operator=|(&v2891->uFlag, &CTS_KinesisPsychicShield);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4927);
  }
  v2892 = CFlag<480>::operator&(&p, &v3799, &CTS_KinesisIncMastery);
  if ( CFlag<480>::operator bool(v2892) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2893 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisIncMastery_(v3649, v2893);
    }
    else
    {
      v2894 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisIncMastery_(v3649, v2894);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKinesisIncMastery_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKinesisIncMastery_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4926);
    v5293 = 361;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4926) )
    {
      v3797 = operator new(0x50u);
      if ( v3797 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3797);
        v3287 = v2895;
      }
      else
      {
        v3287 = 0;
      }
      v3798 = v3287;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4926, v3287);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4926);
    }
    v2896 = b;
    v2897 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4926);
    v2898 = zmax<long>(v2897->tDuration, v2896);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4926)->tDuration = v2898;
    v2899 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4926);
    CFlag<480>::operator=|(&v2899->uFlag, &CTS_KinesisIncMastery);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4926);
  }
  v2900 = CFlag<480>::operator&(&p, &v3796, &CTS_KinesisPsychicEnergeShield);
  if ( CFlag<480>::operator bool(v2900) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2901 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisPsychicEnergeShield_(v3649, v2901);
    }
    else
    {
      v2902 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nKinesisPsychicEnergeShield_(v3649, v2902);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rKinesisPsychicEnergeShield_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tKinesisPsychicEnergeShield_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4925);
    v5293 = 362;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4925) )
    {
      v3794 = operator new(0x50u);
      if ( v3794 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3794);
        v3286 = v2903;
      }
      else
      {
        v3286 = 0;
      }
      v3795 = v3286;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4925, v3286);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4925);
    }
    v2904 = b;
    v2905 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4925);
    v2906 = zmax<long>(v2905->tDuration, v2904);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4925)->tDuration = v2906;
    v2907 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4925);
    CFlag<480>::operator=|(&v2907->uFlag, &CTS_KinesisPsychicEnergeShield);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4925);
  }
  v2908 = CFlag<480>::operator&(&p, &v3793, &CTS_BladeStance);
  if ( CFlag<480>::operator bool(v2908) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2909 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBladeStance_(v3649, v2909);
    }
    else
    {
      v2910 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBladeStance_(v3649, v2910);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBladeStance_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBladeStance_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4924);
    v5293 = 363;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4924) )
    {
      v3791 = operator new(0x50u);
      if ( v3791 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3791);
        v3285 = v2911;
      }
      else
      {
        v3285 = 0;
      }
      v3792 = v3285;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4924, v3285);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4924);
    }
    v2912 = b;
    v2913 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4924);
    v2914 = zmax<long>(v2913->tDuration, v2912);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4924)->tDuration = v2914;
    v2915 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4924);
    CFlag<480>::operator=|(&v2915->uFlag, &CTS_BladeStance);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4924);
  }
  v2916 = CFlag<480>::operator&(&p, &v3790, &CTS_DebuffActiveSkillHPCon);
  if ( CFlag<480>::operator bool(v2916) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2917 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDebuffActiveSkillHPCon_(v3649, v2917);
    }
    else
    {
      v2918 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDebuffActiveSkillHPCon_(v3649, v2918);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDebuffActiveSkillHPCon_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDebuffActiveSkillHPCon_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4923);
    v5293 = 364;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4923) )
    {
      v3788 = operator new(0x50u);
      if ( v3788 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3788);
        v3284 = v2919;
      }
      else
      {
        v3284 = 0;
      }
      v3789 = v3284;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4923, v3284);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4923);
    }
    v2920 = b;
    v2921 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4923);
    v2922 = zmax<long>(v2921->tDuration, v2920);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4923)->tDuration = v2922;
    v2923 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4923);
    CFlag<480>::operator=|(&v2923->uFlag, &CTS_DebuffActiveSkillHPCon);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4923);
  }
  v2924 = CFlag<480>::operator&(&p, &v3787, &CTS_DebuffIncHP);
  if ( CFlag<480>::operator bool(v2924) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2925 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDebuffIncHP_(v3649, v2925);
    }
    else
    {
      v2926 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nDebuffIncHP_(v3649, v2926);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rDebuffIncHP_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tDebuffIncHP_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4922);
    v5293 = 365;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4922) )
    {
      v3785 = operator new(0x50u);
      if ( v3785 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3785);
        v3283 = v2927;
      }
      else
      {
        v3283 = 0;
      }
      v3786 = v3283;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4922, v3283);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4922);
    }
    v2928 = b;
    v2929 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4922);
    v2930 = zmax<long>(v2929->tDuration, v2928);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4922)->tDuration = v2930;
    v2931 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4922);
    CFlag<480>::operator=|(&v2931->uFlag, &CTS_DebuffIncHP);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4922);
  }
  v2932 = CFlag<480>::operator&(&p, &v3784, &CTS_BowMasterMortalBlow);
  if ( CFlag<480>::operator bool(v2932) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2933 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBowMasterMortalBlow_(v3649, v2933);
    }
    else
    {
      v2934 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nBowMasterMortalBlow_(v3649, v2934);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rBowMasterMortalBlow_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tBowMasterMortalBlow_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4921);
    v5293 = 366;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4921) )
    {
      v3782 = operator new(0x50u);
      if ( v3782 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3782);
        v3282 = v2935;
      }
      else
      {
        v3282 = 0;
      }
      v3783 = v3282;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4921, v3282);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4921);
    }
    v2936 = b;
    v2937 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4921);
    v2938 = zmax<long>(v2937->tDuration, v2936);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4921)->tDuration = v2938;
    v2939 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4921);
    CFlag<480>::operator=|(&v2939->uFlag, &CTS_BowMasterMortalBlow);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4921);
  }
  v2940 = CFlag<480>::operator&(&p, &v3781, &CTS_AngelicBursterSoulResonance);
  if ( CFlag<480>::operator bool(v2940) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2941 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAngelicBursterSoulResonance_(v3649, v2941);
    }
    else
    {
      v2942 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAngelicBursterSoulResonance_(v3649, v2942);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAngelicBursterSoulResonance_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAngelicBursterSoulResonance_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4920);
    v5293 = 367;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4920) )
    {
      v3779 = operator new(0x50u);
      if ( v3779 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3779);
        v3281 = v2943;
      }
      else
      {
        v3281 = 0;
      }
      v3780 = v3281;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4920, v3281);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4920);
    }
    v2944 = b;
    v2945 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4920);
    v2946 = zmax<long>(v2945->tDuration, v2944);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4920)->tDuration = v2946;
    v2947 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4920);
    CFlag<480>::operator=|(&v2947->uFlag, &CTS_AngelicBursterSoulResonance);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4920);
  }
  v2948 = CFlag<480>::operator&(&p, &v3778, &CTS_Fever);
  if ( CFlag<480>::operator bool(v2948) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2949 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFever_(v3649, v2949);
    }
    else
    {
      v2950 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFever_(v3649, v2950);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFever_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFever_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4919);
    v5293 = 368;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4919) )
    {
      v3776 = operator new(0x50u);
      if ( v3776 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3776);
        v3280 = v2951;
      }
      else
      {
        v3280 = 0;
      }
      v3777 = v3280;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4919, v3280);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4919);
    }
    v2952 = b;
    v2953 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4919);
    v2954 = zmax<long>(v2953->tDuration, v2952);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4919)->tDuration = v2954;
    v2955 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4919);
    CFlag<480>::operator=|(&v2955->uFlag, &CTS_Fever);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4919);
  }
  v2956 = CFlag<480>::operator&(&p, &v3775, &CTS_IgnisRore);
  if ( CFlag<480>::operator bool(v2956) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2957 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnisRore_(v3649, v2957);
    }
    else
    {
      v2958 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIgnisRore_(v3649, v2958);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIgnisRore_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIgnisRore_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4918);
    v5293 = 369;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4918) )
    {
      v3773 = operator new(0x50u);
      if ( v3773 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3773);
        v3279 = v2959;
      }
      else
      {
        v3279 = 0;
      }
      v3774 = v3279;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4918, v3279);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4918);
    }
    v2960 = b;
    v2961 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4918);
    v2962 = zmax<long>(v2961->tDuration, v2960);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4918)->tDuration = v2962;
    v2963 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4918);
    CFlag<480>::operator=|(&v2963->uFlag, &CTS_IgnisRore);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4918);
  }
  v2964 = CFlag<480>::operator&(&p, &v3772, &CTS_RpSiksin);
  if ( CFlag<480>::operator bool(v2964) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2965 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRpSiksin_(v3649, v2965);
    }
    else
    {
      v2966 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRpSiksin_(v3649, v2966);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRpSiksin_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRpSiksin_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4917);
    v5293 = 370;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4917) )
    {
      v3770 = operator new(0x50u);
      if ( v3770 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3770);
        v3278 = v2967;
      }
      else
      {
        v3278 = 0;
      }
      v3771 = v3278;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4917, v3278);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4917);
    }
    v2968 = b;
    v2969 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4917);
    v2970 = zmax<long>(v2969->tDuration, v2968);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4917)->tDuration = v2970;
    v2971 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4917);
    CFlag<480>::operator=|(&v2971->uFlag, &CTS_RpSiksin);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4917);
  }
  v2972 = CFlag<480>::operator&(&p, &v3769, &CTS_TeleportMasteryRange);
  if ( CFlag<480>::operator bool(v2972) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2973 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTeleportMasteryRange_(v3649, v2973);
    }
    else
    {
      v2974 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nTeleportMasteryRange_(v3649, v2974);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rTeleportMasteryRange_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tTeleportMasteryRange_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4916);
    v5293 = 371;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4916) )
    {
      v3767 = operator new(0x50u);
      if ( v3767 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3767);
        v3277 = v2975;
      }
      else
      {
        v3277 = 0;
      }
      v3768 = v3277;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4916, v3277);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4916);
    }
    v2976 = b;
    v2977 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4916);
    v2978 = zmax<long>(v2977->tDuration, v2976);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4916)->tDuration = v2978;
    v2979 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4916);
    CFlag<480>::operator=|(&v2979->uFlag, &CTS_TeleportMasteryRange);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4916);
  }
  v2980 = CFlag<480>::operator&(&p, &v3766, &CTS_FireBarrier);
  if ( CFlag<480>::operator bool(v2980) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2981 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFireBarrier_(v3649, v2981);
    }
    else
    {
      v2982 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFireBarrier_(v3649, v2982);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFireBarrier_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFireBarrier_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4915);
    v5293 = 372;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4915) )
    {
      v3764 = operator new(0x50u);
      if ( v3764 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3764);
        v3276 = v2983;
      }
      else
      {
        v3276 = 0;
      }
      v3765 = v3276;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4915, v3276);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4915);
    }
    v2984 = b;
    v2985 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4915);
    v2986 = zmax<long>(v2985->tDuration, v2984);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4915)->tDuration = v2986;
    v2987 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4915);
    CFlag<480>::operator=|(&v2987->uFlag, &CTS_FireBarrier);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4915);
  }
  v2988 = CFlag<480>::operator&(&p, &v3763, &CTS_ChangeFoxMan);
  if ( CFlag<480>::operator bool(v2988) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2989 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nChangeFoxMan_(v3649, v2989);
    }
    else
    {
      v2990 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nChangeFoxMan_(v3649, v2990);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rChangeFoxMan_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tChangeFoxMan_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4914);
    v5293 = 373;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4914) )
    {
      v3761 = operator new(0x50u);
      if ( v3761 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3761);
        v3275 = v2991;
      }
      else
      {
        v3275 = 0;
      }
      v3762 = v3275;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4914, v3275);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4914);
    }
    v2992 = b;
    v2993 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4914);
    v2994 = zmax<long>(v2993->tDuration, v2992);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4914)->tDuration = v2994;
    v2995 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4914);
    CFlag<480>::operator=|(&v2995->uFlag, &CTS_ChangeFoxMan);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4914);
  }
  v2996 = CFlag<480>::operator&(&p, &v3760, &CTS_FixCoolTime);
  if ( CFlag<480>::operator bool(v2996) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v2997 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFixCoolTime_(v3649, v2997);
    }
    else
    {
      v2998 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nFixCoolTime_(v3649, v2998);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rFixCoolTime_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tFixCoolTime_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4913);
    v5293 = 374;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4913) )
    {
      v3758 = operator new(0x50u);
      if ( v3758 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3758);
        v3274 = v2999;
      }
      else
      {
        v3274 = 0;
      }
      v3759 = v3274;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4913, v3274);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4913);
    }
    v3000 = b;
    v3001 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4913);
    v3002 = zmax<long>(v3001->tDuration, v3000);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4913)->tDuration = v3002;
    v3003 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4913);
    CFlag<480>::operator=|(&v3003->uFlag, &CTS_FixCoolTime);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4913);
  }
  v3004 = CFlag<480>::operator&(&p, &v3757, &CTS_IncMobRateDummy);
  if ( CFlag<480>::operator bool(v3004) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3005 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncMobRateDummy_(v3649, v3005);
    }
    else
    {
      v3006 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nIncMobRateDummy_(v3649, v3006);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rIncMobRateDummy_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tIncMobRateDummy_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4912);
    v5293 = 375;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4912) )
    {
      v3755 = operator new(0x50u);
      if ( v3755 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3755);
        v3273 = v3007;
      }
      else
      {
        v3273 = 0;
      }
      v3756 = v3273;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4912, v3273);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4912);
    }
    v3008 = b;
    v3009 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4912);
    v3010 = zmax<long>(v3009->tDuration, v3008);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4912)->tDuration = v3010;
    v3011 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4912);
    CFlag<480>::operator=|(&v3011->uFlag, &CTS_IncMobRateDummy);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4912);
  }
  v3012 = CFlag<480>::operator&(&p, &v3754, &CTS_AdrenalinBoost);
  if ( CFlag<480>::operator bool(v3012) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3013 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAdrenalinBoost_(v3649, v3013);
    }
    else
    {
      v3014 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAdrenalinBoost_(v3649, v3014);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAdrenalinBoost_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAdrenalinBoost_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4911);
    v5293 = 376;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4911) )
    {
      v3752 = operator new(0x50u);
      if ( v3752 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3752);
        v3272 = v3015;
      }
      else
      {
        v3272 = 0;
      }
      v3753 = v3272;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4911, v3272);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4911);
    }
    v3016 = b;
    v3017 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4911);
    v3018 = zmax<long>(v3017->tDuration, v3016);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4911)->tDuration = v3018;
    v3019 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4911);
    CFlag<480>::operator=|(&v3019->uFlag, &CTS_AdrenalinBoost);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4911);
  }
  v3020 = CFlag<480>::operator&(&p, &v3751, &CTS_AranSmashSwing);
  if ( CFlag<480>::operator bool(v3020) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3021 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranSmashSwing_(v3649, v3021);
    }
    else
    {
      v3022 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranSmashSwing_(v3649, v3022);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAranSmashSwing_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAranSmashSwing_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4910);
    v5293 = 377;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4910) )
    {
      v3749 = operator new(0x50u);
      if ( v3749 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3749);
        v3271 = v3023;
      }
      else
      {
        v3271 = 0;
      }
      v3750 = v3271;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4910, v3271);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4910);
    }
    v3024 = b;
    v3025 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4910);
    v3026 = zmax<long>(v3025->tDuration, v3024);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4910)->tDuration = v3026;
    v3027 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4910);
    CFlag<480>::operator=|(&v3027->uFlag, &CTS_AranSmashSwing);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4910);
  }
  v3028 = CFlag<480>::operator&(&p, &v3748, &CTS_AranDrain);
  if ( CFlag<480>::operator bool(v3028) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3029 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranDrain_(v3649, v3029);
    }
    else
    {
      v3030 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranDrain_(v3649, v3030);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAranDrain_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAranDrain_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4909);
    v5293 = 378;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4909) )
    {
      v3746 = operator new(0x50u);
      if ( v3746 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3746);
        v3270 = v3031;
      }
      else
      {
        v3270 = 0;
      }
      v3747 = v3270;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4909, v3270);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4909);
    }
    v3032 = b;
    v3033 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4909);
    v3034 = zmax<long>(v3033->tDuration, v3032);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4909)->tDuration = v3034;
    v3035 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4909);
    CFlag<480>::operator=|(&v3035->uFlag, &CTS_AranDrain);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4909);
  }
  v3036 = CFlag<480>::operator&(&p, &v3745, &CTS_AranBoostEndHunt);
  if ( CFlag<480>::operator bool(v3036) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3037 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranBoostEndHunt_(v3649, v3037);
    }
    else
    {
      v3038 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nAranBoostEndHunt_(v3649, v3038);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rAranBoostEndHunt_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tAranBoostEndHunt_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4908);
    v5293 = 379;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4908) )
    {
      v3743 = operator new(0x50u);
      if ( v3743 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3743);
        v3269 = v3039;
      }
      else
      {
        v3269 = 0;
      }
      v3744 = v3269;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4908, v3269);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4908);
    }
    v3040 = b;
    v3041 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4908);
    v3042 = zmax<long>(v3041->tDuration, v3040);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4908)->tDuration = v3042;
    v3043 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4908);
    CFlag<480>::operator=|(&v3043->uFlag, &CTS_AranBoostEndHunt);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4908);
  }
  v3044 = CFlag<480>::operator&(&p, &v3742, &CTS_HiddenHyperLinkMaximization);
  if ( CFlag<480>::operator bool(v3044) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3045 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHiddenHyperLinkMaximization_(v3649, v3045);
    }
    else
    {
      v3046 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nHiddenHyperLinkMaximization_(v3649, v3046);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rHiddenHyperLinkMaximization_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tHiddenHyperLinkMaximization_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4907);
    v5293 = 380;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4907) )
    {
      v3740 = operator new(0x50u);
      if ( v3740 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3740);
        v3268 = v3047;
      }
      else
      {
        v3268 = 0;
      }
      v3741 = v3268;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4907, v3268);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4907);
    }
    v3048 = b;
    v3049 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4907);
    v3050 = zmax<long>(v3049->tDuration, v3048);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4907)->tDuration = v3050;
    v3051 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4907);
    CFlag<480>::operator=|(&v3051->uFlag, &CTS_HiddenHyperLinkMaximization);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4907);
  }
  v3052 = CFlag<480>::operator&(&p, &v3739, &CTS_RWCylinder);
  if ( CFlag<480>::operator bool(v3052) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3053 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWCylinder_(v3649, v3053);
    }
    else
    {
      v3054 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWCylinder_(v3649, v3054);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRWCylinder_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRWCylinder_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4906);
    v5293 = 381;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4906) )
    {
      v3737 = operator new(0x50u);
      if ( v3737 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3737);
        v3267 = v3055;
      }
      else
      {
        v3267 = 0;
      }
      v3738 = v3267;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4906, v3267);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4906);
    }
    v3056 = b;
    v3057 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4906);
    v3058 = zmax<long>(v3057->tDuration, v3056);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4906)->tDuration = v3058;
    v3059 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4906);
    CFlag<480>::operator=|(&v3059->uFlag, &CTS_RWCylinder);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4906);
  }
  v3060 = CFlag<480>::operator&(&p, &v3736, &CTS_RWCombination);
  if ( CFlag<480>::operator bool(v3060) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3061 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWCombination_(v3649, v3061);
    }
    else
    {
      v3062 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWCombination_(v3649, v3062);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRWCombination_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRWCombination_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4905);
    v5293 = 382;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4905) )
    {
      v3734 = operator new(0x50u);
      if ( v3734 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3734);
        v3266 = v3063;
      }
      else
      {
        v3266 = 0;
      }
      v3735 = v3266;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4905, v3266);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4905);
    }
    v3064 = b;
    v3065 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4905);
    v3066 = zmax<long>(v3065->tDuration, v3064);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4905)->tDuration = v3066;
    v3067 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4905);
    CFlag<480>::operator=|(&v3067->uFlag, &CTS_RWCombination);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4905);
  }
  v3068 = CFlag<480>::operator&(&p, &v3733, &CTS_RWMagnumBlow);
  if ( CFlag<480>::operator bool(v3068) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3069 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWMagnumBlow_(v3649, v3069);
    }
    else
    {
      v3070 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWMagnumBlow_(v3649, v3070);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRWMagnumBlow_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRWMagnumBlow_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4904);
    v5293 = 383;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4904) )
    {
      v3731 = operator new(0x50u);
      if ( v3731 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3731);
        v3265 = v3071;
      }
      else
      {
        v3265 = 0;
      }
      v3732 = v3265;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4904, v3265);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4904);
    }
    v3072 = b;
    v3073 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4904);
    v3074 = zmax<long>(v3073->tDuration, v3072);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4904)->tDuration = v3074;
    v3075 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4904);
    CFlag<480>::operator=|(&v3075->uFlag, &CTS_RWMagnumBlow);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4904);
  }
  v3076 = CFlag<480>::operator&(&p, &v3730, &CTS_RWBarrier);
  if ( CFlag<480>::operator bool(v3076) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3077 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWBarrier_(v3649, v3077);
    }
    else
    {
      v3078 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWBarrier_(v3649, v3078);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRWBarrier_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRWBarrier_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4903);
    v5293 = 384;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4903) )
    {
      v3728 = operator new(0x50u);
      if ( v3728 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3728);
        v3264 = v3079;
      }
      else
      {
        v3264 = 0;
      }
      v3729 = v3264;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4903, v3264);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4903);
    }
    v3080 = b;
    v3081 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4903);
    v3082 = zmax<long>(v3081->tDuration, v3080);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4903)->tDuration = v3082;
    v3083 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4903);
    CFlag<480>::operator=|(&v3083->uFlag, &CTS_RWBarrier);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4903);
  }
  v3084 = CFlag<480>::operator&(&p, &v3727, &CTS_RWBarrierHeal);
  if ( CFlag<480>::operator bool(v3084) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3085 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWBarrierHeal_(v3649, v3085);
    }
    else
    {
      v3086 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWBarrierHeal_(v3649, v3086);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRWBarrierHeal_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRWBarrierHeal_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4902);
    v5293 = 385;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4902) )
    {
      v3725 = operator new(0x50u);
      if ( v3725 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3725);
        v3263 = v3087;
      }
      else
      {
        v3263 = 0;
      }
      v3726 = v3263;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4902, v3263);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4902);
    }
    v3088 = b;
    v3089 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4902);
    v3090 = zmax<long>(v3089->tDuration, v3088);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4902)->tDuration = v3090;
    v3091 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4902);
    CFlag<480>::operator=|(&v3091->uFlag, &CTS_RWBarrierHeal);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4902);
  }
  v3092 = CFlag<480>::operator&(&p, &v3724, &CTS_RWMaximizeCannon);
  if ( CFlag<480>::operator bool(v3092) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3093 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWMaximizeCannon_(v3649, v3093);
    }
    else
    {
      v3094 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWMaximizeCannon_(v3649, v3094);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRWMaximizeCannon_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRWMaximizeCannon_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4901);
    v5293 = 386;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4901) )
    {
      v3722 = operator new(0x50u);
      if ( v3722 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3722);
        v3262 = v3095;
      }
      else
      {
        v3262 = 0;
      }
      v3723 = v3262;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4901, v3262);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4901);
    }
    v3096 = b;
    v3097 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4901);
    v3098 = zmax<long>(v3097->tDuration, v3096);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4901)->tDuration = v3098;
    v3099 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4901);
    CFlag<480>::operator=|(&v3099->uFlag, &CTS_RWMaximizeCannon);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4901);
  }
  v3100 = CFlag<480>::operator&(&p, &v3721, &CTS_RWOverHeat);
  if ( CFlag<480>::operator bool(v3100) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3101 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWOverHeat_(v3649, v3101);
    }
    else
    {
      v3102 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWOverHeat_(v3649, v3102);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRWOverHeat_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRWOverHeat_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4900);
    v5293 = 387;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4900) )
    {
      v3719 = operator new(0x50u);
      if ( v3719 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3719);
        v3261 = v3103;
      }
      else
      {
        v3261 = 0;
      }
      v3720 = v3261;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4900, v3261);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4900);
    }
    v3104 = b;
    v3105 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4900);
    v3106 = zmax<long>(v3105->tDuration, v3104);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4900)->tDuration = v3106;
    v3107 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4900);
    CFlag<480>::operator=|(&v3107->uFlag, &CTS_RWOverHeat);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4900);
  }
  v3108 = CFlag<480>::operator&(&p, &v3718, &CTS_RWMovingEvar);
  if ( CFlag<480>::operator bool(v3108) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3109 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWMovingEvar_(v3649, v3109);
    }
    else
    {
      v3110 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nRWMovingEvar_(v3649, v3110);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rRWMovingEvar_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tRWMovingEvar_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4899);
    v5293 = 388;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4899) )
    {
      v3716 = operator new(0x50u);
      if ( v3716 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3716);
        v3260 = v3111;
      }
      else
      {
        v3260 = 0;
      }
      v3717 = v3260;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4899, v3260);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4899);
    }
    v3112 = b;
    v3113 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4899);
    v3114 = zmax<long>(v3113->tDuration, v3112);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4899)->tDuration = v3114;
    v3115 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4899);
    CFlag<480>::operator=|(&v3115->uFlag, &CTS_RWMovingEvar);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4899);
  }
  v3116 = CFlag<480>::operator&(&p, &v3715, &CTS_Stigma);
  if ( CFlag<480>::operator bool(v3116) )
  {
    if ( SecondaryStat::EnDecode4Byte(&p) )
    {
      v3117 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStigma_(v3649, v3117);
    }
    else
    {
      v3118 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      SecondaryStat::_ZtlSecurePut_nStigma_(v3649, v3118);
    }
    t = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rStigma_(v3649, t);
    b = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_tStigma_(v3649, b + tCurTime);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4898);
    v5293 = 389;
    if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4898) )
    {
      v3713 = operator new(0x50u);
      if ( v3713 )
      {
        SecondaryStat::VIEWELEM::VIEWELEM(v3713);
        v3259 = v3119;
      }
      else
      {
        v3259 = 0;
      }
      v3714 = v3259;
      ZRef<SecondaryStat::VIEWELEM>::operator=(&v4898, v3259);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4898);
    }
    v3120 = b;
    v3121 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4898);
    v3122 = zmax<long>(v3121->tDuration, v3120);
    ZRef<SecondaryStat::VIEWELEM>::operator->(&v4898)->tDuration = v3122;
    v3123 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4898);
    CFlag<480>::operator=|(&v3123->uFlag, &CTS_Stigma);
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4898);
  }
  v3124 = CFlag<480>::operator&(&p, &v3712, &CTS_SoulMP);
  if ( CFlag<480>::operator bool(v3124) )
  {
    v3125 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xSoulMP_(v3649, v3125);
    v3126 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_rSoulMP_(v3649, v3126);
  }
  v3127 = CFlag<480>::operator&(&p, &v3711, &CTS_FullSoulMP);
  if ( CFlag<480>::operator bool(v3127) )
  {
    v3128 = timeGetTime();
    v3129 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xFullSoulMP_(v3649, v3129 + v3128);
    v4897 = SecondaryStat::_ZtlSecureGet_xFullSoulMP_(v3649);
  }
  ZMap<unsigned long,int,unsigned long>::RemoveAll(&v3649->mBuffedForSpecMap);
  v5289 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
  for ( i = 0; i < v5289; ++i )
  {
    key = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    v4893 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    ZMap<unsigned long,int,unsigned long>::SetAt(&v3649->mBuffedForSpecMap, &key, &v4893);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4894);
    v5293 = 390;
    v3710 = -key;
    if ( ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &v3710, &v4894) )
    {
      v3130 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4894);
      v3130->bEnable = v4893;
    }
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4894);
  }
  v3131 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
  SecondaryStat::_ZtlSecurePut_nDefenseAtt(v3649, v3131);
  v3132 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
  SecondaryStat::_ZtlSecurePut_nDefenseState(v3649, v3132);
  v3133 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
  SecondaryStat::_ZtlSecurePut_nPVPDamage(v3649, v3133);
  v3134 = CFlag<480>::operator&(&p, &v3709, &CTS_Dice);
  if ( CFlag<480>::operator bool(v3134) )
  {
    for ( j = 0; j < 22; ++j )
    {
      v3135 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      v3649->aDiceInfo[j] = v3135;
    }
  }
  v3136 = CFlag<480>::operator&(&p, &v3708, &CTS_KillingPoint);
  if ( CFlag<480>::operator bool(v3136) )
  {
    v3137 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_nKillingPoint_(v3649, v3137);
  }
  v3138 = CFlag<480>::operator&(&p, &v3707, &CTS_PinkbeanRollingGrade);
  if ( CFlag<480>::operator bool(v3138) )
  {
    v3139 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_nPinkbeanRollingGrade_(v3649, v3139);
  }
  v3140 = CFlag<480>::operator&(&p, &v3706, &CTS_Judgement);
  if ( CFlag<480>::operator bool(v3140) )
  {
    v3141 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xJudgement_(v3649, v3141);
  }
  v3142 = CFlag<480>::operator&(&p, &v3705, &CTS_StackBuff);
  if ( CFlag<480>::operator bool(v3142) )
  {
    v3143 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_mStackBuff_(v3649, v3143);
  }
  v3144 = CFlag<480>::operator&(&p, &v3704, &CTS_Trinity);
  if ( CFlag<480>::operator bool(v3144) )
  {
    v3145 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_mTrinity_(v3649, v3145);
  }
  v3146 = CFlag<480>::operator&(&p, &v3703, &CTS_ElementalCharge);
  if ( CFlag<480>::operator bool(v3146) )
  {
    v3147 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_mElementalCharge_(v3649, v3147);
    v3148 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_wElementalCharge_(v3649, v3148);
    v3149 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_uElementalCharge_(v3649, v3149);
    v3150 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_zElementalCharge_(v3649, v3150);
  }
  v3151 = CFlag<480>::operator&(&p, &v3702, &CTS_LifeTidal);
  if ( CFlag<480>::operator bool(v3151) )
  {
    v3152 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_mLifeTidal_(v3649, v3152);
  }
  v3153 = CFlag<480>::operator&(&p, &v3701, &CTS_AntiMagicShell);
  if ( CFlag<480>::operator bool(v3153) )
  {
    v3154 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bAntiMagicShell_(v3649, v3154 != 0);
  }
  v3155 = CFlag<480>::operator&(&p, &v3700, &CTS_Larkness);
  if ( CFlag<480>::operator bool(v3155) )
  {
    while ( !std::queue<SecondaryStat::LarknessInfo,std::deque<SecondaryStat::LarknessInfo,std::allocator<SecondaryStat::LarknessInfo>>>::empty(&v3649->qLarknessInfo) )
      std::queue<SecondaryStat::LarknessInfo,std::deque<SecondaryStat::LarknessInfo,std::allocator<SecondaryStat::LarknessInfo>>>::pop(&v3649->qLarknessInfo);
    for ( k = 0; k < 2; ++k )
    {
      SecondaryStat::LarknessInfo::Decode(&_Val, iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      if ( SecondaryStat::LarknessInfo::_ZtlSecureGet_rLarkness(&_Val) > 0 )
        std::queue<SecondaryStat::LarknessInfo,std::deque<SecondaryStat::LarknessInfo,std::allocator<SecondaryStat::LarknessInfo>>>::push(
          &v3649->qLarknessInfo,
          &_Val);
    }
    v3156 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_dgLarkness_(v3649, v3156);
    v3157 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_lgLarkness_(v3649, v3157);
  }
  v3158 = CFlag<480>::operator&(&p, &v3699, &CTS_IgnoreTargetDEF);
  if ( CFlag<480>::operator bool(v3158) )
  {
    v3159 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_mIgnoreTargetDEF_(v3649, v3159);
  }
  v3160 = CFlag<480>::operator&(&p, &v3698, &CTS_StopForceAtomInfo);
  if ( CFlag<480>::operator bool(v3160) )
    SecondaryStat::StopForceAtom::Decode(&v3649->sStopForceAtomInfo_, iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
  v3161 = CFlag<480>::operator&(&p, &v3697, &CTS_SmashStack);
  if ( CFlag<480>::operator bool(v3161) )
  {
    v3162 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xSmashStack_(v3649, v3162);
  }
  v3163 = CFlag<480>::operator&(&p, &v3696, &CTS_MobZoneState);
  if ( CFlag<480>::operator bool(v3163) )
  {
    std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0>>::clear(&v3649->setMobZoneState.comp);
    v4889 = 1;
    while ( v4889 )
    {
      v4888 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      if ( v4888 <= 0 )
      {
        v4889 = 0;
        break;
      }
      v3695 = v4888;
      std::_Tree<std::_Tset_traits<unsigned long,std::less<unsigned long>,std::allocator<unsigned long>,0>>::insert(
        &v3649->setMobZoneState.comp,
        &v3694,
        &v3695);
    }
  }
  v3164 = CFlag<480>::operator&(&p, &v3693, &CTS_Slow);
  if ( CFlag<480>::operator bool(v3164) )
  {
    v3165 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bSlowIgnoreMoveSkill_(v3649, v3165 != 0);
  }
  v3166 = CFlag<480>::operator&(&p, &v3692, &CTS_IceAura);
  if ( CFlag<480>::operator bool(v3166) )
  {
    v3167 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bIceAura_(v3649, v3167);
  }
  v3168 = CFlag<480>::operator&(&p, &v3691, &CTS_KnightsAura);
  if ( CFlag<480>::operator bool(v3168) )
  {
    v3169 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bKnightsAura_(v3649, v3169);
  }
  v3170 = CFlag<480>::operator&(&p, &v3690, &CTS_IgnoreMobpdpR);
  if ( CFlag<480>::operator bool(v3170) )
  {
    v3171 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bIgnoreMobpdpR_(v3649, v3171);
  }
  v3172 = CFlag<480>::operator&(&p, &v3689, &CTS_BdR);
  if ( CFlag<480>::operator bool(v3172) )
  {
    v3173 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bBdR_(v3649, v3173);
  }
  v3174 = CFlag<480>::operator&(&p, &v3688, &CTS_DropRIncrease);
  if ( CFlag<480>::operator bool(v3174) )
  {
    v3175 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xDropRIncrease_(v3649, v3175);
    v3176 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bDropRIncrease_(v3649, v3176);
  }
  v3177 = CFlag<480>::operator&(&p, &v3687, &CTS_PoseType);
  if ( CFlag<480>::operator bool(v3177) )
  {
    v3178 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bPoseType_(v3649, v3178);
  }
  v3179 = CFlag<480>::operator&(&p, &v3686, &CTS_Beholder);
  if ( CFlag<480>::operator bool(v3179) )
  {
    v3180 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_sBeholder_(v3649, v3180);
    v3181 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_ssBeholder_(v3649, v3181);
  }
  v3182 = CFlag<480>::operator&(&p, &v3685, &CTS_CrossOverChain);
  if ( CFlag<480>::operator bool(v3182) )
  {
    v3183 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xCrossOverChain_(v3649, v3183);
  }
  v3184 = CFlag<480>::operator&(&p, &v3684, &CTS_Reincarnation);
  if ( CFlag<480>::operator bool(v3184) )
  {
    v3185 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xReincarnation_(v3649, v3185);
  }
  v3186 = CFlag<480>::operator&(&p, &v3683, &CTS_ExtremeArchery);
  if ( CFlag<480>::operator bool(v3186) )
  {
    v3187 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bExtremeArchery_(v3649, v3187);
    v3188 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xExtremeArchery_(v3649, v3188);
  }
  v3189 = CFlag<480>::operator&(&p, &v3682, &CTS_QuiverCatridge);
  if ( CFlag<480>::operator bool(v3189) )
  {
    v3190 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xQuiverCatridge_(v3649, v3190);
  }
  v3191 = CFlag<480>::operator&(&p, &v3681, &CTS_ImmuneBarrier);
  if ( CFlag<480>::operator bool(v3191) )
  {
    v3192 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xImmuneBarrier_(v3649, v3192);
  }
  v3193 = CFlag<480>::operator&(&p, &v3680, &CTS_ZeroAuraStr);
  if ( CFlag<480>::operator bool(v3193) )
  {
    v3194 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bZeroAuraStr_(v3649, v3194);
  }
  v3195 = CFlag<480>::operator&(&p, &v3679, &CTS_ZeroAuraSpd);
  if ( CFlag<480>::operator bool(v3195) )
  {
    v3196 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bZeroAuraSpd_(v3649, v3196);
  }
  v3197 = CFlag<480>::operator&(&p, &v3678, &CTS_ArmorPiercing);
  if ( CFlag<480>::operator bool(v3197) )
  {
    v3198 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bArmorPiercing_(v3649, v3198);
  }
  v3199 = CFlag<480>::operator&(&p, &v3677, &CTS_SharpEyes);
  if ( CFlag<480>::operator bool(v3199) )
  {
    v3200 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_mSharpEyes_(v3649, v3200);
  }
  v3201 = CFlag<480>::operator&(&p, &v3676, &CTS_AdvancedBless);
  if ( CFlag<480>::operator bool(v3201) )
  {
    v3202 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xAdvancedBless_(v3649, v3202);
  }
  v3203 = CFlag<480>::operator&(&p, &v3675, &CTS_DotHealHPPerSecond);
  if ( CFlag<480>::operator bool(v3203) )
  {
    v3204 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xDotHealHPPerSecond_(v3649, v3204);
  }
  v3205 = CFlag<480>::operator&(&p, &v3674, &CTS_SpiritGuard);
  if ( CFlag<480>::operator bool(v3205) )
  {
    v3206 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_nSpiritGuard_(v3649, v3206);
  }
  v3207 = CFlag<480>::operator&(&p, &v3673, &CTS_KnockBack);
  if ( CFlag<480>::operator bool(v3207) )
  {
    v3208 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_nKnockBack_(v3649, v3208);
    v3209 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bKnockBack_(v3649, v3209);
  }
  v3210 = CFlag<480>::operator&(&p, &v3672, &CTS_ShieldAttack);
  if ( CFlag<480>::operator bool(v3210) )
  {
    v3211 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xShieldAttack_(v3649, v3211);
  }
  v3212 = CFlag<480>::operator&(&p, &v3671, &CTS_SSFShootingAttack);
  if ( CFlag<480>::operator bool(v3212) )
  {
    v3213 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xSSFShootingAttack_(v3649, v3213);
  }
  v3214 = CFlag<480>::operator&(&p, &v3670, &CTS_BMageAura);
  if ( CFlag<480>::operator bool(v3214) )
  {
    v3215 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xBMageAura_(v3649, v3215);
    v3216 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bBMageAura_(v3649, v3216);
  }
  v3217 = CFlag<480>::operator&(&p, &v3669, &CTS_BattlePvP_Helena_Mark);
  if ( CFlag<480>::operator bool(v3217) )
  {
    v3218 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_cBattlePvP_Helena_Mark_(v3649, v3218);
  }
  v3219 = CFlag<480>::operator&(&p, &v3668, &CTS_PinkbeanAttackBuff);
  if ( CFlag<480>::operator bool(v3219) )
  {
    v3220 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bPinkbeanAttackBuff_(v3649, v3220);
  }
  v3221 = CFlag<480>::operator&(&p, &v3667, &CTS_RoyalGuardState);
  if ( CFlag<480>::operator bool(v3221) )
  {
    v3222 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bRoyalGuardState_(v3649, v3222);
    v3223 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xRoyalGuardState_(v3649, v3223);
  }
  v3224 = CFlag<480>::operator&(&p, &v3666, &CTS_MichaelSoulLink);
  if ( CFlag<480>::operator bool(v3224) )
  {
    v3225 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xMichaelSoulLink_(v3649, v3225);
    v3226 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bMichaelSoulLink_(v3649, v3226);
    v3227 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_cMichaelSoulLink_(v3649, v3227);
    v3228 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_yMichaelSoulLink_(v3649, v3228);
  }
  v3229 = CFlag<480>::operator&(&p, &v3665, &CTS_AdrenalinBoost);
  if ( CFlag<480>::operator bool(v3229) )
  {
    v3230 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_cAdrenalinBoost_(v3649, v3230);
  }
  v3231 = CFlag<480>::operator&(&p, &v3664, &CTS_RWCylinder);
  if ( CFlag<480>::operator bool(v3231) )
  {
    v3232 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bRWCylinder_(v3649, v3232);
    v3233 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_cRWCylinder_(v3649, v3233);
  }
  v3234 = CFlag<480>::operator&(&p, &v3663, &CTS_RWMagnumBlow);
  if ( CFlag<480>::operator bool(v3234) )
  {
    v3235 = CInPacket::Decode2(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bRWMagnumBlow_(v3649, v3235);
    v3236 = CInPacket::Decode1(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xRWMagnumBlow_(v3649, v3236);
  }
  v3237 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
  SecondaryStat::_ZtlSecurePut_nViperEnergyCharge_(v3649, v3237);
  v3238 = CFlag<480>::operator&(&p, &v3662, &CTS_BladeStance);
  if ( CFlag<480>::operator bool(v3238) )
  {
    v3239 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_xBladeStance_(v3649, v3239);
  }
  v3240 = CFlag<480>::operator&(&p, &v3661, &CTS_DarkSight);
  if ( CFlag<480>::operator bool(v3240) )
  {
    v3241 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_cDarkSight_(v3649, v3241);
  }
  v3242 = CFlag<480>::operator&(&p, &v3660, &CTS_Stigma);
  if ( CFlag<480>::operator bool(v3242) )
  {
    v3243 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_bStigma_(v3649, v3243);
  }
  for ( index = 0; index < 8; ++index )
  {
    v4886 = ZRef<TemporaryStatBase<long>>::operator TemporaryStatBase<long> *(&v3649->aTemporaryStat[index]);
    v3244 = get_CTS_from_TSIndex(&v3659, index);
    v3245 = CFlag<480>::operator&(&p, &v3658, v3244);
    if ( CFlag<480>::operator bool(v3245) )
    {
      v4886->vfptr[6].__vecDelDtor(v4886, iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
      t = *TemporaryStatBase<long>::GetReason(v4886);
      b = (v4886->vfptr[4].__vecDelDtor)(v4886);
      ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4885);
      v5293 = 391;
      if ( !ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::GetAt(mElem, &t, &v4885) )
      {
        v3656 = operator new(0x50u);
        if ( v3656 )
        {
          SecondaryStat::VIEWELEM::VIEWELEM(v3656);
          v3258 = v3246;
        }
        else
        {
          v3258 = 0;
        }
        v3657 = v3258;
        ZRef<SecondaryStat::VIEWELEM>::operator=(&v4885, v3258);
        ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &t, &v4885);
      }
      v3247 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4885);
      v3247->tDuration = b;
      v3248 = get_CTS_from_TSIndex(&v3655, index);
      v3249 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4885);
      CFlag<480>::operator=|(&v3249->uFlag, v3248);
      v5293 = -1;
      ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4885);
    }
  }
  SecondaryStat::DecodeIndieTempStat(v3649, &p, iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
  v3250 = CFlag<480>::operator&(&p, &v3654, &CTS_DarkSight);
  if ( CFlag<480>::operator bool(v3250) )
  {
    SecondaryStat::_ZtlSecurePut_mDarkSight_(v3649, tCurTime);
    if ( !SecondaryStat::_ZtlSecureGet_mDarkSight_(v3649) )
    {
      v3251 = SecondaryStat::_ZtlSecureGet_mDarkSight_(v3649);
      SecondaryStat::_ZtlSecurePut_mDarkSight_(v3649, v3251 + 1);
    }
  }
  v3252 = CFlag<480>::operator&(&p, &v3653, &CTS_UsingScouter);
  if ( CFlag<480>::operator bool(v3252) )
  {
    v4883 = SecondaryStat::_ZtlSecureGet_nUsingScouter_(v3649);
    v3253 = CInPacket::Decode4(iPacketNoticeMeeeeeeeeeeeeeeeeeeeeee);
    SecondaryStat::_ZtlSecurePut_nUsingScouter_(v3649, v3253);
    ZRef<SecondaryStat::VIEWELEM>::ZRef<SecondaryStat::VIEWELEM>(&v4884);
    v5293 = 392;
    v3651 = operator new(0x50u);
    if ( v3651 )
    {
      SecondaryStat::VIEWELEM::VIEWELEM(v3651);
      v3257 = v3254;
    }
    else
    {
      v3257 = 0;
    }
    v3652 = v3257;
    ZRef<SecondaryStat::VIEWELEM>::operator=(&v4884, v3257);
    if ( SecondaryStat::_ZtlSecureGet_nUsingScouter_(v3649) )
    {
      ZRef<SecondaryStat::VIEWELEM>::operator->(&v4884)->tDuration = 0x7FFFFFFF;
      v3255 = ZRef<SecondaryStat::VIEWELEM>::operator->(&v4884);
      CFlag<480>::operator=|(&v3255->uFlag, &CTS_UsingScouter);
      v3650 = SecondaryStat::_ZtlSecureGet_nUsingScouter_(v3649);
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &v3650, &v4884);
    }
    else if ( v4883 )
    {
      ZRef<SecondaryStat::VIEWELEM>::operator->(&v4884)->bEnable = 0;
      ZMap<long,ZRef<SecondaryStat::VIEWELEM>,long>::SetAt(mElem, &v4883, &v4884);
    }
    v5293 = -1;
    ZRef<SecondaryStat::VIEWELEM>::~ZRef<SecondaryStat::VIEWELEM>(&v4884);
  }
  CFlag<480>::CFlag<480>(result, &p, 0x1E0u);
  return result;
}